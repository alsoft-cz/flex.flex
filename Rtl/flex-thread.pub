---------------------------------------------------------------------------------------------------
module public thread =
-- Flex Run-time Library
-- Thread variables
-- Copyright (C) 1999-2003 A && L soft
----------------------------------------------------------------------------------------------------

type
    t_thread_id    = t_rtl_native_unsigned;

type
    t_thread_ref;
    p_thread_ref   = ^t_thread_ref;

type
    t_thread_header;
    p_thread_header = ^t_thread_header;

    t_thread_ref   = record
      threadheader : p_thread_header;
      next_ref     : p_thread_ref;
      prev_ref     : p_thread_ref;
      end record;

----------------------------------------------------------------------------------------------------
#separate public vars;
----------------------------------------------------------------------------------------------------

type
    t_rtl_thread_entry = procedure (
    userdata       : in t_rtl_pointer);
    p_rtl_thread_entry = ^t_rtl_thread_entry;


----------------------------------------------------------------------------------------------------
procedure rtl_start_thread(
    thread_ref     : out ref t_thread_ref;
    thread_entry   : in p_rtl_thread_entry;
    suspended      : in t_rtl_logical8:=false;
    userdata       : in t_rtl_pointer:=nil
    );
----------------------------------------------------------------------------------------------------
procedure rtl_init_main_task;
----------------------------------------------------------------------------------------------------
procedure rtl_deinit_main_task;
----------------------------------------------------------------------------------------------------
procedure rtl_register_task;
----------------------------------------------------------------------------------------------------
procedure rtl_unregister_task;
----------------------------------------------------------------------------------------------------
procedure rtl_kill_and_finish_thread(
    thread_ref     : in out ref t_thread_ref);
----------------------------------------------------------------------------------------------------
procedure rtl_wait_and_finish_thread(
    thread_ref     : in out ref t_thread_ref);
----------------------------------------------------------------------------------------------------
procedure rtl_wait_for_finish_thread(
    thread_ref     : in ref t_thread_ref);
----------------------------------------------------------------------------------------------------
procedure rtl_copy_thread_ref(
    inthread_ref   : in ref t_thread_ref;
    outthread_ref  : in out ref t_thread_ref);
----------------------------------------------------------------------------------------------------
procedure rtl_discard_thread_ref(
    thread_ref  : in out ref t_thread_ref);
----------------------------------------------------------------------------------------------------
procedure rtl_get_current_thread_ref(
    thread_ref  : out ref t_thread_ref);
----------------------------------------------------------------------------------------------------


end thread;