----------------------------------------------------------------------------------------------------
module public ci_oper =
-- P©eklada‡ Flexu.
-- Sestavov n¡ operand–.
----------------------------------------------------------------------------------------------------
-- Ondra : 05.04.2002 : Vytvo©il
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
procedure nullop (
    op             : out ioper;                  -- operand
    optype         : in ioptype);                -- typ operandu
-- Nulov n¡ operandu.
----------------------------------------------------------------------------------------------------
procedure newopreg (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o pr–bˆhu generov n¡
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    op             : out ioper;                  -- operand
    size           : in t_unsigned;              -- velikost registru
    mode           : in iregallocmode;           -- re‘im alokace registru
    oldop          : in ioper);                  -- p–vodn¡ operand
-- Nov˜ operand typu IO_REG s alokac¡ nov‚ho registru.
----------------------------------------------------------------------------------------------------
procedure newopuse (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o pr–bˆhu generov n¡
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    op             : out ioper;                  -- operand
    size           : in t_unsigned;              -- velikost registru
    reg            : in ireg);                   -- registr
-- Nov˜ operand typu IO_REG s pou‘it¡m dodan‚ho registru.
----------------------------------------------------------------------------------------------------
procedure newoptemp (
    inst           : in out icodeinst;           -- instance
    info           : in igeninfo;                -- informace o p©ekladu
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    op             : out ioper;                  -- operand
    size           : in t_unsigned);             -- velikost pracovn¡ pamˆti
-- Vyalokuje pracovn¡ prostor na stacku a sestav¡ odpov¡daj¡c¡ operand.
----------------------------------------------------------------------------------------------------
procedure newopstack (
    inst           : in out icodeinst;           -- instance
    info           : in igeninfo;                -- informace o p©ekladu
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    op             : out ioper;                  -- operand
    size           : in t_unsigned);             -- velikost hodnoty na stacku
-- Nov˜ operand typu IO_STACK.
----------------------------------------------------------------------------------------------------
procedure shiftop (
    op             : in out ioper;               -- operand
    disp           : in t_signed);               -- posuv
-- P©i‡te k adresn¡mu operandu zadan˜ posuv (displacement).
----------------------------------------------------------------------------------------------------
procedure shiftopindex (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o pr–bˆhu generov n¡
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    op             : in out ioper;               -- operand
    ireg           : in iunireg;                 -- registr
    iscale         : in t_unsigned);             -- mˆ©¡tko
-- P©i‡te k adresn¡mu operandu zadan˜ posuv (registr*scale).
----------------------------------------------------------------------------------------------------
procedure unshiftop (
    op             : in out ioper;               -- operand
    disp           : in t_signed);               -- posuv
-- Ode‡te od adresn¡ho operandu zadan˜ posuv (displacement).
----------------------------------------------------------------------------------------------------
procedure adjustoprel (
    inst           : in out icodeinst;           -- instance
    info           : in igeninfo;                -- informace o p©ekladu
    cond           : in icond;                   -- podm¡nka skoku
    op             : in out ioper);              -- operand
-- Uprav¡ velikost operandu skokov‚ instrukce tak, aby se pou‘il p©ednostnˆ
-- short jump (8bitov  relativn¡ adresa) a teprve v p©¡padech, kdy je to
-- vylo‘enˆ nutn‚, se pou‘il near jump (32bitov  relativn¡ adresa). Nen¡
-- pou‘iteln‚ nap©¡klad pro vol n¡ procedury, kter‚ se v‘dy chov  jako near
-- jump.
----------------------------------------------------------------------------------------------------
procedure getavailregs (
    context        : in iexprcontext;            -- kontext generov n¡ v˜razu
    availregs      : out iuniregset);            -- mno‘ina voln˜ch registr–
-- Vr t¡ mno‘inu v¨ech voln˜ch registr–.
----------------------------------------------------------------------------------------------------
procedure reserveavailregs (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o pr–bˆhu generov n¡
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    exclusion      : in iuniregset;              -- vynech van‚ registry
    availregs      : out iuniregset;             -- mno‘ina voln˜ch registr–
    minregs        : in t_unsigned;              -- minim ln¡ po‡et registr–
    _bit8          : in t_logical);              -- T-bude pot©eba 8-mi bitov˜ reg.
-- Vr t¡ mno‘inu v¨ech voln˜ch registr–, kromˆ registr– z EXCLUSION.
-- Pokud nen¡ k dispozici alespo¤ MINREGS registr–, alokuje nˆjak‚ pou‘it‚.
-- Je-li BIT8=True, zajist¡, aby byl k dispozici je¨tˆ nˆjak˜ jin˜ registr
-- ne‘ ESI a EDI.
----------------------------------------------------------------------------------------------------
procedure freeavailregs (
    info           : in igeninfo;                -- informace o p©ekladu
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    availregs      : in out iuniregset);         -- mno‘ina voln˜ch registr–
-- Uvoln¡ mno‘inu voln˜ch registr–.
----------------------------------------------------------------------------------------------------
procedure areavailregs (
    context        : in iexprcontext;            -- kontext generov n¡ v˜razu
    n              : in t_unsigned)              -- velikost registru v bytech
    return t_logical;
-- True, je-li k dispozici alespo¤ jeden N-bytov˜ registr.
----------------------------------------------------------------------------------------------------
procedure regcount (
    regs           : in iuniregset;              -- mno‘ina registr–
    n              : in t_unsigned)              -- velikost registru v bytech
    return t_unsigned;                           -- kolik registr– m me
-- Spo‡¡t , kolik je n-bytov˜ch registr– v REGS.
----------------------------------------------------------------------------------------------------
procedure getopregs (
    op             : in ioper)                   -- operand
    return iuniregset;                           -- registry pou‘it‚ operandem
-- Mno‘ina registr– pou‘it˜ch operandem.
----------------------------------------------------------------------------------------------------
procedure composeop (
    inst           : in out icodeinst;               -- instance
    info           : in out igeninfo;            -- informace o pr–bˆhu generov n¡
    context        : in out iexprcontext;            -- kontext generov n¡ v˜razu
    op1            : in ioper;                   -- p–vodn¡ operand (pamˆŸ)
    opreg          : in ioper;          -- p–vodn¡ operand (registr)
    op2            : out ioper);         -- odvozen˜ operand
-- Vytvo©¡ OP2 podle OP1 a OPREG.
-- OP1 mus¡ b˜t typu IO_MEM, OPREG typu IO_REG.
----------------------------------------------------------------------------------------------------
procedure opregtomem (
    op             : in out ioper;               -- operand
    size           : in t_unsigned);             -- velikost v˜sledn‚ho operandu
-- Operand typu IO_IMM nebo IO_REG zmˆn¡ na IO_MEM.
----------------------------------------------------------------------------------------------------
procedure cloneop (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o pr–bˆhu generov n¡
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    op1            : in ioper;                   -- p–vodn¡ operand (pamˆŸ)
    op2            : out ioper);                 -- odvozen˜ operand
-- OP2 := OP1.
----------------------------------------------------------------------------------------------------
procedure separateopreg (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o pr–bˆhu generov n¡
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    op1            : in ioper;                   -- p–vodn¡ operand
    op2            : out ioper);                  -- odvozen˜ operand
-- Z OP1 vyseparuje b zov˜ nebo indexn¡ registr.
-- OP1 mus¡ b˜t IO_MEM s b zov˜m nebo indexn¡m registrem.
----------------------------------------------------------------------------------------------------
procedure resizereg (
    reg            : in ireg;                    -- p–vodn¡ registr
    size           : in t_unsigned)              -- po‘adovan  velikost registru
    return ireg;                                 -- v˜sledn˜ registr
-- P©evede registr na zadanou velikost.
----------------------------------------------------------------------------------------------------
procedure saveregs (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o pr–bˆhu generov n¡
    context        : in out iexprcontext);       -- kontext generov n¡ v˜razu
-- Ulo‘¡ na stack v¨echny pou‘it‚ registry.
----------------------------------------------------------------------------------------------------
               
end ci_oper;