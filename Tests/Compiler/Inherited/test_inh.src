----------------------------------------------------------------------------------------------------
program test_inherited =
-- Test implementace volani metody predka.
----------------------------------------------------------------------------------------------------

with
  standard,
  standard.console;



----------------------------------------------------------------------------------------------------
class c_predek;    type p_predek   = ^class c_predek;
class c_potomek1;  type p_potomek1 = ^class c_potomek1;
class c_potomek2;  type p_potomek2 = ^class c_potomek2;
class c_potomek3;  type p_potomek3 = ^class c_potomek3;
----------------------------------------------------------------------------------------------------


type
  t_method         = procedure(indent: in t_unsigned := 0);
  p_method         = ^t_method;


----------------------------------------------------------------------------------------------------
procedure write_tag (
    t : in t_tag) =
----------------------------------------------------------------------------------------------------
begin
  if t = c_predek:tag then write('c_predek')
  elsif t = c_potomek1:tag then write('c_potomek1');
  elsif t = c_potomek2:tag then write('c_potomek2');
  elsif t = c_potomek3:tag then write('c_potomek3');
  else write('<UNKNOWN!>');
    end if;
  end write_tag;



----------------------------------------------------------------------------------------------------
class c_predek =
----------------------------------------------------------------------------------------------------

  var
    name : t_char32str;


  --------------------------------------------------------------------------------------------------
  procedure do_indent (
      indent       : t_unsigned) =
  --------------------------------------------------------------------------------------------------
  begin
    for i in 1..indent loop
      write('   ');
      end loop;
    end do_indent;



  --------------------------------------------------------------------------------------------------
  virtual say_name =
  --------------------------------------------------------------------------------------------------
  begin
    write('c_predek.say_name: tag=');
    write_tag((^this)^:tag);
    write(', name=');
    write_line(name);
    end say_name;



  --------------------------------------------------------------------------------------------------
  virtual introduce =
  --------------------------------------------------------------------------------------------------
  begin
    write('c_predek.introduce: tag=');
    write_tag((^this)^:tag);
    write_line('');
    end introduce;


  
  --------------------------------------------------------------------------------------------------
  static static_method (
      indent       : t_unsigned := 0) =
  --------------------------------------------------------------------------------------------------
  begin
    do_indent(indent);
    write_line('c_predek.static_method');
    end static_method;



  --------------------------------------------------------------------------------------------------
  virtual virtual_method (
      indent       : t_unsigned := 0) =
  --------------------------------------------------------------------------------------------------
  begin 
    do_indent(indent);
    write_line('c_predek.virtual_method');
    do_indent(indent);
    say_name;
    do_indent(indent);
    introduce;
    end virtual_method;

  

  --------------------------------------------------------------------------------------------------
  virtual virtual_via_pointer : t_method =
  --------------------------------------------------------------------------------------------------
  begin 
    do_indent(indent);
    write_line('c_predek.virtual_via_pointer');
    do_indent(indent);
    say_name;
    do_indent(indent);
    introduce;
    end virtual_via_pointer;


  --------------------------------------------------------------------------------------------------
  entry =
  --------------------------------------------------------------------------------------------------
  begin
    name := 'predek';
    end entry;

  end c_predek;



----------------------------------------------------------------------------------------------------
class c_potomek1 = extend c_predek;
----------------------------------------------------------------------------------------------------

  var
    name : t_char32str;

  --------------------------------------------------------------------------------------------------
  override virtual_method =
  --------------------------------------------------------------------------------------------------
  begin
    do_indent(indent);
    write_line('c_potomek1.virtual_method');
    this:as_ancestor.virtual_method(indent+1);
    end virtual_method;



  --------------------------------------------------------------------------------------------------
  override virtual_via_pointer =
  --------------------------------------------------------------------------------------------------
  var
    p : p_method;

  begin
    do_indent(indent);
    write_line('c_potomek1.virtual_via_pointer');
    p:=^(this:as_ancestor.virtual_via_pointer);
    p^(indent+1);
    end virtual_via_pointer;



  --------------------------------------------------------------------------------------------------
  override say_name =
  --------------------------------------------------------------------------------------------------
  begin
    write('c_potomek1.say_name: tag=');
    write_tag((^this)^:tag);
    write(', name=');
    write(name);
    write(', this:as_ancestor.name=');
    write_line(this:as_ancestor.name);
    end say_name;



  --------------------------------------------------------------------------------------------------
  override introduce =
  --------------------------------------------------------------------------------------------------
  begin
    write('c_potomek1.introduce: tag=');
    write_tag((^this)^:tag);
    write(', this:as_ancestor:tag=');
    write_tag(this:as_ancestor:tag);
    write(', this:ancestor:tag=');
    write_tag((^this)^:ancestor:tag);
    write_line('');
    end introduce;



  --------------------------------------------------------------------------------------------------
  static static_method (
      indent       : t_unsigned := 0) =
  --------------------------------------------------------------------------------------------------
  begin
    do_indent(indent);
    write_line('c_potomek1.static_method');
    this:as_ancestor.static_method(indent+1);
    end static_method;



  --------------------------------------------------------------------------------------------------
  entry =
  --------------------------------------------------------------------------------------------------
  begin
    name := 'potomek1';
    end entry;

  end c_potomek1;



----------------------------------------------------------------------------------------------------
class c_potomek2 = extend c_potomek1;
----------------------------------------------------------------------------------------------------

  var
    name : t_char32str;

  --------------------------------------------------------------------------------------------------
  override say_name =
  --------------------------------------------------------------------------------------------------
  begin
    write('c_potomek2.say_name: tag=');
    write_tag((^this)^:tag);
    write(', name=');
    write(name);
    write(', this:as_ancestor.name=');
    write_line(this:as_ancestor.name);
    end say_name;



  --------------------------------------------------------------------------------------------------
  entry =
  --------------------------------------------------------------------------------------------------
  begin
    name := 'potomek2';
    end entry;

  end c_potomek2;



----------------------------------------------------------------------------------------------------
class c_potomek3 = extend c_potomek2;
----------------------------------------------------------------------------------------------------

  var
    name : t_char32str;

  --------------------------------------------------------------------------------------------------
  override virtual_method =
  --------------------------------------------------------------------------------------------------
  var p: p_potomek2;
  begin
    do_indent(indent);
    write_line('c_potomek3.virtual_method');
    this:as_ancestor.virtual_method(indent+1);
    end virtual_method;



  --------------------------------------------------------------------------------------------------
  override virtual_via_pointer =
  --------------------------------------------------------------------------------------------------
  var
    p : p_method;

  begin
    do_indent(indent);
    write_line('c_potomek3.virtual_via_pointer');
    p:=^(this:as_ancestor.virtual_via_pointer);
    p^(indent+1);
    end virtual_via_pointer;


  
  --------------------------------------------------------------------------------------------------
  override say_name =
  --------------------------------------------------------------------------------------------------
  begin
    write('c_potomek3.say_name: tag=');
    write_tag((^this)^:tag);
    write(', name=');
    write(name);
    write(', this:as_ancestor.name=');
    write_line(this:as_ancestor.name);

    {write('    this:as_ancestor:tag=');
    write_tag(this:as_ancestor:tag);
    write(', this:ancestor:tag=');
    write_tag(this:ancestor:tag);
    write_line('');}
    end say_name;



  --------------------------------------------------------------------------------------------------
  static static_method (
      indent       : t_unsigned := 0) =
  --------------------------------------------------------------------------------------------------
  begin
    do_indent(indent);
    write_line('c_potomek3.static_method');
    this:as_ancestor.static_method(indent+1);
    end static_method;

  --------------------------------------------------------------------------------------------------
  entry =
  --------------------------------------------------------------------------------------------------
  begin
    name := 'potomek3';
    end entry;

  end c_potomek3;



----------------------------------------------------------------------------------------------------



var
  s3: c_potomek3;

  ppp: p_predek;
  p1p: p_predek;
  p2p: p_predek;
  p3p: p_predek;

  p22: p_potomek2;
  p32: p_potomek2;

  pm:  p_method;


begin
  new p_predek(ppp);
  new p_potomek1(p1p);
  new p_potomek2(p2p);
  new p_potomek3(p3p);
  new p_potomek2(p22);
  new p_potomek3(p32);

  write_line('**** virtual method call ****');
  write_line('--- via s3 ---');
  s3.virtual_method;
  write_line('--- via ppp ---');
  ppp^.virtual_method;
  write_line('--- via p1p ---');
  p1p^.virtual_method;
  write_line('--- via p2p ---');
  p2p^.virtual_method;
  write_line('--- via p3p ---');
  p3p^.virtual_method;
  write_line('--- via p22 ---');
  p22^.virtual_method;
  write_line('--- via p32 ---');
  p32^.virtual_method;
  
  write_line('**** static method call ****');
  write_line('--- via s3 ---');
  s3.static_method;
  write_line('--- via ppp ---');
  ppp^.static_method;
  write_line('--- via p1p ---');
  p1p^.static_method;
  write_line('--- via p2p ---');
  p2p^.static_method;
  write_line('--- via p3p ---');
  p3p^.static_method;
  write_line('--- via p22 ---');
  p22^.static_method;
  write_line('--- via p32 ---');
  p32^.static_method;

  write_line('**** pointers on virtual methods ****');
  write_line('--- via s3 ---');
  pm:=^(s3.virtual_via_pointer);
  pm^();
  write_line('--- via ppp ---');
  pm:=^(ppp^.virtual_via_pointer);
  pm^();
  write_line('--- via p1p ---');
  pm:=^(p1p^.virtual_via_pointer);
  pm^();
  write_line('--- via p2p ---');
  pm:=^(p2p^.virtual_via_pointer);
  pm^();
  write_line('--- via p3p ---');
  pm:=^(p3p^.virtual_via_pointer);
  pm^();
  write_line('--- via p22 ---');
  pm:=^(p22^.virtual_via_pointer);
  pm^();
  write_line('--- via p32 ---');
  pm:=^(p32^.virtual_via_pointer);
  pm^();
  end test_inherited;
