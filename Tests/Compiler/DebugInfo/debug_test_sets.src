program debug_test_sets =

with
  standard,
  debug_test_module01;

type
  test_type_01 = enum
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    end enum;
  test_type_01_set = set of test_type_01;

  test_type_01_record = record
    a : test_type_01;
    b : test_type_01;
    end record;

  t_character = character 16;
  test_string01 = string of t_character;
  test_string02 = string 11 of t_character;

var
  y : t_unsigned32 :=34;

procedure foo (
    p1 : in t_unsigned32;
    p2 : in out t_unsigned32;
    p3 : in test_string01) =
var
  x    : static t_unsigned32;
begin
  x:=1;
  y+1;
  p2+p1;
  x:=2;
  end foo;


var
  str : aliased test_string02 := ["t","e","s","t"," ","s","t","r","i","n","g"];
  pstr: ^test_string02;
  i   : t_unsigned32;
  j   : t_unsigned32;
  s   : test_type_01_set :=[];
  r   : test_type_01_record :=[for a use v1, for b use v2];

begin
  y+1;
  r.a:=v3;
  test_module_var01:=111;
  test_module_var02:=222;
  s+test_type_01_set:[v2];
  s+test_type_01_set:[v3];
  s+test_type_01_set:[v2];
  s+test_type_01_set:[v4];
  s+test_type_01_set:[v1];
  s+test_type_01_set:[v4];
  s+test_type_01_set:[v2];
  s+test_type_01_set:[v6];
  s+test_type_01_set:[v7];
  s+test_type_01_set:[v2];
  s+test_type_01_set:[v4];
  s+test_type_01_set:[v5];
  i:=15;
  j:=1;
  pstr:=^str;
  foo(i,j,str);
  bar(16);
  end debug_test_sets;
