----------------------------------------------------------------------------------------------------
module public cd_create =
-- P©eklada‡ Flexu.
-- Deklarace.
----------------------------------------------------------------------------------------------------
-- Ondra : 19.09.2000 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  cc_base,cc_def.cc_unitype;

use
  cc_base.cc_sym;

extend
  cc_base.cc_sym.cc_advanced;

----------------------------------------------------------------------------------------------------
procedure d_create (
    context        : in tcontext;                -- kontext deklarace
--  context        : in out tentity;             -- kontext deklarace
    curr           : out pentity;                -- deklarovan  entita
    curr_context   : out tcontext;               -- odpov¡daj¡c¡ kontext
    etype          : in tentitytype;             -- typ symbolu
    pos            : out lexposblock);           -- pozice deklarace
-- Za‡ tek deklarace a vytvo©en¡ symbolu.
----------------------------------------------------------------------------------------------------
procedure d_create_at_position (
    context        : in tcontext;                -- kontext deklarace
--  context        : in out tentity;             -- kontext deklarace
--  region         : in tdeclregion;             -- deklarativn¡ region
    curr           : out pentity;                -- deklarovan  entita
    curr_context   : out tcontext;               -- odpov¡daj¡c¡ kontext
    etype          : in tentitytype;             -- typ symbolu
    id             : in pentityident;            -- dodan˜ idenifik tor
    pos            : in lexposblock);            -- pozice deklarace
-- Za‡ tek deklarace a vytvo©en¡ symbolu na p©edepsan‚ pozici.
----------------------------------------------------------------------------------------------------
procedure d_create_without_name (
    context        : in tcontext;                -- kontext deklarace
--  context        : in out tentity;             -- kontext deklarace
    curr           : out pentity;                -- deklarovan  entita
    curr_context   : out tcontext;               -- odpov¡daj¡c¡ kontext
    etype          : in tentitytype;             -- typ symbolu
    id             : in pentityident;            -- volitelnˆ dodan˜ idenifik tor
    pos            : out lexposblock);           -- pozice deklarace
-- Za‡ tek deklarace bez zpracov n¡ p©¡padn‚ho jm‚na entity.
----------------------------------------------------------------------------------------------------
procedure d_create_temporary_type (
    context        : in tcontext;                -- kontext deklarace
    ptyp           : out pentity_type;           -- deklarovan˜ typ     
    ptyp_context   : out tcontext;               -- odpov¡daj¡c¡ kontext
    stype          : in tdatatype;               -- datov˜ typ
    dsize          : in tunidata_size);          -- velikost
-- Vytvo©¡ nov˜ do‡asn˜ typ a dosad¡ implicitn¡ hodnoty specifikace.
----------------------------------------------------------------------------------------------------
procedure d_create_internal (
    context        : in tcontext;                -- kontext deklarace
--  context        : in out tentity;             -- kontext deklarace
--  region         : in tdeclregion;             -- deklarativn¡ region
    curr           : out pentity;                -- deklarovan  entita
    curr_context   : out tcontext;               -- odpov¡daj¡c¡ kontext
    etype          : in tentitytype;             -- typ symbolu
    id             : in pentityident);           -- dodan˜ idenifik tor
-- Za‡ tek deklarace a vytvo©en¡ intern¡ho symbolu.
----------------------------------------------------------------------------------------------------
procedure d_create_region (
    context        : in tcontext;                -- aktu ln¡ kontext
    region         : out pregion;                -- vytvo©en˜ region
    region_context : out tcontext);              -- kontext vytvo©en‚ho regionu
-- Vytvo©¡ nov˜ deklarativn¡ regionu v aktu ln¡m kontextu.
----------------------------------------------------------------------------------------------------
procedure d_get_attribute_context (
    curr           : in out tentity;             -- aktu ln¡ entita
    attr_context   : out tcontext);              -- atributov˜ kontext
-- Z¡sk  atributov˜ kontext entity. Pokud je¨tˆ neexistuje, tak ho vytvo©¡.
----------------------------------------------------------------------------------------------------
procedure d_next (
    curr           : in out tentity;             -- deklarovan  entita
    pos            : in out lexposblock);        -- pozice deklarace
-- P©eklad dal¨¡ ‡ sti deklarace entity..
----------------------------------------------------------------------------------------------------
procedure d_next_internal (
    curr           : in out tentity);            -- deklarovan  entita
-- P©eklad dal¨¡ ‡ sti deklarace intern¡ entity.
----------------------------------------------------------------------------------------------------
procedure d_rollback (
    curr           : in out tentity);            -- deklarovan  entita
-- Naprav¡, co provedlo D_NEXT.
----------------------------------------------------------------------------------------------------
procedure d_end (
    curr           : in out tentity;             -- deklarovan  entita
    pos            : in out lexposblock);        -- pozice deklarace
-- Konec deklarace symbolu.
----------------------------------------------------------------------------------------------------
procedure d_end_at_position (
    curr           : in out tentity;             -- deklarovan  entita
    pos            : in lexposblock;             -- pozice deklarace
    evaluate       : in t_logical :=true);       -- vyhodnocovat deklaraci entity
-- Konec deklarace symbolu na uveden‚ pozici.
----------------------------------------------------------------------------------------------------
procedure d_end_internal (
    curr           : in out tentity;             -- deklarovan  entita
    evaluate       : in t_logical :=true);       -- vyhodnocovat deklaraci entity
-- Konec deklarace intern¡ho symbolu.
----------------------------------------------------------------------------------------------------
procedure d_end_temporary_type (
    curr           : in out tentity_type);       -- deklarovan  entita
-- Konec deklarace do‡asn‚ho typu.
----------------------------------------------------------------------------------------------------

end cd_create;