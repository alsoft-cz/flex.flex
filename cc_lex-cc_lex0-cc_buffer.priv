----------------------------------------------------------------------------------------------------
class private {cc_lex.cc_lex0.}cc_buffer =
-- P©eklada‡ Flexu.
-- Textov˜ buffer.
----------------------------------------------------------------------------------------------------
-- Ondra : 06.05.2000 : Vytvo©il.
----------------------------------------------------------------------------------------------------

type
  -- prvek textov‚ho pole
  ttextelement     = unsigned lexchar:bits;

const
  -- maxim ln¡ velikost jednoho textov‚ho pole
  maxtextblocksize = (16384-12) div ttextelement:size;

type
  -- blok text–
  ttextblock;
  ptextblock       = ^ttextblock;
  ttextblock       = record
      data         : string maxtextblocksize of ttextelement;
      lastindex    : data:range;
      next         : ptextblock;
      end record;

  #if ttextblock:size<>16384 then;
    #warning 'Podivn  velikost TTEXTBLOCK';
    #end if;

var
  first            : ptextblock;

----------------------------------------------------------------------------------------------------
static newtext =
-- Vytvo©¡ nov‚ textov‚ pole.
----------------------------------------------------------------------------------------------------
var
  p            : ptextblock;

begin
  -- buffer je pln˜ => alokovat nov˜
  if first=nil then 
    new first;
  elsif first^.data:length=first^.data:last then
    new p;
    p^.next:=first;
    first:=p;
    end if;

  -- nov˜ ©etˆzec je z po‡ tku pr zdn˜
  first^.data & 0;
  first^.lastindex:=first^.data:length;
  end newtext;



----------------------------------------------------------------------------------------------------
static addchar =
-- P©id  znak do posledn¡ho textov‚ho pole.
----------------------------------------------------------------------------------------------------
var
  p            : ptextblock;
  i            : p^.data:type:range;

begin
  -- buffer je pln˜ => alokovat nov˜
  if first^.data:length=first^.data:last then
    -- alokovat buffer
    new p;
    p^.next:=first;

    -- p©ekop¡rovat ji‘ sestavenou ‡ st ©etˆzce
    p^.lastindex:=p^.data:first;
    --%%TODO(SLICE) p^.data:=first^.data[first^.lastindex..first^.lastindex+first^.data[first^.lastindex]];
    for i in first^.lastindex..first^.lastindex+first^.data[first^.lastindex] loop
      p^.data & first^.data[i];
      end loop;
    first^.data:length:=first^.lastindex-1;

    -- zmˆnit buffer
    first:=p;
    end if;

  -- v bufferu je nyn¡ jistˆ m¡sto => ulo‘it do nˆj znak
  succ first^.data[first^.lastindex];
  -- %%TODO(COMPATIBILITY) Tady se mus¡ p©etypov vat na TTEXTELEMENT, proto‘e C:ORD nen¡ uniint, 
  -- ale unsigned, kter˜ nen¡ toto‘n˜ s b z¡ ©etˆzce. P©ipad  mi to jako trochu matouc¡
  first^.data & ttextelement(c:ord);
  end addchar;



----------------------------------------------------------------------------------------------------
static endtext =
-- Konec £prav posledn¡ho textov‚ho pole, vr t¡ jeho handle.
----------------------------------------------------------------------------------------------------
type
  tmpointer        = ^unchecked for machine_pointer use true;
  tupointer        = record
      ptr          : tmpointer;
      rta_last     : unsigned 32;
      end record;

begin
  --%%TODO(SLICE) krutobrut ln¡ z plata
  tupointer(result:unchecked).ptr     :=^first^.data[first^.lastindex]:unchecked;
  tupointer(result:unchecked).rta_last:=first^.data[first^.lastindex]:ord;
  --result:=^first^.data[first^.lastindex..first^.lastindex+first^.data[first^.lastindex]]:unchecked;
  end endtext;



----------------------------------------------------------------------------------------------------
static discardlast =
-- Zru¨¡ posledn¡ textov‚ pole.
----------------------------------------------------------------------------------------------------
begin
  first^.data:length:=first^.lastindex-1;
  end discardlast;



end cc_buffer;