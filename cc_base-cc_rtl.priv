----------------------------------------------------------------------------------------------------
module private cc_rtl =
-- P©eklada‡ Flexu.
-- Vazba na run-time knihovnu.
----------------------------------------------------------------------------------------------------
-- Ondra : 11.11.2001 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  cc_def.cc_var,cc_def.cc_codes;

var
  -- tabulka p©i©azen˜ch procedur
  rtltab           : array trtlproc of pentity_procedure;

type
  -- popis intern¡ procedury
  trtlprocdesc     = record
      txt          : tshortident;
      rtl          : trtlproc;
      end record;

var
  -- tabulka intern¡ch procedur
  rtlproctab       : const array 0..22 of trtlprocdesc := [
      [for txt use 'ALLOC'              , for rtl use rtl_alloc              ],
      [for txt use 'ALLOC_AND_FILLZ'    , for rtl use rtl_alloc_and_fillz    ],
      [for txt use 'ANCESTOR_ADJUST'    , for rtl use rtl_ancestor_adjust    ],
      [for txt use 'ANCESTOR_ENTRY'     , for rtl use rtl_ancestor_entry     ],
      [for txt use 'ANCESTOR_EXIT'      , for rtl use rtl_ancestor_exit      ],
      [for txt use 'ANCESTOR_INIT'      , for rtl use rtl_ancestor_init      ],
      [for txt use 'CALL_ADJUST'        , for rtl use rtl_call_adjust        ],
      [for txt use 'CALL_ENTRY'         , for rtl use rtl_call_entry         ],
      [for txt use 'CALL_EXIT'          , for rtl use rtl_call_exit          ],
      [for txt use 'CALL_INIT'          , for rtl use rtl_call_init          ],
      [for txt use 'CHECK_CODE'         , for rtl use rtl_check_code         ],
      [for txt use 'DEINIT_MAIN_TASK'   , for rtl use rtl_deinit_main_task   ],
      [for txt use 'DISCARD_EXCEPTION'  , for rtl use rtl_discard_exception  ],
      [for txt use 'END_XFRAME'         , for rtl use rtl_end_xframe         ],
      [for txt use 'FILLZ'              , for rtl use rtl_fillz              ],
      [for txt use 'FREE'               , for rtl use rtl_free               ],
      [for txt use 'INIT_MAIN_TASK'     , for rtl use rtl_init_main_task     ],
      [for txt use 'INIT_XFRAME'        , for rtl use rtl_init_xframe        ],
      [for txt use 'RAISE_EXCEPTION'    , for rtl use rtl_raise_exception    ],
      [for txt use 'SET_EXCEPTION'      , for rtl use rtl_set_exception      ],
      [for txt use 'SIZE'               , for rtl use rtl_size               ],
    --[for txt use 'STR_COPY'           , for rtl use rtl_str_copy           ],
      [for txt use 'TERMINATE'          , for rtl use rtl_terminate          ],
      [for txt use 'UNHANDLED_EXCEPTION', for rtl use rtl_unhandled_exception]];

var
  rtl_unknown      : const tshortident := '?';

----------------------------------------------------------------------------------------------------
procedure rtl_set_proc =
-- P©i©ad¡ intern¡ proceduru.
----------------------------------------------------------------------------------------------------
var
  zac              : t_unsigned;
  stred            : t_unsigned;
  kon              : t_unsigned;

begin
  -- vyhledat v tabulce
  zac:=rtlproctab:first;
  kon:=rtlproctab:last;
  loop
    stred:=(zac+kon) div 2;
    if id>rtlproctab[stred].txt
      then zac:=stred+1;
      else kon:=stred;
      end if;
    until zac>=kon;
  
  -- nalezlo se ?
  if id=rtlproctab[zac].txt
  
    -- ano => p©i©adit dodanou proceduru
    then rtltab[rtlproctab[zac].rtl]:=pproc

    -- ne => hl sit aspo¤ varov n¡
    else
      ce^.setwarning({CCERR=}000003,cw_unknown_assign);
      ce^.setparam(entityident_to_string(id));
      end if;
  end rtl_set_proc;



----------------------------------------------------------------------------------------------------
procedure rtl_get_procid =
-- Vr t¡ identifik tor intern¡ procedury.
----------------------------------------------------------------------------------------------------
begin
  for i in rtlproctab:range loop
    if rtlproctab[i].rtl=rtl then
      id:=^rtlproctab[i].txt;
      return;
      end if;
    end loop;
  id:=^rtl_unknown;
  end rtl_get_procid;



----------------------------------------------------------------------------------------------------
procedure rtl_get_proc =
-- Vr t¡ intern¡ proceduru.
----------------------------------------------------------------------------------------------------
begin
  pproc:=rtltab[rtl];
  end rtl_get_proc;



end cc_rtl;