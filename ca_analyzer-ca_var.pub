----------------------------------------------------------------------------------------------------
module public ca_var =
-- P©eklada‡ Flexu.
-- Generov n¡ v˜raz– pro inicializaci a finalizaci promˆnn˜ch.
----------------------------------------------------------------------------------------------------
-- Ondra : 12.11.2001 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  cb_block,
  cb_block.cb_def,
  cx_expr,
  cx_expr.cx_def;

type
  -- kontrola symbolu, zda obsahuje promˆnn‚ zadan‚ pamˆŸov‚ t©¡dy,
  -- nad kter˜mi je t©eba prov‚st operaci TRACEOP
  ttracecheck      = procedure (
      psym         : in pentity;                 -- zkouman˜ symbol
      mclass       : in memclass)                -- pamˆŸov  t©¡da
                   return t_logical;             -- T-obsahuje
  ptracecheck      = ^ttracecheck;

----------------------------------------------------------------------------------------------------
procedure a_var_init (
    curr           : in tcontext;                -- kontext
    list           : in out bllist;              -- kam se budou p©¡kazy ukl dat
    binfo          : in out blinfo;              -- kontext
    xinfo          : in out expinfo;             -- kontext
    mclass         : in memclass;                -- pamˆŸov  t©¡da
    recursive      : in t_logical;               -- T-trasovat rekurzivnˆ
    classonly      : in t_logical);              -- T-pouze promˆnn‚ obsahuj¡c¡ t©¡dy
-- Vygeneruje p©¡kazy pro inicializaci promˆnn˜ch.
-- Je-li CLASSONLY=True, inicializuje pouze instance t©¡d (nap©¡klad p©i
-- MCLASS=MC_STATIC jsou ostatn¡ promˆnn‚ inicializovan‚ loaderem).
----------------------------------------------------------------------------------------------------
procedure a_var_entry (
    curr           : in tcontext;                -- kontext
    list           : in out bllist;              -- kam se budou p©¡kazy ukl dat
    binfo          : in out blinfo;              -- kontext
    xinfo          : in out expinfo;             -- kontext
    mclass         : in memclass;                -- pamˆŸov  t©¡da
    recursive      : in t_logical);              -- T-trasovat rekurzivnˆ
-- Vygeneruje p©¡kazy na vol n¡ ENTRY promˆnn˜ch.
----------------------------------------------------------------------------------------------------
procedure a_var_exit (
    curr           : in tcontext;                -- kontext
    list           : in out bllist;              -- kam se budou p©¡kazy ukl dat
    binfo          : in out blinfo;              -- kontext
    xinfo          : in out expinfo;             -- kontext
    mclass         : in memclass;                -- pamˆŸov  t©¡da
    recursive      : in t_logical);              -- T-trasovat rekurzivnˆ
-- Vygeneruje p©¡kazy na vol n¡ EXIT promˆnn˜ch.
----------------------------------------------------------------------------------------------------
procedure a_var_adjust (
    curr           : in tcontext;                -- kontext
    list           : in out bllist;              -- kam se budou p©¡kazy ukl dat
    binfo          : in out blinfo;              -- kontext
    xinfo          : in out expinfo;             -- kontext
    mclass         : in memclass;                -- pamˆŸov  t©¡da
    recursive      : in t_logical);              -- T-trasovat rekurzivnˆ
-- Vygeneruje p©¡kazy na vol n¡ ADJUST promˆnn˜ch.
----------------------------------------------------------------------------------------------------
procedure tracecheck_init : ttracecheck;
-- Kontrola, zda symbol PSYM obsahuje promˆnn‚ t©¡dy MCLASS, kter‚ je t©eba
-- inicializovat pomoc¡ TRACEOP_INIT.
----------------------------------------------------------------------------------------------------
procedure tracecheck_entry : ttracecheck;
-- Kontrola, zda symbol PSYM obsahuje promˆnn‚ t©¡dy MCLASS, pro kter‚ je
-- t©eba volat ENTRY pomoc¡ TRACEOP_ENTRY.
----------------------------------------------------------------------------------------------------
procedure tracecheck_exit : ttracecheck;
-- Kontrola, zda symbol PSYM obsahuje promˆnn‚ t©¡dy MCLASS, pro kter‚ je
-- t©eba volat EXIT pomoc¡ TRACEOP_EXIT.
----------------------------------------------------------------------------------------------------
procedure tracecheck_adjust : ttracecheck;
-- Kontrola, zda symbol PSYM obsahuje promˆnn‚ t©¡dy MCLASS, pro kter‚ je
-- t©eba volat ADJUST pomoc¡ TRACEOP_adjust.
----------------------------------------------------------------------------------------------------

end ca_var;