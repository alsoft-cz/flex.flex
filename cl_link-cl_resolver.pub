----------------------------------------------------------------------------------------------------
module public cl_resolver =
-- P©eklada‡ Flexu.
-- Vyhodnocova‡ cross-referenc¡ a adres.
----------------------------------------------------------------------------------------------------
-- Ondra : 12.04.2002 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  standard,
  standard.files,
  standard.streams,
  cc_def.cc_unitype,
  cc_def.cc_list;

type
  -- typ segmentu
  tsegment         = enum
      tseg_code;                                 -- k¢d
      tseg_const;                                -- const data
      tseg_init;                                 -- inicializovan  data
      tseg_data;                                 -- neinicializovan  data
      tseg_import;                               -- importy
      tseg_typedesc;                             -- deskriptory typ–
      end enum;

----------------------------------------------------------------------------------------------------
class public {%%TODO(ABSTRACT) abstract} linkresolver = extend tflexclass;
-- Vyhodnocova‡ cross-referenc¡ a adres.
----------------------------------------------------------------------------------------------------

    var
      -- seznamy entit za©azen˜ch do jednotliv˜ch segment–
      code         : protected tentitystring;    -- symboly za©azen‚ v code segmentu
      reloc        : protected tentitystring;    -- symboly vy‘aduj¡c¡ vyhodnocen¡ relokac¡
      cdata        : protected timmstring;       -- p©¡m‚ hodnoty za©azen‚ v const data seg
      idata        : protected tentitystring;    -- symboly za©azen‚ v inicializovan‚m data seg
      data         : protected tentitystring;    -- symboly za‘azen‚ v neinic. data segmentu
      import       : protected tentitystring;    -- extern¡ symboly
      typedesc     : protected tentitystring;    -- deskriptory typ–

      -- ©¡d¡c¡ promˆnn‚ linkeru
      msgnum       : protected tunimsg;          -- ‡¡slo zpr vy
      tagnum       : protected tunitag;          -- ‡¡slo tagu

    ------------------------------------------------------------------------------------------------
    static mark (
        curr       : in pentity);                -- symbol
    -- F ze 1: Ozna‡en¡ symbol– pro linkov n¡.
    ------------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT) abstract} link;
    -- F ze 2: Vlastn¡ sestaven¡.
    ----------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT) abstract} info;
    -- V˜pis souhrnn˜ch informac¡ do listingu.
    ----------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT) abstract} getaddrbase return tunicode_addr;
    -- B zov  adresa, ke kter‚ se vztahuj¡ relokace.
    ----------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT) abstract} getentrypoint return tunicode_addr;
    -- Entrypoint programu.
    ----------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT) abstract} checkseg (
        _seg       : in tsegment)                -- segment
        return t_logical;                        -- T-zahrnout do EXE
    -- True, pokud se m  zadan˜ segment zahrnout do EXE.
    ----------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT) abstract} getsegbase (
        _seg       : in tsegment)                -- segment
        return tunicode_addr;                    -- b zov  adresa segmentu
    -- B zov  adresa segmentu.
    ----------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT) abstract} getsegtotal (
        _seg       : in tsegment)                -- segment
        return tunidata_size;                    -- velikost segmentu
    -- Celkov  velikost segmentu.
    ----------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT) abstract} writesegment (
        _seg       : in tsegment;                -- segment
        os         : in p_output_stream);        -- v˜stupn¡ soubor
    -- Do v˜stupn¡ho souboru zap¡¨e zadan˜ segment.
    ----------------------------------------------------------------------------------------------

  protected

    ----------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT) abstract} trace (
        curr       : in pentity);                -- vyhodnocovan˜ symbol
    -- Projde tabulku relokac¡ symbolu CURR a pro ka‘d˜ symbol zavol¡ MARK.
    ----------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT) abstract} linkimport;
    -- P©¡prava pro linkov n¡ importovan˜ch funkc¡.
    ----------------------------------------------------------------------------------------------

    end linkresolver;



----------------------------------------------------------------------------------------------------
#separate public cl_ia32;
-- Vyhodnocova‡ cross-referenc¡ a adres: IA-32.
----------------------------------------------------------------------------------------------------

end cl_resolver;