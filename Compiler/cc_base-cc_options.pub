----------------------------------------------------------------------------------------------------
module public cc_options =
-- Prekladac
-- nastaveni prekladace
----------------------------------------------------------------------------------------------------

with 
  standard,
  cc_def,
  cc_def.cc_entity,
  cc_def.cc_unitype;

type
  -- parametry překladače
  toption          = enum
      opt_dump;                                  -- dump
      opt_dump_code;                             -- dump kódu
      opt_dump_regs;                             -- dump použití registrů
      opt_extra_debug_information;               -- vypisovani extra informaci (napr.WHEN..DO)
      opt_image_base;                            -- bazova adresa
      opt_overflow_checking;                     -- kontrola přetečení
      opt_range_checking;                        -- kontrola mezí
      opt_stack_reserve;                         -- rezerva na stacku            
      opt_validate_heap;                         -- kontrola konzistence heapu
      opt_validate_stack;                        -- kontrola konzistence stacku
      end enum;
  toptionset       = set of toption;


  -- datove typy parametru
  toption_param_type = enum
      optt_undef;
      optt_uniint;
      optt_unicode_addr;
      optt_unidata_size;
      end enum;


message
  o_operation_failed : exception;
 

----------------------------------------------------------------------------------------------------
procedure o_get_option_by_id (
    optionid       : in tshortident;
    option         : out toption);
-- zjisti ordinalni id nastaveni podle identifikatoru
-- pokud takove nastaveni nezname vyvola vyjimku [o_operation_failed]
----------------------------------------------------------------------------------------------------
procedure o_is_option_switchable (
    option         : in toption)
                     return t_logical;
-- vrati T pokud je nastaveni [option] prepinatelne, jinak F
----------------------------------------------------------------------------------------------------
procedure o_get_option_param_type (
    option         : in toption)
                     return toption_param_type;
-- vrati pozadovany datovy typ parametru nastaveni [option]
-- vrati dt_undef pokud nastaveni [option] nema parametr
----------------------------------------------------------------------------------------------------
procedure o_is_option_applicable (
    option         : in toption;
    context        : in tcontext)
                     return t_logical;
-- vrati T - pokud je nastaveni [option] platne pro kontext [context], jinak F 
----------------------------------------------------------------------------------------------------
procedure o_set_option_on (
    option         : in toption;                 -- nastaveni
    context        : in tcontext);               -- aktuální kontext
-- zapne nastaveni [option] v ramci kontextu [context]
-- hleda se nejblizsi platny kontext, pokud se nenajde vyvola se interni chyba
----------------------------------------------------------------------------------------------------
procedure o_set_option_off (
    option         : in toption;                 -- nastaveni
    context        : in tcontext);               -- aktuální kontext
-- zapne nastaveni [option] v ramci kontextu [context]
-- hleda se nejblizsi platny kontext, pokud se nenajde vyvola se interni chyba
----------------------------------------------------------------------------------------------------
procedure o_is_option_by_entity (
    option         : in toption;                 -- nastaveni
    entity         : in class tentity)           -- entita
                     return t_logical;
-- zjisti jestli je nastaveni [option] zapnute v ramci entity [entity]; T-ano, F-ne
-- hleda se nejblizsi platny kontext, pokud se nenajde vrati F
----------------------------------------------------------------------------------------------------
procedure o_is_option_by_context (
    option         : in toption;                 -- nastaveni 
    context        : in tcontext)                -- aktualni kontext
                     return t_logical;
-- zjisti jestli je nastaveni [option] zapnute v ramci kontextu [context]; T-ano, F-ne
-- hleda se nejblizsi platny kontext, pokud se nenajde vrati F
----------------------------------------------------------------------------------------------------
overload o_is_option : o_is_option_by_context, o_is_option_by_entity;
----------------------------------------------------------------------------------------------------
procedure o_set_option_param_uniint (
    option         : in toption;                 -- nastaveni
    entity         : in class tentity;           -- aktuální kontext
    param          : in tuniint);                -- hodnota parametru
-- nastavi parametr pro nastaveni [option] v ramci kontextu [context]
-- hleda se nejblizsi platny kontext, pokud se nenajde vyvola se interni chyba
----------------------------------------------------------------------------------------------------
procedure o_get_option_param_uniint (
    option         : in toption;                 -- nastaveni
    entity         : in class tentity;           -- aktuální kontext
    param          : out tuniint);               -- hodnota parametru
-- vrati parametr pro nastaveni [option] v ramci kontextu [context]
-- hleda se nejblizsi platny kontext, pokud se nenajde funkce vrati F, jinak
-- funkce vyvola vyjimku [o_operation_failed] pokud parametr jeste nebyl nastaveny
----------------------------------------------------------------------------------------------------
procedure o_set_option_param_unicode_addr (
    option         : in toption;                 -- nastaveni
    entity         : in class tentity;           -- aktuální kontext
    param          : in tunicode_addr);          -- hodnota parametru
-- nastavi parametr pro nastaveni [option] v ramci kontextu [context]
-- hleda se nejblizsi platny kontext, pokud se nenajde vyvola se interni chyba
----------------------------------------------------------------------------------------------------
procedure o_get_option_param_unicode_addr (
    option         : in toption;                 -- nastaveni
    entity         : in class tentity;           -- aktuální kontext
    param          : out tunicode_addr);         -- hodnota parametru
-- vrati parametr pro nastaveni [option] v ramci kontextu [context]
-- hleda se nejblizsi platny kontext, pokud se nenajde funkce vrati F, jinak
-- funkce vyvola vyjimku [o_operation_failed] pokud parametr jeste nebyl nastaveny
----------------------------------------------------------------------------------------------------
procedure o_set_option_param_unidata_size (
    option         : in toption;                 -- nastaveni
    entity         : in class tentity;           -- aktuální kontext
    param          : in tunidata_size);          -- hodnota parametru
-- nastavi parametr pro nastaveni [option] v ramci kontextu [context]
-- hleda se nejblizsi platny kontext, pokud se nenajde vyvola se interni chyba
----------------------------------------------------------------------------------------------------
procedure o_get_option_param_unidata_size (
    option         : in toption;                 -- nastaveni
    entity         : in class tentity;           -- aktuální kontext
    param          : out tunidata_size);         -- hodnota parametru
-- vrati parametr pro nastaveni [option] v ramci kontextu [context]
-- hleda se nejblizsi platny kontext, pokud se nenajde funkce vrati F, jinak
-- funkce vyvola vyjimku [o_operation_failed] pokud parametr jeste nebyl nastaveny
----------------------------------------------------------------------------------------------------
procedure o_clone_options (
    src_entity     : in out tentity;
    dest_entity    : in out tentity);
-- provede hlubokou kopii nastaveni z entity [src_entity] do entity [dest_entity]
----------------------------------------------------------------------------------------------------

end cc_options;