----------------------------------------------------------------------------------------------------
module public cc_lex =
-- P©eklada‡ Flexu.
-- Lexik ln¡ analyz tor.
----------------------------------------------------------------------------------------------------
-- Ondra : 25.04.2000 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  standard,
  cc_def,
  cc_def.cc_unitype,
  cc_base;

use
  cc_def.cc_entity;

extend
  cc_base.cc_text;

type
  -- chov n¡ RESUMELEX p©i nalezen¡ LEX
  tresumelex       = enum
      rl_skip;                 -- p©esko‡it
      rl_leave;                -- ponechat ve zdroj ku
      end enum;

  -- chov n¡ RESUMELEX p©i nalezen¡ TERM
  tresumeterm  = enum
      rt_skip;                 -- p©esko‡it
      rt_leave;                -- ponechat ve zdroj ku
      rt_resume;               -- ponechat ve zdroj ku a RESUME_ERROR
      rt_fail;                 -- vyvolat COMPILER_ERROR
      end enum;

----------------------------------------------------------------------------------------------------
procedure getlex (
    context        : in cc_entity.tcontext;      -- aktu ln¡ kontext
    lex            : out lexsym);                -- z¡skan˜ lexik ln¡ element
-- P©e‡te ze vstupu jeden lexik ln¡ element.
----------------------------------------------------------------------------------------------------
procedure ungetlex;
-- Poslednˆ p©e‡ten˜ lexik ln¡ element vr t¡ zpˆt do vstupu.
-- Flex je LL(1), tak‘e se lze vr tit v‘dy jen o jeden symbol.
----------------------------------------------------------------------------------------------------
procedure looklex (
    context        : in cc_entity.tcontext;      -- aktu ln¡ kontext
    lex            : out lexsym);
-- P©e‡te ze vstupu jeden lexik ln¡ element, ale neodstran¡ ho ze vstupu (getlex+ungetlex).
----------------------------------------------------------------------------------------------------
procedure checklex (
    context        : in cc_entity.tcontext;      -- aktu ln¡ kontext
    lex            : in lexsym)                  -- o‡ek van˜ lexik ln¡ element
    return t_logical;
-- Pod¡v  se na n sleduj¡c¡ lexik ln¡ element, a pokud je shodn˜ se zadan˜m, tak vr t¡ True
-- a odstran¡ ho ze vstupu. V opa‡n‚m p©¡padˆ vr t¡ False a vstup nezmˆn¡.
----------------------------------------------------------------------------------------------------
procedure ignorelex (
    context        : in cc_entity.tcontext;      -- aktu ln¡ kontext
    lex            : in lexsym);                 -- ignorovateln˜ lexik ln¡ element
-- Je-li n sleduj¡c¡ symbol LEX, tak ho odignoruje, jinak ponech .
----------------------------------------------------------------------------------------------------
procedure followlex (
    context        : in cc_entity.tcontext;      -- aktu ln¡ kontext
    lex            : in lexsym)                  -- o‡ek van˜ lexik ln¡ element
    return t_logical;
-- P©e‡te ze vstupu lexik ln¡ element a zkontroluje ho proti zadan‚mu. Pokud se shoduj¡, vr t¡
-- False a element odstran¡ ze vstupu. V opa‡n‚m p©¡padˆ vr t¡ True a element a) ponech  ve
-- vstupu, b) odstran¡ ze vstupu, pokud je podobn˜ zadan‚mu.
----------------------------------------------------------------------------------------------------
procedure followendkw (
    context        : in cc_entity.tcontext;      -- aktu ln¡ kontext
    kw             : in lexsym)                  -- o‡ek van‚ kl¡‡ov‚ slovo za ENDem
    return t_logical;
-- P©e‡te ze vstupu sekvenci "END <kl¡‡ov‚ slovo>".
-- Procedura se chov  obdobnˆ jako FOLLOWLEX.
----------------------------------------------------------------------------------------------------
procedure followendid (
    context        : in cc_entity.tcontext;      -- aktu ln¡ kontext
    id             : in tentityident)            -- o‡ek van˜ identifik tor za ENDem
    return t_logical;
-- P©e‡te ze vstupu sekvenci "END <identifik tor>".
-- Procedura se chov  obdobnˆ jako FOLLOWLEX.
----------------------------------------------------------------------------------------------------
procedure resumelex (
    context        : in cc_entity.tcontext;      -- aktu ln¡ kontext
    xlex           : out lexsym;                 -- na jak˜ symbol to skute‡nˆ skon‡ilo 
    lex            : in lexsym;                  -- hledany symbol                      
    rl             : in tresumelex;              -- chov n¡ p©i nalezen¡ LEX            
    term           : in lexsym;                  -- termin tor                          
    rt             : in tresumeterm);            -- chov n¡ p©i nalezen¡ TERM           
-- Vy‡¡t  symboly, dokud nenaraz¡ na hledan˜ symbol nebo na termin tor.       
----------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------
procedure getlexpos (
    pos            : out lexpos;                 -- pozice
    level          : in lexlevel;                -- 1-tento, 2-p©edchoz¡
    after          : in t_logical);              -- T-znak za prvkem
-- Vr t¡ pozici lexik ln¡ho prvku.
----------------------------------------------------------------------------------------------------
procedure getlexposall (
    pos            : out lexposblock;            -- pozice
    level          : in lexlevel);               -- 1-tento, 2-p©edchoz¡
-- Vr t¡ pozici lexik ln¡ho prvku (za‡ tek i konec).
----------------------------------------------------------------------------------------------------
procedure cmplexposb (
    pos1           : in lexpos;
    pos2           : in lexpos)
                   return t_logical;
-- True <=> POS1 < POS2
----------------------------------------------------------------------------------------------------
procedure cmplexposa (
    pos1           : in lexpos;
    pos2           : in lexpos)
                   return t_logical;
-- True <=> POS1 > POS2
----------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------
procedure getlexid return pentityident;
-- Poslednˆ p©e‡ten˜ lexik ln¡ element: identifik tor.
----------------------------------------------------------------------------------------------------
procedure getlextxt return plexcharustr;
-- Poslednˆ p©e‡ten˜ lexik ln¡ element: textov˜ tvar lexik ln¡ho elementu ze vstupu.
----------------------------------------------------------------------------------------------------
procedure getlexui return tuniint;
-- Poslednˆ p©e‡ten˜ lexik ln¡ element: hodnota celo‡¡seln‚ho liter lu.
----------------------------------------------------------------------------------------------------
procedure getlexur return tunireal;
-- Poslednˆ p©e‡ten˜ lexik ln¡ element: hodnota re ln‚ho liter lu.
----------------------------------------------------------------------------------------------------
procedure getlexstring return plexaggregate;
-- Poslednˆ p©e‡ten˜ lexik ln¡ element: hodnota znakov‚ho agreg tu.
----------------------------------------------------------------------------------------------------
procedure getlexcode return t_unsigned;
-- Poslednˆ p©e‡ten˜ lexik ln¡ element: hodnota dopl¤kov‚ho k¢du.
----------------------------------------------------------------------------------------------------
procedure setlex (
    lex            : in lexsym);
-- Zmˆn¡ poslednˆ p©e‡ten˜ lexik ln¡ element.
----------------------------------------------------------------------------------------------------
procedure setlexid (
    id             : in pentityident);
-- Zmˆn¡ identifik tor souvisej¡c¡ s poslednˆ p©e‡ten˜m lexik ln¡m elementem.
----------------------------------------------------------------------------------------------------
procedure setlexval (
    val            : in lexval);
-- Zmˆn¡ hodnotu poslednˆ p©e‡ten‚ho lexik ln¡ho symbolu.
----------------------------------------------------------------------------------------------------
{
----------------------------------------------------------------------------------------------------
procedure getlexval (var val : lexval) =
-- Z¡sk  hodnotu poslednˆ p©e‡ten‚ho prvku.
----------------------------------------------------------------------------------------------------
procedure setlexval (const val : lexval) =
-- Zmˆn¡ hodnotu poslednˆ p©e‡ten‚ho lexik ln¡ho symbolu.
----------------------------------------------------------------------------------------------------
}
----------------------------------------------------------------------------------------------------
procedure lex_set_default_lexer;
-- Rezerva do budoucna: nastav¡ implicitn¡ lexik ln¡ analyz tor. Zat¡m pouze alokuje standardn¡
-- lexik ln¡ analyz tor.
----------------------------------------------------------------------------------------------------



-- dop©edn‚ deklarace
class abstract c_lex_behavior; type p_lex_behavior = ^class c_lex_behavior;



----------------------------------------------------------------------------------------------------
class public abstract c_lex_behavior = 
-- Policy t©¡da implementuj¡c¡ modifikaci chov n¡ lexik ln¡ho analyz toru.
----------------------------------------------------------------------------------------------------

    var
      -- re‘im ohla¨ov n¡ konc– © dk– (T-hl sit, F-nehl sit)
      report_eol   : protected t_logical := false;

    ------------------------------------------------------------------------------------------------
    virtual {%%TODO(ABSTRACT)} search_keyword (
        txt        : in tentityident;            -- textov  reprezentace kl¡‡ov‚ho slova
        lex        : in out lexsym;              -- lexik ln¡ element
        val        : in out lexval);             -- hodnota elementu
    -- Vyhled n¡ kl¡‡ov‚ho slova podle jeho textov‚ reprezentace.
    ------------------------------------------------------------------------------------------------
    
    end c_lex_behavior;



----------------------------------------------------------------------------------------------------
class public c_lex_behavior_flex = extend c_lex_behavior;
-- Modifikace chov n¡ lexik ln¡ho analyz toru: Flex - nehl s¡ konce © dk–, p©ekl d  kl¡‡ov  slova.
----------------------------------------------------------------------------------------------------

    end c_lex_behavior_flex;



----------------------------------------------------------------------------------------------------
class public c_lex_behavior_plain = extend c_lex_behavior;
-- Modifikace chov n¡ lexik ln¡ho analyz toru: Nic - hl s¡ konce © dk–, nep©ekl d  kl¡‡ov  slova.
----------------------------------------------------------------------------------------------------

    end c_lex_behavior_plain;


end cc_lex;
