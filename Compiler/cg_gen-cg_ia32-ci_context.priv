----------------------------------------------------------------------------------------------------
module private ci_context =
-- Překladač Flexu.
-- Operace s kontextem generování výrazu.
----------------------------------------------------------------------------------------------------
-- Ondra : 05.04.2002 : Vytvořil
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
procedure setrparams (
    context        : in out iexprcontext;        -- kontext generování výrazu
    mode           : in iexprloadmode;           -- režim zpracování výrazu
    typ            : in pentity_type) =          -- očekávaný typ výrazu
-- Vymyslí atributy registrů.
----------------------------------------------------------------------------------------------------
with
  cc_def.cc_unitype;

begin
  if typ<>nil and (typ^.stype in dts_ordinal or mode in iexprloadmodeset:[lm_reg,lm_reg_all,lm_conv])

    -- z očekávaného typu výrazu odvodit atributy registrů
    then
      context.rsize:=unidata_size_to_unsigned(typ^.size);
      context.rsign:=typ^.stype=dt_signed;

    -- dosadit implicitní údaje
    else
      context.rsize:=idefregsize;
      context.rsign:=false;
      end if;
  end setrparams;



----------------------------------------------------------------------------------------------------
procedure setouttyp (
    context        : in out iexprcontext;        -- kontext generování výrazu
    typ            : in pentity_type) =          -- očekávaný typ výrazu
-- Zkopíruje z očekávaného typu výrazu vybrané zajímavé údaje do kontextu.
----------------------------------------------------------------------------------------------------
begin
  if typ<>nil then
    context.outtyp.stype:=typ^.stype;
    context.outtyp.size:=typ^.size;
    context.outtyp.pattrib:=typ^.pattrib;
    context.outtyp.base:=typ^.base.getutype;
    end if;
  end setouttyp;



----------------------------------------------------------------------------------------------------
procedure i_createcontext =
-- Vytvoří nový kontext.
----------------------------------------------------------------------------------------------------
begin
  -- doplnit údaje
  context.mode:=mode;
  setouttyp(context,typ);

  -- preferovaný registr
  context.rpref.reg:=in_none;
  context.rpref.mode:=irm_int;

  -- preferovaný způsob předání výsledku
  context.outpref:=iop_none;

  -- odvodit vlastnosti použitých registrů z typu výrazu
  setrparams(context,mode,typ);
  end i_createcontext;



----------------------------------------------------------------------------------------------------
procedure i_newcontext =
-- Ze starého kontextu odvodí nový a dosadí do něj aktualizované údaje.
----------------------------------------------------------------------------------------------------
begin
  -- převzít základ
  --newcontext:=oldcontext;

  -- převzít některé údaje
  newcontext.rpref:=oldcontext.rpref;
  newcontext.outtyp:=oldcontext.outtyp;

  -- preferovaný způsob předání výsledku
  newcontext.outpref:=iop_none;

  -- dosadit změněné údaje
  newcontext.mode:=mode;
  setouttyp(newcontext,typ);

  -- odvodit vlastnosti použitých registrů z typu výrazu
  setrparams(newcontext,mode,typ);

  -- zrušit požadavek na dynamické atributy
  newcontext.rta:=nil;

  -- inicializovat lokální přidělování registrů
  newcontext.active:=nil;
  for i in in_first..in_last loop
    -- Ondra 11.9.2002 : Zde se ztrácel příznak Frozen. Výsledkem bylo, že se
    -- frozenutý (tj. někdy v minulosti použitý, poté pushnutý a nakonec delší
    -- dobu nepoužávaný) registr za jistých okolností (volání podprogramu)
    -- zbytečně znovu uložil (stav Pushed). Moc to nevadilo, protože se nakonec
    -- stejně při obnově použila hodnota z prapůvodního PUSHe, ale bylo to a)
    -- zbytečné a b) kdo ví co ještě to mohlo způsobit.
    if oldcontext.reginfo[i].status in iregstatusset:[irs_pushed{,irs_frozen}]
      then newcontext.reginfo[i].status:=irs_used;
      else newcontext.reginfo[i].status:=oldcontext.reginfo[i].status;
      end if;
    end loop;
  newcontext.mapcount:=0;

  newcontext.dump_level:=oldcontext.dump_level+1;
  end i_newcontext;


{
----------------------------------------------------------------------------------------------------
procedure i_retrieve_context =
-- Převede nastavení subcontextu včetně jednoho operandu reprezentujícího návratovou hodnotu do 
-- nadřazeného kontextu.
----------------------------------------------------------------------------------------------------
begin
  -- převést registry z podřízeného kontextu do nadřazeného
  if op.optype=io_reg then
    declare var
      no_register  : static ioperreg := nil;
    begin
      i_reg_retrieve(inst,info,subcontext,context,op.reg,no_register);
      end declare;
  elsif op.optype=io_mem then
    i_reg_retrieve(inst,info,subcontext,context,op.base,op.index);
  else
    declare var
      no_register  : static ioperreg := nil;
    begin
      i_reg_retrieve(inst,info,subcontext,context,no_register,no_register);
      end declare;
    end if;
  end i_retrieve_context;
}


----------------------------------------------------------------------------------------------------
procedure i_setrpref =
-- Přiřadí kontextu preferovaný registr.
----------------------------------------------------------------------------------------------------
begin
  context.rpref.reg :=uni;
  context.rpref.mode:=mode;
  end i_setrpref;



----------------------------------------------------------------------------------------------------
procedure i_setoutpref =
-- Přiřadí kontextu preferovanou metodu předání výsledku.
----------------------------------------------------------------------------------------------------
begin
  context.outpref:=outpref;
  end i_setoutpref;



----------------------------------------------------------------------------------------------------
procedure i_set_orgtyp =
-- Přiřadí kontextu původní typ výrazu daný generovaným podvýrazem.
----------------------------------------------------------------------------------------------------
begin
  context.orgtyp:=orgtyp;
  end i_set_orgtyp;



----------------------------------------------------------------------------------------------------
procedure i_compose_outtyp =
-- Přiřadí kontextu preferovanou metodu předání výsledku.
----------------------------------------------------------------------------------------------------
begin
  context.outtyp.stype:=stype;
  context.outtyp.size:=size;
  context.outtyp.pattrib:=pattrib;
  context.outtyp.base:=base;
  end i_compose_outtyp;



end ci_context;
