----------------------------------------------------------------------------------------------------
module private ci_context =
-- P©eklada‡ Flexu.
-- Operace s kontextem generov n¡ v˜razu.
----------------------------------------------------------------------------------------------------
-- Ondra : 05.04.2002 : Vytvo©il
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
procedure setrparams (
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    mode           : in iexprloadmode;           -- re‘im zpracov n¡ v˜razu
    typ            : in pentity_type) =          -- o‡ek van˜ typ v˜razu
-- Vymysl¡ atributy registr–.
----------------------------------------------------------------------------------------------------
with
  cc_def.cc_unitype;

begin
  if (typ<>nil) and ((typ^.stype in dts_ordinal) or (mode in iexprloadmodeset:[lm_reg,lm_reg_all,lm_conv]))

    -- z o‡ek van‚ho typu v˜razu odvodit atributy registr–
    then
      context.rsize:=unidata_size_to_unsigned(typ^.size);
      context.rsign:=typ^.stype=dt_signed;

    -- dosadit implicitn¡ £daje
    else
      context.rsize:=idefregsize;
      context.rsign:=false;
      end if;
  end setrparams;



----------------------------------------------------------------------------------------------------
procedure setouttyp (
    context        : in out iexprcontext;        -- kontext generov n¡ v˜razu
    typ            : in pentity_type) =          -- o‡ek van˜ typ v˜razu
-- Zkop¡ruje z o‡ek van‚ho typu v˜razu vybran‚ zaj¡mav‚ £daje do kontextu.
----------------------------------------------------------------------------------------------------
begin
  if typ<>nil then
    context.outtyp.stype:=typ^.stype;
    context.outtyp.size:=typ^.size;
    context.outtyp.pattrib:=typ^.pattrib;
    context.outtyp.base:=typ^.base.getutype;
    end if;
  end setouttyp;



----------------------------------------------------------------------------------------------------
procedure i_createcontext =
-- Vytvo©¡ nov˜ kontext.
----------------------------------------------------------------------------------------------------
begin
  -- doplnit £daje
  context.mode:=mode;
  setouttyp(context,typ);

  -- preferovan˜ registr
  context.rpref.reg:=in_none;
  context.rpref.mode:=irm_int;

  -- preferovan˜ zp–sob p©ed n¡ v˜sledku
  context.outpref:=iop_none;

  -- odvodit vlastnosti pou‘it˜ch registr– z typu v˜razu
  setrparams(context,mode,typ);
  end i_createcontext;



----------------------------------------------------------------------------------------------------
procedure i_newcontext =
-- Ze star‚ho kontextu odvod¡ nov˜ a dosad¡ do nˆj aktualizovan‚ £daje.
----------------------------------------------------------------------------------------------------
begin
  -- p©evz¡t z klad
  --newcontext:=oldcontext;

  -- p©evz¡t nˆkter‚ £daje
  newcontext.rpref:=oldcontext.rpref;
  newcontext.outtyp:=oldcontext.outtyp;

  -- preferovan˜ zp–sob p©ed n¡ v˜sledku
  newcontext.outpref:=iop_none;

  -- dosadit zmˆnˆn‚ £daje
  newcontext.mode:=mode;
  setouttyp(newcontext,typ);

  -- odvodit vlastnosti pou‘it˜ch registr– z typu v˜razu
  setrparams(newcontext,mode,typ);

  -- zru¨it po‘adavek na dynamick‚ atributy
  newcontext.rta:=nil;

  -- inicializovat lok ln¡ p©idˆlov n¡ registr–
  newcontext.active:=nil;
  for i in in_first..in_last loop
    -- Ondra 11.9.2002 : Zde se ztr cel p©¡znak Frozen. V˜sledkem bylo, ‘e se
    -- frozenut˜ (tj. nˆkdy v minulosti pou‘it˜, pot‚ pushnut˜ a nakonec del¨¡
    -- dobu nepou‘ van˜) registr za jist˜ch okolnost¡ (vol n¡ podprogramu)
    -- zbyte‡nˆ znovu ulo‘il (stav Pushed). Moc to nevadilo, proto‘e se nakonec
    -- stejnˆ p©i obnovˆ pou‘ila hodnota z prap–vodn¡ho PUSHe, ale bylo to a)
    -- zbyte‡n‚ a b) kdo v¡ co je¨tˆ to mohlo zp–sobit.
    if oldcontext.reginfo[i].status in iregstatusset:[irs_pushed{,irs_frozen}]
      then newcontext.reginfo[i].status:=irs_used;
      else newcontext.reginfo[i].status:=oldcontext.reginfo[i].status;
      end if;
    end loop;
  newcontext.mapcount:=0;

  newcontext.dump_level:=oldcontext.dump_level+1;
  end i_newcontext;


{
----------------------------------------------------------------------------------------------------
procedure i_retrieve_context =
-- P©evede nastaven¡ subcontextu v‡etnˆ jednoho operandu reprezentuj¡c¡ho n vratovou hodnotu do 
-- nad©azen‚ho kontextu.
----------------------------------------------------------------------------------------------------
begin
  -- p©ev‚st registry z pod©¡zen‚ho kontextu do nad©azen‚ho
  if op.optype=io_reg then
    declare var
      no_register  : static ioperreg := nil;
    begin
      i_reg_retrieve(inst,info,subcontext,context,op.reg,no_register);
      end declare;
  elsif op.optype=io_mem then
    i_reg_retrieve(inst,info,subcontext,context,op.base,op.index);
  else
    declare var
      no_register  : static ioperreg := nil;
    begin
      i_reg_retrieve(inst,info,subcontext,context,no_register,no_register);
      end declare;
    end if;
  end i_retrieve_context;
}


----------------------------------------------------------------------------------------------------
procedure i_setrpref =
-- P©i©ad¡ kontextu preferovan˜ registr.
----------------------------------------------------------------------------------------------------
begin
  context.rpref.reg :=uni;
  context.rpref.mode:=mode;
  end i_setrpref;



----------------------------------------------------------------------------------------------------
procedure i_setoutpref =
-- P©i©ad¡ kontextu preferovanou metodu p©ed n¡ v˜sledku.
----------------------------------------------------------------------------------------------------
begin
  context.outpref:=outpref;
  end i_setoutpref;



----------------------------------------------------------------------------------------------------
procedure i_compose_outtyp =
-- P©i©ad¡ kontextu preferovanou metodu p©ed n¡ v˜sledku.
----------------------------------------------------------------------------------------------------
begin
  context.outtyp.stype:=stype;
  context.outtyp.size:=size;
  context.outtyp.pattrib:=pattrib;
  context.outtyp.base:=base;
  end i_compose_outtyp;



end ci_context;