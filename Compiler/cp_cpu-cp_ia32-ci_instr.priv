----------------------------------------------------------------------------------------------------
module private ci_instr =
-- P©eklada‡ Flexu.
-- Popis instruk‡n¡ sady IA-32.
----------------------------------------------------------------------------------------------------
-- Ondra : 02.04.2002 : Vytvo©il
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
entry =
-- Inicializace.
----------------------------------------------------------------------------------------------------
var
  i_first          : iopcodemap:range;
  i_last           : iopcodemap:range;
  ii               : iinstr;

begin
{ P–vodn¡, m‚nˆ ‡iteln  a na [constraint_error] n chyln  verze:

  i:=iopcodemap:first;
  loop
    ii:=iopcodemap[i].ii;
    iopcodemapindex[ii].first:=i;
    while i<iopcodemap:last and iopcodemap[i+1].ii=ii loop succ i; end loop;
    iopcodemapindex[ii].last:=i;
    succ i;
    until i>iopcodemap:last;
}

  -- sestavit index do tabulky k¢dov n¡ instrukc¡
  i_first:=iopcodemap:first;
  loop
    -- instrukce, jej¡‘ s‚rii k¢dov n¡ nyn¡ lokalizujeme
    ii:=iopcodemap[i_first].ii;

    -- dohledat index posledn¡ho k¢dov n¡
    i_last:=i_first;
    while i_last<iopcodemap:last and then iopcodemap[i_last+1].ii=ii loop succ i_last end loop;

    -- sestavit index na celou s‚rii k¢dov n¡ t‚to instrukce
    iopcodemapindex[ii].first:=i_first;
    iopcodemapindex[ii].last :=i_last;

#if not #declared hynek; #or else; not hynek then;
    -- byla-li to posledn¡ s‚rie, tak u‘ nen¡ co zpracov vat
    if i_last=iopcodemap:last then break end if;

    -- zvolit doln¡ index s‚rie izolovan‚ v p©¡¨t¡ iteraci cyklu
    i_first:=succ i_last;
    end loop;

#else;
    -- zvolit doln¡ index s‚rie izolovan‚ v p©¡¨t¡ iteraci cyklu
    i_first:=succ i_last;

    -- pozn mka: pro rozpozn n¡ ukon‡en¡ cyklu se ƒ belsky pou‘ije v˜jimka [constraint_error]
    end loop;

catch
  -- odignorovat [constraint_error], v t‚to procedu©e je to norm ln¡
  when constraint_error do -- nic nedˆlat
#end if;
  end entry;

end ci_instr;