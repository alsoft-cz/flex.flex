----------------------------------------------------------------------------------------------------
module private cc_env =
-- Překladač.
-- #environment proměnné.
----------------------------------------------------------------------------------------------------
-- Ondra : 22.02.2000 : Vytvořil.
----------------------------------------------------------------------------------------------------

with
  cc_unitype,
  cc_var,
  cc_desc;

type
  -- popis #environment proměnné
  tenvvardesc      = record
      txt          : tshortident;
      env          : tenvvar;
      end record;

  -- hodnota #environment proměnné
  tenvval          = record
      lex          : lexsym;                     -- odpovídající lexikální element
      val          : lexval;                     -- hodnota
      end record;

var
  -- tabulka #environment proměnných
  envvartab        : const array 0..28 of tenvvardesc := [
      [for txt use 'COMPILER_NAME'                  , for env use env_compiler_name                  ],
      [for txt use 'COMPILER_SUBTYPE'               , for env use env_compiler_subtype               ],
      [for txt use 'COMPILER_TYPE'                  , for env use env_compiler_type                  ],
      [for txt use 'COMPILER_VERSION'               , for env use env_compiler_version               ],
      [for txt use 'COMPILE_DATE'                   , for env use env_compile_date                   ],
      [for txt use 'COMPILE_LOCAL_DATE'             , for env use env_compile_local_date             ],
      [for txt use 'COMPILE_LOCAL_TIME'             , for env use env_compile_local_time             ],
      [for txt use 'COMPILE_TIME'                   , for env use env_compile_time                   ],
      [for txt use 'HOST_MACHINE_ARCHITECTURE'      , for env use env_host_machine_architecture      ],
      [for txt use 'HOST_MACHINE_BITS'              , for env use env_host_machine_bits              ],
      [for txt use 'HOST_MACHINE_DIRECT_BYTEORDER'  , for env use env_host_machine_direct_byteorder  ],
      [for txt use 'HOST_MACHINE_VERSION'           , for env use env_host_machine_version           ],
      [for txt use 'HOST_OS_FAMILY'                 , for env use env_host_os_family                 ],
      [for txt use 'HOST_OS_NAME'                   , for env use env_host_os_name                   ],
      [for txt use 'HOST_OS_SUBSYSTEM_TYPE'         , for env use env_host_os_subsystem_type         ],
      [for txt use 'HOST_OS_SUBSYSTEM_VERSION'      , for env use env_host_os_subsystem_version      ],
      [for txt use 'HOST_OS_TYPE'                   , for env use env_host_os_type                   ],
      [for txt use 'HOST_OS_VERSION'                , for env use env_host_os_version                ],
      [for txt use 'LANGUAGE_VERSION'               , for env use env_language_version               ],
      [for txt use 'TARGET_MACHINE_ARCHITECTURE'    , for env use env_target_machine_architecture    ],
      [for txt use 'TARGET_MACHINE_BITS'            , for env use env_target_machine_bits            ],
      [for txt use 'TARGET_MACHINE_DIRECT_BYTEORDER', for env use env_target_machine_direct_byteorder],
      [for txt use 'TARGET_MACHINE_VERSION'         , for env use env_target_machine_version         ],
      [for txt use 'TARGET_OS_FAMILY'               , for env use env_target_os_family               ],
      [for txt use 'TARGET_OS_NAME'                 , for env use env_target_os_name                 ],
      [for txt use 'TARGET_OS_SUBSYSTEM_TYPE'       , for env use env_target_os_subsystem_type       ],
      [for txt use 'TARGET_OS_SUBSYSTEM_VERSION'    , for env use env_target_os_subsystem_version    ],
      [for txt use 'TARGET_OS_TYPE'                 , for env use env_target_os_type                 ],
      [for txt use 'TARGET_OS_VERSION'              , for env use env_target_os_version              ]];

var
  -- tabulka hodnot #environment proměnných
  envtab           : array tenvvar of tenvval := nil;

----------------------------------------------------------------------------------------------------
procedure env_search =
-- Převede identifikátor na #environment proměnnou.
----------------------------------------------------------------------------------------------------
var
  zac              : envvartab:range;
  stred            : envvartab:range;
  stred_unsigned   : t_unsigned;
  kon              : envvartab:range;

begin
  zac:=envvartab:first;
  kon:=envvartab:last;
  loop
    stred_unsigned:=(zac+kon) div 2;
    stred:=stred_unsigned;
    if id>envvartab[stred].txt
      then zac:=stred+1;
      else kon:=stred;
      end if;
    until zac>=kon;
  if id=envvartab[zac].txt
    -- nalezeno
    then env:=envvartab[zac].env;
    -- nenalezeno
    else env:=env_none;
    end if;
  end env_search;



----------------------------------------------------------------------------------------------------
procedure env_get_var =
-- Hodnota zadané #environment proměnné.
----------------------------------------------------------------------------------------------------
begin
  lex:=envtab[env].lex;
  val:=envtab[env].val;
  end env_get_var;



----------------------------------------------------------------------------------------------------
procedure env_init_var =
-- Inicializace hodnot #environment proměnných.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    procedure setint (
        env        : in tenvvar;
        i          : in t_unsigned) =
    -- Přiřadí zadané #environment proměnné číslo.
    ------------------------------------------------------------------------------------------------
    begin
      envtab[env].lex:=lex_numi;
      envtab[env].val.ui:=unsigned_to_uniint(i);
      end setint;



    ------------------------------------------------------------------------------------------------
    procedure setlogical (
        env        : in tenvvar;
        b          : in t_logical) =
    -- Přiřadí zadané #environment proměnné logickou hodnotu.
    ------------------------------------------------------------------------------------------------
    begin
      if b
        then envtab[env].lex:=lex_meta_true;
        else envtab[env].lex:=lex_meta_false;
        end if;
      end setlogical;



    ------------------------------------------------------------------------------------------------
    procedure setstr (
        env        : in tenvvar;
        str        : in t_char32ustr) =
    -- Přiřadí zadané #environment proměnné řetězec.
    ------------------------------------------------------------------------------------------------
    begin
      envtab[env].lex:=lex_str;

      -- alokovat paměť
      new envtab[env].val.str range str:length;

      -- nacpat znaky do bufferu (s překladem)
      for i in str:range loop
        --%%TODO(COMPATIBILITY) envtab[env].val.str^ & char_to_unichar(str[i]);
        -- ^^ Příznak protected/private celého stringu se nesmí zohledňovat u zřetězení s komponentou
        succ envtab[env].val.str^:length;
        envtab[env].val.str^[envtab[env].val.str^:length]:=char_to_unichar(str[i]);
        end loop;
      end setstr;



begin
  ---- údaje o jazyku ------------------------------------------------------------------------------
  -- verze jazyka
  setint(env_language_version           ,cc_desc.language_version);

  ---- údaje o překladači --------------------------------------------------------------------------
  -- jméno překladače
  setstr(env_compiler_name              ,env_compiler.c_name);

  -- typ překladače
  setstr(env_compiler_type              ,env_compiler.c_type);

  -- subtyp překladače
  setstr(env_compiler_subtype           ,env_compiler.c_subtype);

  -- verze překladače
  setstr(env_compiler_version           ,env_compiler.c_ver);

  ---- údaje o tomto překladu ----------------------------------------------------------------------
  -- %%X Pozor, 2 chyby:
  -- 1. GETDATE/GETTIME se dělá dvakrát
  -- 2. UTC není totéž co GMT
{%%TODO(LIB)
  -- datum překladu (UTC)
  setstr(env_compile_date               ,datetostr(getgmtdate,df_iso8601));

  -- čas překladu (UTC)
  setstr(env_compile_time               ,timetostr(getgmttime,tf_iso8601));

  -- datum překladu (lokální)
  setstr(env_compile_local_date         ,datetostr(getdate,df_iso8601));

  -- čas překladu (lokální)
  setstr(env_compile_local_time         ,timetostr(gettime,tf_iso8601));
}
  ---- parametry platformy na které běží překladač -------------------------------------------------
  -- jméno operačního systému
  setstr(env_host_os_name               ,sdbase_host.os_name);

  -- skupina operačních systému (UNIX;WIN32)
  setstr(env_host_os_family             ,os_family[sdbase_host.os_family]);

  -- typ operačního systému (Linux/BSD;95/NT)
--setstr(env_host_os_type               ,sdbase_host.os_type);
  setstr(env_host_os_type               ,os_type[sdbase_host.os_type]);

  -- verze operačního systému
  setstr(env_host_os_version            ,sdbase_host.os_version);

  -- typ subsystému (driver/GUI/console)
--setstr(env_host_os_subsystem_type     ,sdbase_host.os_subsystem_type);
  setstr(env_host_os_subsystem_type     ,os_subsystem[sdbase_host.os_subsystem_type]);

  -- verze subsystému
  setstr(env_host_os_subsystem_version  ,sdbase_host.os_subsystem_version);

  -- architektura počítače (IA-32/AS400)
  setstr(env_host_machine_architecture  ,machine_architecture[sdbase_host.machine_architecture]);

  -- verze architektury (5-P16-P2)
  setstr(env_host_machine_version       ,sdbase_host.machine_version);

  -- šířka slova v bitech (32,64,128)
  setint(env_host_machine_bits          ,sdbase_host.machine_bits);

  -- pořadí bytů
  setlogical(env_host_machine_direct_byteorder,sdbase_host.machine_direct_byteorder);

  ---- parametry cílové platformy ------------------------------------------------------------------
  -- jméno operačního systému
  setstr(env_target_os_name             ,env_target_system.os_name);

  -- skupina operačních systému (UNIX;WIN32)
  setstr(env_target_os_family           ,os_family[env_target_system.os_family]);

  -- typ operačního systému (Linux/BSD;95/NT)
--setstr(env_target_os_type             ,env_target_system.os_type);
  setstr(env_target_os_type             ,os_type[env_target_system.os_type]);

  -- verze operačního systému
  setstr(env_target_os_version          ,env_target_system.os_version);

  -- typ subsystému (driver/GUI/console)
--setstr(env_target_os_subsystem_type   ,env_target_system.os_subsystem_type);
  setstr(env_target_os_subsystem_type   ,os_subsystem[env_target_system.os_subsystem_type]);

  -- verze subsystému
  setstr(env_target_os_subsystem_version,env_target_system.os_subsystem_version);

  -- architektura počítače (IA-32/AS400)
  setstr(env_target_machine_architecture,machine_architecture[env_target_system.machine_architecture]);

  -- verze architektury (5-P16-P2)
  setstr(env_target_machine_version     ,env_target_system.machine_version);

  -- šířka slova v bitech (32,64,128)
  setint(env_target_machine_bits        ,env_target_system.machine_bits);

  -- pořadí bytů
  setlogical(env_target_machine_direct_byteorder,env_target_system.machine_direct_byteorder);
  end env_init_var;



end cc_env;
