----------------------------------------------------------------------------------------------------
module public cd_type =
-- Překladač Flexu.
-- Definice typů.
----------------------------------------------------------------------------------------------------
-- Ondra : 07.11.2001 : Vytvořil
----------------------------------------------------------------------------------------------------

with
  cc_def.cc_entity.cc_ref;

----- %%TECH ---------------------------------------------------------------------------------------
--   V tomto modulu se pracuje až se třemi úrovněmi právě překládaných
-- vnořených symbolů:
--
--   CONTEXT - nadřazený prvek
--   CURR    - právě překládaný prvek/překládaný typ
--   PTYP    - typ určený jménem nebo nový implicitně deklarovaný typ
--
-- Příklady:
--
--   module x =
--
--     type a = signed 32;
--     -------------------
--       context: x
--       curr:    a
--       ptyp:    <nepoužito>
--
--     type b = integer;
--     -----------------
--       context: x
--       curr:    b
--       ptyp:    integer
--       -- jméno typu "integer" se překládá v kontextu CURR, tedy B.
--
--     type c = array 1..10 of signed 32;
--     -----------------------|----------
--       context: x
--       curr:    c            <implicitně deklarovaný typ SIGNED>
--       ptyp:    <nepoužito>  <implicitně deklarovaný typ SIGNED>
--       -- zde se CURR postupně změní z C, což je ARRAY, na jeho bázový
--          (nepojmenovaný) typ SIGNED. Ten je zařazen do tabulky symbolů
--          prvku C.
--
--     type d = array 1..10 of enum i;j;k; end enum;
--     -----------------------|---------------------
--       context: x
--       curr:    d            <implicitně deklarovaný typ ENUM>
--       ptyp:    <nepoužito>  <implicitně deklarovaný typ ENUM>
--       -- zde se CURR postupně změní z D, což je ARRAY, na jeho bázový
--          (nepojmenovaný) typ ENUM. Ten je zařazen do tabulky symbolů
--          prvku C, jeho prvky (I,J,K) do tabulky symbolů prvku ENUM a odkaz
--          na ně do prvku CONTEXT.
--
--     type e = array 1..10 of integer;
--     -----------------------|--------
--       context: x
--       curr:    e            e
--       ptyp:    <nepoužito>  integer
--       -- na tomto a předchozím příkladě je dobře vidět, jak se mění
--          CURR a PTYP podle toho, zda se jedná o implicitní deklaraci
--          nebo jméno typu
--
--     type f = array 1..10 of integer range 1..10;
--     -----------------------|-------|-------------
--       context: x
--       curr:    e            e       <implicitně deklarovaný typ SIGNED>
--       ptyp:    <nepoužito>  integer <implicitně deklarovaný typ SIGNED>
--       -- variace na předchozí téma se změnou CURR a PTYP kvůli uvedení
--          determinace rozsahu.
--
--     var v : integer;
--     ----------------
--       context: x
--       curr:    x
--       ptyp:    integer
--
--     var v : signed 32;
--     ------------------
--       context: x
--       curr:    <impicitně deklarovaný typ SIGNED>
--       ptyp:    <impicitně deklarovaný typ SIGNED>
--
--     end x;
--
-- Nový impicitně deklarovaný typ se vždy zařazuje do tabulky symbolů právě
-- překládaného prvku CURR. Kvůli nutnosti zařazení odkazů na vnitřní složky
-- některých typů (ENUM) se musí předávat i CONTEXT, který jinak nemá význam.
--
-- Změna v uvedených pravidlech by mohla vyvolat nežádoucí změny v chování
-- preprocesoru.
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
procedure p_typeedef (
    context        : in tcontext;                -- nadřazený kontext
    curr           : in out tentity_type;        -- překládaný typ
    curr_context   : in tcontext;                -- primární kontext typu
    compat         : in typecompat);             -- determinace kompatibility
-- Definice typu jako součást deklarace.
----------------------------------------------------------------------------------------------------
procedure p_typeidef (
    context        : in tcontext;                -- nadřazený kontext
    curr           : in tcontext;                -- překládaný prvek
    ptyp           : out reftype);               -- překládaný typ
-- Jméno typu nebo definice jako součást implicitní deklarace.
----------------------------------------------------------------------------------------------------
procedure p_typename (
    context        : in tcontext;                -- nadřazený kontext
    curr           : in tcontext;                -- překládaný prvek
    ptyp           : out reftype);               -- překládaný typ
-- Jméno typu.
----------------------------------------------------------------------------------------------------
procedure p_private_extension (
    context        : in tcontext;                -- nadřazený kontext
    curr           : in out tentity_type;        -- typ
    curr_context   : in tcontext);               -- primární kontext typu
-- Private extension declaration.
----------------------------------------------------------------------------------------------------
procedure p_def_procedure (
    context        : in tcontext;                -- nadřazený kontext
    curr           : in out tentity_type;        -- typ
    curr_context   : in tcontext);               -- primární kontext typu
-- Definice typu procedura.
----------------------------------------------------------------------------------------------------
procedure p_def_message (
    context        : in tcontext;                -- nadřazený kontext
    curr           : in out tentity_type;        -- typ
    curr_context   : in tcontext);               -- primární kontext typu
-- Definice typu zpráva.
----------------------------------------------------------------------------------------------------
procedure p_def_task (
    context        : in tcontext;                -- nadřazený kontext
    curr           : in out tentity_type;        -- typ
    curr_context   : in tcontext);               -- primární kontext typu
-- Definice typu task.
----------------------------------------------------------------------------------------------------

end cd_type;
