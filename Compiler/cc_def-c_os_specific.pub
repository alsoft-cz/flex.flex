----------------------------------------------------------------------------------------------------
class public abstract c_os_specific =
-- Překladač Flexu.
-- Vlastnosti specifické pro konkrétní operační systém.
----------------------------------------------------------------------------------------------------
-- Ondra : 16.07.2001 : Vytvořil
-- Hynek : 23.06.2003 : Přidal podporu pro knihovny
----------------------------------------------------------------------------------------------------

with
  cc_def.cc_entity,
  cc_def.cc_unitype;

----------------------------------------------------------------------------------------------------
virtual abstract setconvention (
    proc           : in pentity;                 -- procedura nebo proceduralni typ
    id             : in tentityident);           -- identifikátor
-- Nastaví volací konvenci procedury nebo proceduralniho typu.
----------------------------------------------------------------------------------------------------
virtual abstract setlibrary (
    modl           : in pentity_module;          -- modul
    id             : in tentityident);           -- typ knihovny
-- Nastaví typ knihovny pro modul
----------------------------------------------------------------------------------------------------
virtual abstract export_compile (
    entity         : in pentity_compile;         -- program
    try_export     : in t_logical;               -- T-zkusit exportovat, nejde-li, nic se neděje
    extname        : in t_external_entity_ident);-- externí jmeno
-- Export kompilační jednotky do externí knihovny pod jménem [extname].
----------------------------------------------------------------------------------------------------
virtual abstract export_program (
    entity         : in pentity_program;         -- program
    try_export     : in t_logical;               -- T-zkusit exportovat, nejde-li, nic se neděje
    extname        : in t_external_entity_ident);-- externí jmeno
-- Export programu do externí knihovny pod jménem [extname].
----------------------------------------------------------------------------------------------------
virtual abstract export_static_subprogram (
    entity         : in pentity_static_subprogram; -- statický podprogram
    try_export     : in t_logical;               -- T-zkusit exportovat, nejde-li, nic se neděje
    extname        : in t_external_entity_ident);-- externí jmeno
-- Export statického podprogramu do externí knihovny pod jménem [extname].
----------------------------------------------------------------------------------------------------
virtual abstract export_variable (
    entity         : in pentity_var;             -- proměnná
    try_export     : in t_logical;               -- T-zkusit exportovat, nejde-li, nic se neděje
    extname        : in t_external_entity_ident);-- externí jmeno
-- Export proměnné do externí knihovny pod jménem [extname].
----------------------------------------------------------------------------------------------------
virtual abstract import_compile (
    entity         : in pentity_compile;         -- program
    try_import     : in t_logical;               -- T-zkusit importovat, nejde-li, nic se neděje
    extname        : in t_external_entity_ident; -- externí jméno
    libname        : in t_external_entity_ident);-- jméno knihovny
-- Import kompilační jednotky z externí knihovny [libname] pod jménem [extname].
----------------------------------------------------------------------------------------------------
virtual abstract import_static_subprogram (
    entity         : in pentity_static_subprogram; -- statický podprogram
    try_import     : in t_logical;               -- T-zkusit importovat, nejde-li, nic se neděje
    extname        : in t_external_entity_ident; -- externí jméno
    libname        : in t_external_entity_ident);-- jméno knihovny
-- Import statického podprogramu z externí knihovny [libname] pod jménem [extname].
----------------------------------------------------------------------------------------------------
virtual abstract import_variable (
    entity         : in pentity_var;             -- proměnná
    try_import     : in t_logical;               -- T-zkusit importovat, nejde-li, nic se neděje
    extname        : in t_external_entity_ident; -- externí jméno
    libname        : in t_external_entity_ident);-- jméno knihovny
-- Import proměnné z externí knihovny [libname] pod jménem [extname].
----------------------------------------------------------------------------------------------------
virtual abstract create_import_info (
    extname        : in t_external_entity_ident; -- externí jméno
    libname        : in t_external_entity_ident; -- jméno knihovny
    import_info    : out p_flex_record);         -- vytvořené importní informace
-- Vytvoří importní informace a naplní je dodanými jmény externí entity a knihovny.    
----------------------------------------------------------------------------------------------------
virtual abstract clone_import_info (
    old_import_info: in p_flex_record;           -- původní importní informace
    new_import_info: out p_flex_record);         -- vytvořené importní informace
-- Vytvoří kopii importních informací.
----------------------------------------------------------------------------------------------------
virtual abstract getimagebase (
    compi          : in tentity_compile)         -- kompilacni jednotka
    return tunicode_addr;
-- Vrati bazovou adresu vysledneho image
----------------------------------------------------------------------------------------------------
virtual abstract getstackreserve (
    compi          : in tentity_compile)         -- kompilacni jednotka
    return tunidata_size;                        -- predalokovana velikost v bytech
-- Vrati velikost rezervovaneho mista na stacku kompilacni jednotky
----------------------------------------------------------------------------------------------------

end c_os_specific;