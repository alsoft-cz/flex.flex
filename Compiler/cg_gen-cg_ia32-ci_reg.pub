----------------------------------------------------------------------------------------------------
module public ci_reg =
-- Překladač Flexu.
-- Práce s registry.
----------------------------------------------------------------------------------------------------
-- Ondra : 05.04.2002 : Vytvořil
----------------------------------------------------------------------------------------------------

with
  standard,
  cp_cpu.cp_32.cp_def,
  cg_gen.cg_ia32.ci_def,
  cg_gen.cg_ia32.ci_context;

extend
  cp_cpu.cp_ia32.ci_instr;

type
  -- kontext uložených registrů
  t_reg_save_data  = array iunireg of timm32;

----------------------------------------------------------------------------------------------------
procedure i_reg_get_available (
    context        : in iexprcontext;            -- kontext generování výrazu
    availregs      : out iuniregset);            -- množina volných registrů
-- Vrátí množinu všech volných registrů.
----------------------------------------------------------------------------------------------------
procedure i_reg_reserve_available (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o průběhu generování
    context        : in out iexprcontext;        -- kontext generování výrazu
    exclusion      : in iuniregset;              -- vynechávané registry
    availregs      : out iuniregset;             -- množina volných registrů
    minregs        : in t_unsigned;              -- minimální počet registrů
    _bit8          : in t_logical);              -- T-bude potřeba 8-mi bitový reg.
-- Vrátí množinu všech volných registrů, kromě registrů z EXCLUSION.
-- Pokud není k dispozici alespoň MINREGS registrů, alokuje nějaké použité.
-- Je-li BIT8=True, zajistí, aby byl k dispozici ještě nějaký jiný registr
-- než ESI a EDI.
----------------------------------------------------------------------------------------------------
procedure i_reg_free_available (
    info           : in igeninfo;                -- informace o překladu
    context        : in out iexprcontext;        -- kontext generování výrazu
    availregs      : in out iuniregset);         -- množina volných registrů
-- Uvolní množinu volných registrů.
----------------------------------------------------------------------------------------------------
procedure i_reg_are_available (
    context        : in iexprcontext;            -- kontext generování výrazu
    n              : in t_unsigned)              -- velikost registru v bytech
    return t_logical;
-- True, je-li k dispozici alespoň jeden N-bytový registr.
----------------------------------------------------------------------------------------------------
procedure i_reg_get_count (
    regs           : in iuniregset;              -- množina registrů
    n              : in t_unsigned)              -- velikost registru v bytech
    return t_unsigned;                           -- kolik registrů máme
-- Spočítá, kolik je n-bytových registrů v REGS.
----------------------------------------------------------------------------------------------------
procedure i_reg_resize (
    reg            : in ireg;                    -- původní registr
    size           : in t_unsigned)              -- požadovaná velikost registru
    return ireg;                                 -- výsledný registr
-- Převede registr na zadanou velikost.
----------------------------------------------------------------------------------------------------
procedure i_reg_save_used (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o průběhu generování
    context        : in out iexprcontext);       -- kontext generování výrazu
-- Uloží na stack všechny použité registry.
----------------------------------------------------------------------------------------------------
procedure i_reg_save_used_local (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o průběhu generování
    context        : in out iexprcontext;        -- kontext generování výrazu
    save_data      : out t_reg_save_data);       -- kontext uložených registrů
-- Uloží na stack všechny aktivně lokálně použité registry.
----------------------------------------------------------------------------------------------------
procedure i_reg_restore_used_local (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o průběhu generování
    context        : in out iexprcontext;        -- kontext generování výrazu
    save_data      : in t_reg_save_data);        -- kontextu uložených registrů
-- Obnoví ze stacku všechny aktivně lokálně použité registry.
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
#separate public ci_alloc;
-- Alokátor registrů.
----------------------------------------------------------------------------------------------------

protected

----------------------------------------------------------------------------------------------------
#separate public ci_uni;
-- Primitiva pro práci s univerzálními registry.
----------------------------------------------------------------------------------------------------

end ci_reg;
