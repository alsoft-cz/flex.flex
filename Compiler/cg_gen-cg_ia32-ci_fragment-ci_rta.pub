----------------------------------------------------------------------------------------------------
module public ci_rta =
-- Překladač Flexu.
-- Manipulace s run-time atributy.
----------------------------------------------------------------------------------------------------
-- Ondra : 07.11.2003 : Vytvořil
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
procedure i_rta_load (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o průběhu generování
    context        : in out iexprcontext;        -- kontext generování výrazu
    op             : in c_operand;               -- operand, ke kterému se run-time atribut vztahuje
    rta            : in rtattrib;                -- run-time atribut
    vysl           : out c_operand;              -- načtená hodnota run-time atributu
    no_memory      : in t_logical := false;      -- T-atribut z paměti načíst do registru
    pref_reg       : in iunireg := in_none;      -- preferovaný registr
    reuse_reg      : in t_logical := false);     -- T-znovupoužít registr ze zdrojového operandu
-- Sestaví operand reprezentující zadaný run-time atribut. Jestliže ho je možné určit staticky, tak 
-- samozřejmě předá ven přímou hodnotu a registr se nepoužije. Jestliže je [no_memory] rovno True, 
-- nikdy nevrátí odkaz na atribut v paměti, ale načte ho v takovém případě do registru.
--
-- Trik: Jestliže se proceduře [i_rta_load] předá operand typu [io_mem] ukazující na pointer, lze ji
-- použít k sestavení adresy run-time atributu v něm uloženém, a to za účelem přiřazení DO tohoto 
-- atributu, nikoliv zjištění jeho hodnoty. Při tomto způsobu použití se doporučuje před volání
-- [i_rta_load] uvést [verify] s podmínkou "<op>.rta_info[<rta>].mode<>rtm_stored_in_value" a v 
-- místě volání [i_rta_load] uvést odkaz na popis tohoto triku.
----------------------------------------------------------------------------------------------------
procedure i_rta_load_address (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o průběhu generování
    context        : in out iexprcontext;        -- kontext generování výrazu
    op             : in c_operand;               -- operand, ke kterému se run-time atribut vztahuje
    rta            : in rtattrib;                -- run-time atribut
    vysl           : out c_operand;              -- adresa run-time atributu
    no_dependance  : in t_logical := false);     -- T-výsledek nesmí být závislý na původním operandu
-- Sestaví operand reprezentující adresu zadaného run-time atributu. Zdrojový operand [op] musí být 
-- typu [io_mem] a ukazovat na pointer, ve kterém je požadovaný run-time atribut uložen. Viz též
-- popis triku u procedury [i_rta_load], který se zde využívá.
--   Je-li [no_dependance] nastaveno na True, je zajištěno, že výsledný operand [vysl] nebude po
-- stránce použitých registrů závislý na původním operandu [op].
----------------------------------------------------------------------------------------------------
-- %%X Poznámka: Procedury [i_rta_store], [i_rta_store_to_temporary] a [i_rta_push] bych nejraději
-- viděl sjednocené přes něco jako je [t_store_destination] resp. návrh třídy 
-- [c_store_value_operation]. Viz též %%X u deklarace [t_store_destination] v nadřazeném modulu.
----------------------------------------------------------------------------------------------------
procedure i_rta_store (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o průběhu generování
    context        : in out iexprcontext;        -- kontext generování výrazu
    op             : in c_operand;               -- operand, ke kterému se run-time atribut vztahuje
    rta            : in rtattrib;                -- run-time atribut
    dst            : in c_operand);              -- cílový operand
-- Uloží zadaný run-time atribut do cílového operandu.
----------------------------------------------------------------------------------------------------
procedure i_rta_store_to_temporary (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o průběhu generování
    context        : in out iexprcontext;        -- kontext generování výrazu
    op             : in c_operand;               -- operand, ke kterému se run-time atribut vztahuje
    rta            : in rtattrib;                -- run-time atribut
    dst            : out c_operand);             -- alokovaná dočasná proměnná
-- Uloží zadaný run-time atribut do dočasné proměnné a vrátí její adresu.
----------------------------------------------------------------------------------------------------
procedure i_rta_push (
    inst           : in out icodeinst;           -- instance
    info           : in out igeninfo;            -- informace o průběhu generování
    context        : in out iexprcontext;        -- kontext generování výrazu
    op             : in c_operand;               -- operand, ke kterému se run-time atribut vztahuje
    rta            : in rtattrib);               -- run-time atribut
-- Uloží zadaný run-time atribut na stack.
----------------------------------------------------------------------------------------------------
procedure i_rta_set_modes_of_referenced_value (
    sub            : in pexpnode;                -- generovaný podvýraz
    vysl           : in out c_operand);          -- výsledek
-- Změní u zadaného operandu módy generování run-time atributů tak, aby odpovídaly referencovanému
-- objektu.
----------------------------------------------------------------------------------------------------
procedure i_rta_get_effective_mode (
    rta            : in rtattrib;                -- atribut, jehož efektivní mód se má zjistit
    rta_modes      : in t_rtattrib_modes)        -- nastavení všech atributů
    return t_rtattrib_mode;                      -- efektivní mód zjištění atributu
-- Rekurzivním prohledáním [rta_modes] zjistí efektivní mód zjištění zadaného atributu.
-- Efektivní mód je takový, který se po aplikaci rekuzivního výpočtu atributu z jiného atributu
-- nakonec použije pro výpočet zdrojového atributu.
----------------------------------------------------------------------------------------------------

end ci_rta;