----------------------------------------------------------------------------------------------------
module public cc_text =
-- Překladač Flexu.
-- Čtení zdrojáku.
----------------------------------------------------------------------------------------------------
-- Ondra : 25.04.2000 : Vytvořil
----------------------------------------------------------------------------------------------------

with
  standard,
  standard.names,
  standard.streams,
  cc_def;

extend
  cc_def.cc_lexsym;


-- dopředné deklarace
class c_source_file; type p_source_file = ^c_source_file;


----------------------------------------------------------------------------------------------------
class public c_source_file =
----------------------------------------------------------------------------------------------------

    var
      -- zásobník preprocesoru
      metastack    : string 100 of tmetastackitem; 

    ------------------------------------------------------------------------------------------------
    static open (
        name       : in t_text_name;             -- jméno otvíraného souboru
        include    : in t_logical);              -- T-soubor je includovaný
    -- Otevře soubor a připraví ho pro čtení.
    ------------------------------------------------------------------------------------------------
    static close;
    -- Zavre soubor
    ------------------------------------------------------------------------------------------------
    static get_full_name (
        name       : out p_text_name);
    -- Zjisti jmeno souboru
    ------------------------------------------------------------------------------------------------
    static get_file_name return c_name;
    -- Zjisti jmeno souboru
    ------------------------------------------------------------------------------------------------
    static getchar (
        char       : out lexchar);
    -- Přečte znak ze vstupu. Na konci vstupu vrátí \0, případné znaky \0 v souboru nijak 
    -- neošetřuje, takže se uživatel musí ještě ujistit voláním [is_eof].
    -- Po přečtení nového znaku ze vstupu inkrementuje počítadlo sloupců. Nijak neošetřuje konce
    -- řádků. Aktualizace počítadla řádků je ponechána na uživateli.
    ------------------------------------------------------------------------------------------------
    static ungetchar;
    -- Vrátí naposledy přečtený znak do vstupu.
    ------------------------------------------------------------------------------------------------
    static is_eof return t_logical;
    -- True, jestliže již byl přečten celý soubor.
    ------------------------------------------------------------------------------------------------
    static next_line;
    -- Posune počítadlo řádků o jedničku a zresetuje počítadlo sloupců.
    ------------------------------------------------------------------------------------------------
    static get_lines return t_unsigned;
    -- Dosud zpracovaný počet řádků souboru.
    ------------------------------------------------------------------------------------------------
    static get_effective return t_unsigned;
    -- Dosud zpracovaný počet efektivnich řádků souboru.
    ------------------------------------------------------------------------------------------------
    static get_position (
        pos        : out lexpos);                -- pozice
    -- Zjistí aktuální pozici ve zdrojáku.
    ------------------------------------------------------------------------------------------------
    static get_length (
        pos        : in out lexpos);             -- pozice
    -- Podle zapamatované pozice dopočítá délku lexikálního elementu.
    ------------------------------------------------------------------------------------------------
    static is_include return t_logical;
    -- T-soubor je includovaný
    ------------------------------------------------------------------------------------------------
    static is_effective return t_logical;
    -- T-poslední zpracovávaný řádek byl efektivní
    ------------------------------------------------------------------------------------------------
    static set_effective;
    -- nastavi ze poslední zpracovávaný řádek byl efektivní
    ------------------------------------------------------------------------------------------------
    static check_meta_statements;
    -- Zkontroluje, zda jsou uzavřeny všechny blokové metapříkazy.
    ------------------------------------------------------------------------------------------------

  supervised

    var
      next         : p_source_file;              -- další soubor na zásobníku

    end c_source_file;

type
  -- způsob otevření souboru
  t_open_file_type = enum
    oft_separate;  -- otevření souboru pomocí příkazu separate
    oft_include;   -- otevření souboru pomocí příkazu include
    oft_open;      -- otevření souboru jiným způsobem
    end enum;


----------------------------------------------------------------------------------------------------
procedure text_open (
    name           : in t_text_name;             -- jméno otvíraného souboru
    include        : in t_logical;               -- T-soubor je includovaný
    open_type      : in t_open_file_type:=oft_open); -- způsob otevření souboru
-- Otevře nový soubor zadaného jména a umístí ho na vrchol zásobníku otevřených souborů.
----------------------------------------------------------------------------------------------------
procedure text_close;
-- Zavře soubor na vrcholu zásobníku otevřených souborů a přejde k nadřazenému.
-- Před zavřením zkontroluje ukončení všech blokových metapříkazů v aktuálním souboru.
----------------------------------------------------------------------------------------------------

--%%TODO supervised

var
  lex_input        : p_source_file;

end cc_text;
