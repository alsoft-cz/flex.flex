----------------------------------------------------------------------------------------------------
module public cc_desc =
-- Překladač.
-- Popisy cílových platforem.
----------------------------------------------------------------------------------------------------
-- Ondra  : 23.02.2000 : Vytvořil.
-- TomasH : 09.07.2003 : Pridal kostru na podporu jinych platforem
----------------------------------------------------------------------------------------------------

with 
  standard.characters,
  standard.streams;

----- Cílové platformy -----------------------------------------------------------------------------
type
  -- operační systémy
  tosfamily        = enum
      tos_win32;               -- Windows NT/95
      tos_unix;                -- Linux a jiné Unixové systémy
      tos_cli;                 -- Common Language Infrastructure
      end enum;

  -- typy OS v ramci family
  -- jsou zde vsechny pohromade, ktery typ je platny s ktero family je urceno dale
  tostype          = enum 
      tost_basic;              -- blize nespecifikovany
      -- typy implementace Win32
      tost_win32_NT;           -- typy win32
      tost_win32_2000;
      tost_win32_95;
      tost_win32_98;
      -- typy implementace Unixu
      tost_unix_Linux;         -- Linux
      tost_unix_OpenBSD;       -- OpenBSD
      tost_unix_FreeBSD;       -- FreeBSD
      tost_unix_NetBSD;        -- NetBSD
      -- typy implementace CLI
      tost_cli_generic;        -- generická implementace CLI
      tost_cli_net;            -- Microsoft 
      tost_cli_mono;           -- Mono
      tost_cli_sscli;          -- Shared Source CLI
      end enum;
  tostype_set      = set of tostype;

  -- subsystemy
  tossubsystem     = enum
      toss_native;             -- native subsystem (default)
      toss_console;            -- command line interface
      toss_gui;                -- graphic user interface
      end enum;
  tossubsystem_set = set of tossubsystem;

  -- procesory
  tmachinearch     = enum
      tma_IA32;                -- Intel IA-32
      tma_IA64;                -- Intel IA-64
      tma_CLI;                 -- Common Language Infrastructure
      end enum;
  tmachinearch_set = set of tmachinearch;

  -- popis podporovanych OS a jejich typu, sybsystemu a architektur
  tfamily_desc     = record
      supported            : t_logical;            -- jestli je vubec podporovany, aby se nemusely vsechny enumy zakomentovavat
      os_type_set          : tostype_set;        -- ktere jsou pripustne typy OS v ramci family    
      os_subsystem_set     : tossubsystem_set;   -- ktere jsou pripustne subsystemy v ramci OS
      cpu_architecture_set : tmachinearch_set;   -- ktere jsou pripustne procesoru v dane architekture
      end record;
  tos_family_features = array tosfamily of tfamily_desc;  -- co ktery 

const
  -- verze jazyka
  language_version     = 4000;

var
  os_family_features : const tos_family_features := [
      for tos_win32 use [                       -- podporovany system je win32
          for supported            use true,
          for os_type_set          use [tost_basic, tost_win32_NT, tost_win32_2000, tost_win32_95, tost_win32_98],
          for os_subsystem_set     use [toss_console{, toss_gui}],
          for cpu_architecture_set use [tma_IA32]
          ],
      for tos_cli use [
          for supported            use true,
          for os_type_set          use [tost_cli_generic,tost_cli_net,tost_cli_mono,tost_cli_sscli],
          for os_subsystem_set     use [toss_console{, toss_gui}],
          for cpu_architecture_set use [tma_cli]
          ],
{      for tos_unix use [                       -- podporovany system je unix/linux
          for supported            use true,
          for os_type_set          use [tost_unix_linux, tost_unix_OpenBSD, tost_unix_FreeBSD, tost_unix_NetBSD],
          for os_subsystem_set     use [toss_console,toss_gui],
          for cpu_architecture_set use [tma_IA32, tma_IA64]
          ],}
      for others use [
          for supported            use false,      -- pro ostatni nemame podporu        
          for os_type_set          use [],   
          for os_subsystem_set     use [],
          for cpu_architecture_set use []
          ]
      ];

var
  -- Nasledujici stringy musi byt disjunktni, protoze pri zjistovani zda nalezeny file
  -- odpovida pozadovane variante nelze rozlisit ktera cast jmena odpovida ktere variante
  -- tyka se os_family, machine_architecture, os_type, os_subsystem

{%OFF}
  -- typy operačních systémů
  os_family        : const array tosfamily of t_char32str := [
      for tos_win32      use 'WIN32',
      for tos_unix       use 'UNIX',
      for tos_cli        use 'CLI'];

  -- typy procesorů
  machine_architecture : const array tmachinearch of t_char32str := [
      for tma_IA32       use 'IA-32',
      for tma_IA64       use 'IA-64',
      for tma_CLI        use 'CLI'];

  -- typy OS v ramci os_family
  os_type          : const array tostype of t_char32str := [
      for tost_basic        use 'BASIC',
      for tost_win32_NT     use 'NT',
      for tost_win32_2000   use '2000',
      for tost_win32_95     use '95',
      for tost_win32_98     use '98',
      for tost_unix_Linux   use 'LINUX',
      for tost_unix_OpenBSD use 'OPENBSD',
      for tost_unix_FreeBSD use 'FREEBSD',
      for tost_unix_NetBSD  use 'NETBSD',
      for tost_cli_generic  use 'ANYCLI',
      for tost_cli_net      use 'NET',
      for tost_cli_mono     use 'MONO',
      for tost_cli_sscli    use 'SSCLI'];
 
  -- subsystemy
  os_subsystem     : const array tossubsystem of t_char32str := [ 
      for toss_native    use 'NATIVE',
      for toss_console   use 'CONSOLE',
      for toss_gui       use 'GUI'];
{%ON}

type
  -- popis překladače
  t_env_compiler   = record
      c_name       : t_char32str;                -- jméno překladače
      c_type       : t_char32str;                -- typ překladače
      c_subtype    : t_char32str;                -- subtyp překladače
      c_ver        : t_char32str;                -- verze překladače
      end record;

  -- popis systému
  t_env_system     = record
      os_name              : t_char32str;        -- viz CC_ENV
      os_family            : tosfamily;          -- viz CC_ENV
      os_type              : tostype;            -- viz CC_ENV
      os_version           : t_char32str;        -- viz CC_ENV
      os_subsystem_type    : tossubsystem;       -- viz CC_ENV
      os_subsystem_version : t_char32str;        -- viz CC_ENV
      machine_architecture : tmachinearch;       -- viz CC_ENV
      machine_version      : t_char32str;        -- viz CC_ENV
      machine_bits         : t_unsigned;         -- viz CC_ENV
      machine_direct_byteorder : t_logical;      -- viz CC_ENV
      end record;

{%OFF}
var
  -- popis překladače
  env_compiler_default : const t_env_compiler := [
      for c_name    use 'A && L soft Flex',
      for c_type    use 'ALSOFT_FLEX',
      for c_subtype use '',
      for c_ver     use ''];

  -- implicitni definice platforem
  env_system_list  : const array tosfamily of t_env_system := [
      -- základ popisu Win32 platformy
      for tos_win32 use [
          for os_name              use 'Microsoft Windows',
          for os_family            use tos_win32,
          for os_type              use tost_basic,
          for os_version           use '4.0',
          for os_subsystem_type    use toss_console,
          for os_subsystem_version use '4.0',
          for machine_architecture use tma_ia32,
          for machine_version      use '5',
          for machine_bits         use 32,
          for machine_direct_byteorder use true],

      -- základ popisu Linux platformy
      for tos_unix  use [
          for os_name              use 'Linux',
          for os_family            use tos_unix,
          for os_type              use tost_unix_linux,
          for os_version           use '2.0',
          for os_subsystem_type    use toss_console,
          for os_subsystem_version use '2.0',
          for machine_architecture use tma_ia32,
          for machine_version      use '5',
          for machine_bits         use 32,
          for machine_direct_byteorder use true],

      -- základ popisu CLI platformy
      for tos_win32 use [
          for os_name              use 'Common Language Infrastructure',
          for os_family            use tos_cli,
          for os_type              use tost_cli_generic,
          for os_version           use '1.0',
          for os_subsystem_type    use toss_console,
          for os_subsystem_version use '1.0',
          for machine_architecture use tma_cli,
          for machine_version      use '1.0',
          for machine_bits         use 64,
          for machine_direct_byteorder use true],

     -- ostatni nepodporovane platformy 
     for others use [                                  -- tady by to chtelo neco lepsiho, ale je to jedno, 
          for os_name              use 'Unsupported',  -- pokud je nastaveny flag na unsupported v os_family_features
          for os_family            use tos_unix,
          for os_type              use tost_unix_linux,
          for os_version           use '1.0',
          for os_subsystem_type    use toss_console,
          for os_subsystem_version use '1.0',
          for machine_architecture use tma_ia32,
          for machine_version      use '1',
          for machine_bits         use 32,
          for machine_direct_byteorder use true]
      ];


  -- host = na ktere platforme prekladame
  snv_system_host  : const t_env_system := [
      for os_name              use 'Microsoft Windows',  -- %%TODO(PORTABILITY) Zobecnit pomocí #environment !
      for os_family            use tos_win32,
      for os_type              use tost_basic,
      for os_version           use '4.0',
      for os_subsystem_type    use toss_console,
      for os_subsystem_version use '4.0',
      for machine_architecture use tma_ia32,
      for machine_version      use '5',
      for machine_bits         use 32,
      for machine_direct_byteorder use true];
{%ON}

----------------------------------------------------------------------------------------------------
procedure set_os_family (
    os_name        : in t_char32ustr;            -- jmeno os family
    ostream        : in class c_text_writer);
-- nastavi OS family, raise config_error pokud je neznama nebo nepodporovana
----------------------------------------------------------------------------------------------------
procedure set_os_type (
    os_type_name   : in t_char32ustr;            -- jmeno os type
    ostream        : in class c_text_writer);
-- nastavi OS type, raise config_error pokud je nezname nebo neni platne pro danou family
----------------------------------------------------------------------------------------------------
procedure set_os_subsystem (
    os_subsystem_name : in t_char32ustr;         -- jmeno os type
    ostream        : in class c_text_writer);
-- Nastavi OS subsystem, raise config_error pokud je nezname nebo neni platne pro danou family
----------------------------------------------------------------------------------------------------
procedure set_cpu_architecture (
    cpu_architecture_name : in t_char32ustr;     -- jmeno cpu architektury
    ostream        : in class c_text_writer);
-- nastavi pozadovanou CPU architekturu, raise config_error pokud je neznama nebo neni platna pro danou family
----------------------------------------------------------------------------------------------------
procedure get_os_family_name return t_char32str;  
-- vrati jmeno prave zkonfigurovane OS family
----------------------------------------------------------------------------------------------------
procedure get_os_type_name return t_char32str;  
-- vrati jmeno prave zkonfigurovaneho OS typu
----------------------------------------------------------------------------------------------------
procedure get_os_subsystem_name return t_char32str;  
-- vrati jmeno prave zkonfigurovaneho OS subsystemu
----------------------------------------------------------------------------------------------------
procedure get_cpu_architecture_name return t_char32str;  
-- vrati jmeno prave zkonfigurovane CPU architektury
----------------------------------------------------------------------------------------------------

end cc_desc;
