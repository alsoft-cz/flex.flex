----------------------------------------------------------------------------------------------------
module private {cc_def.}cc_lexsym =
-- Překladač Flexu.
-- Definice lexiálních symbolů.
----------------------------------------------------------------------------------------------------
-- Ondra : 26.04.2000 : Vytvořil
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
procedure lexcharstr_to_string =
-- Převod textové reprezentace lexikálního elementu na řetězec.
----------------------------------------------------------------------------------------------------
begin
  for i in s:range loop
    result & t_char32(s[i]);
    end loop; 
  end lexcharstr_to_string;



----------------------------------------------------------------------------------------------------
procedure lexposblock_to_string =
-- Převod pozice bloku lexikálních elementů na řetězec.
----------------------------------------------------------------------------------------------------
with
  standard.strings,
  standard.conversions;

begin
  if align
    
    -- se zarovnanými čísly
    then
      -- první pozice --
      result:=str_adjust(unsigned_to_string(pos.b.line),5,[se_left]," ",st_no,[]) & ":" 
            & str_adjust(unsigned_to_string(pos.b.col) ,3,[se_left]," ",st_no,[]);

      -- druhá pozice (rozsah) --
      if pos.b<>pos.e then
        result & '..' & str_adjust(unsigned_to_string(pos.e.line),5,[se_left]," ",st_no,[]) & ":" 
                      & str_adjust(unsigned_to_string(pos.e.col) ,3,[se_left]," ",st_no,[]);
        end if;

    -- bez zarovnání
    else
      -- první pozice --
      result:=unsigned_to_string(pos.b.line) & ":" & unsigned_to_string(pos.b.col);

      -- druhá pozice (rozsah) --
      if pos.b<>pos.e then
        result & '..' & unsigned_to_string(pos.e.line) & ":" & unsigned_to_string(pos.e.col);
        end if;
      end if;
  end lexposblock_to_string;



----------------------------------------------------------------------------------------------------
entry =
----------------------------------------------------------------------------------------------------
with
  advanced,
  advanced.low_level,
  advanced.low_level.bit_operations;

begin
  -- vypočítat množinu klíčových slov
  for i in lexkeywords:range loop
    {%%TODO(UNION) lex_keywords+lexsymset:[lexkeywords[i].lex];}
    bit_set(lex_keywords,t_bit_index(lexkeywords[i].lex:ord));
    end loop;
  
  -- vypočítat index do tabulky klíčových slov pro urychlení vyhledávání
  declare var
    kw_index : lexkeywords:range:type;

  begin
    kw_index:=kw_index:first;

    -- zpracovat každé písmeno, kterým může začínat klíčové slovo
    for c in 65..90{'A'..'Z'}{%%TODO(CHAR_RANGE) lexkeywords_index:range} loop
      -- našli jsme blok klíčových slov začínajících na toto písmeno ?
      if kw_index<lexkeywords:last and then lexkeywords[kw_index].txt[1]={%%}tidentchar(c) then
        -- poznamenat si index prvního klíčového slova
        lexkeywords_index[c].first:=kw_index;
{
        -- inicializovat minimální a maximální délku
        lexkeywords_index[c].min_length:=lexkeywords[kw_index].txt:length;
        lexkeywords_index[c].max_length:=lexkeywords[kw_index].txt:length;
}
        -- dohledat poslední takové klíčové slovo
        while kw_index<lexkeywords:last and then lexkeywords[kw_index+1].txt[1]={%%}tidentchar(c) loop
          -- přejít na další klíčové slovo
          succ kw_index;
{
          -- aktualizovat informaci o minimální a maximální délce
          if lexkeywords[kw_index].txt:length<lexkeywords_index[c].min_length then
            lexkeywords_index[c].min_length:=lexkeywords[kw_index].txt:length;
          elsif lexkeywords[kw_index].txt:length>lexkeywords_index[c].max_length then
            lexkeywords_index[c].max_length:=lexkeywords[kw_index].txt:length;
            end if;
}
          end loop;

        -- poznamenat si index posledního klíčového slova
        lexkeywords_index[c].last:=kw_index;

        -- a na další znak pro příště
        succ kw_index;
        end if;
      end loop;
      
    end declare;
  end entry;

end cc_lexsym;
