----------------------------------------------------------------------------------------------------
module private cx_phase =
-- Překladač Flexu.
-- Provázání jednotlivých fází překladu.
----------------------------------------------------------------------------------------------------
-- Ondra : 29.08.2001 : Vytvořil
----------------------------------------------------------------------------------------------------

with
  cx_form,cx_type,cx_opt,cx_final;

----------------------------------------------------------------------------------------------------
procedure dophase (
    curr           : in tcontext;                -- překládaný prvek
    expr           : in out pexpnode;            -- výraz
    ptyp           : in typeview;                -- požadovaný typ výrazu (EP_TYPE
    usage          : in expusage;                -- použití výrazu (pro EP_FINAL)
    info           : in expinfo) =               -- informace o průběhu analýzy
-- Provedené jedné fáze překladu.
----------------------------------------------------------------------------------------------------
begin
  case info.phase
    when ep_form  do a_form (curr,expr,info);
    when ep_type  do a_type (curr,expr,ptyp,info);
    when ep_opt   do a_opt  (curr,expr,info);
    when ep_final do a_final(curr,expr,ptyp,usage,info);
    when others   do verify({VERIFY=}000257,true);
    end case;
  end dophase;



----------------------------------------------------------------------------------------------------
procedure x_phase_next =
-- Nad zadaným výrazem provede zbývající fáze překladu počínaje INFO.PHASE.
----------------------------------------------------------------------------------------------------
var
  info2            : expinfo;                    -- informace pro novější fáze překladu

begin
  -- provést úvodní fázi
  dophase(curr,expr,ptyp,usage,info);
  if expr^.zprac<info.phase then
    return;
    end if;

  -- připravit informace pro další fáze
  info2:=info;

  while info2.phase<lastphase{info2.phase:last} loop
    -- další fáze
    succ info2.phase;

    -- provést
    dophase(curr,expr,ptyp,usage,info2);

    -- povedlo se ?
    if expr^.zprac<info2.phase then
      return;
      end if;
    end loop;
  end x_phase_next;



----------------------------------------------------------------------------------------------------
procedure x_phase_prev =
-- Nad zadaným výrazem provede všechny fáze překladu až do INFO.PHASE.
----------------------------------------------------------------------------------------------------
var
  info2            : expinfo;                    -- informace pro starší fáze překladu

begin
  -- připravit informace pro předchozí fáze
  info2:=info;
  info2.phase:=succ ep_syntax;

  while info2.phase<info.phase loop
    -- provést
    dophase(curr,expr,ptyp,usage,info2);

    -- povedlo se ?
    if expr^.zprac<info2.phase then
      return;
      end if;

    -- další fáze
    succ info2.phase;
    end loop;

  -- provést koncovou fázi
  dophase(curr,expr,ptyp,usage,info);
  if expr^.zprac<info.phase then
    return;
    end if;
  end x_phase_prev;



end cx_phase;
