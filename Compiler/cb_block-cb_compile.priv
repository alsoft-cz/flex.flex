----------------------------------------------------------------------------------------------------
module private cb_compile =
-- Překladač Flexu.
-- Interface na překladač bloku příkazů a návazné operace.
----------------------------------------------------------------------------------------------------
-- Ondra : 07.11.2001 : Vytvořil
----------------------------------------------------------------------------------------------------

with
  cc_base,cc_base.cc_debug,
  cb_parse,cb_form,cb_opt,
  cc_options;

----------------------------------------------------------------------------------------------------
procedure b_block =
-- Překlad bloku příkazů.
----------------------------------------------------------------------------------------------------
var
  info             : blinfo;                     -- informace o průběhu analýzy

begin
#if #declared dump; #and then; dump then;{%OFF}
  if o_is_option_by_context(opt_dump,curr) then debug_dump('---- Prvni pruchod ------------------------------------------------------------'); end if;
#end if;{%ON}

  -- inicializovat informace o průběhu analýzy
  info.init({false,}false{final});

  -- Fáze 1: rozklad výrazu
#if #declared dump; #and then; dump then;{%OFF}
  if o_is_option_by_context(opt_dump,curr) then debug_dump('---- Faze 1: Rozklad prikazu --------------------------------------------------'); end if;
#end if;{%ON}
  info.phase:=bp_syntax;
  b_body(curr,pblblock(bl),info);
#if #declared dump; #and then; dump then;
  if o_is_option_by_context(opt_dump,curr) then dumptree(bl); end if;
#end if;
  end b_block;



----------------------------------------------------------------------------------------------------
procedure b_evaluate =
-- Vyhodnocení bloku.
-- Očekává již rozložený blok. Jednotlivé fáze překladu se provádějí jako
-- druhý průchod.
-- Je-li FINAL=True, budou všechny nejasnosti ohlášeny jako chyby.
----------------------------------------------------------------------------------------------------
var
  info             : blinfo;                     -- informace o průběhu analýzy

begin
#if #declared dump; #and then; dump then;{%OFF}
  if o_is_option_by_context(opt_dump,curr) then debug_dump('---- Druhy pruchod ------------------------------------------------------------'); end if;
#end if;{%ON}

  -- inicializovat informace o průběhu analýzy
  info.init({true,}true{final});

  -- Fáze 2: formální kontrola
#if #declared dump; #and then; dump then;{%OFF}
  if o_is_option_by_context(opt_dump,curr) then debug_dump('---- Faze 2: Formalni kontrola ------------------------------------------------'); end if;
#end if;{%ON}
  info.phase:=bp_form;
  b_form(curr,bl,info);
#if #declared dump; #and then; dump then;
  if o_is_option_by_context(opt_dump,curr) then dumptree(bl); end if;
#end if;

  -- Fáze 2: optimalizace
#if #declared dump; #and then; dump then;{%OFF}
  if o_is_option_by_context(opt_dump,curr) then debug_dump('---- Faze 3: Optimalizace -----------------------------------------------------'); end if;
#end if;{%ON}
  info.phase:=bp_opt;
  b_opt(curr,bl,info);
#if #declared dump; #and then; dump then;
  if o_is_option_by_context(opt_dump,curr) then dumptree(bl); end if;
#end if;

  -- předat vyhodnocení
  eval:=info.eval;
  end b_evaluate;



end cb_compile;
