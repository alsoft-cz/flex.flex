----------------------------------------------------------------------------------------------------
module public ci_instr =
-- P©eklada‡ Flexu.
-- Popis instruk‡n¡ sady IA-32.
----------------------------------------------------------------------------------------------------
-- Ondra : 02.04.2002 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  standard;

type
  --%%TODO(CODEGEN) tohle sem nepat©¡, p©ev‚st do platformovˆ nez visl‚ vrstvy

  -- jeden byte k¢du
  t_code_byte      = {%%TODO protected}mod unsigned 8;

  -- fragment k¢du
  -- %%TODO(SLICE) To ALIASED je z plata, viz v¨emo‘n  "p_unsigned32(^inst.c[x]:unchecked)^" zral 
  -- na p©edˆl n¡ na ©ez
  t_code_array     = string of aliased t_code_byte;
  p_code_array     = ^t_code_array;


----- %%TECH Postup pro definici nov‚ instrukce ----------------------------------------------------
-- 1. Do [iinstr] dodefinovat v˜‡tov˜ element reprezentuj¡c¡ instrukci ve tvaru ii_<jm‚no>. 
--    Instrukce jsou v tomto v˜‡tov‚m typu set©¡dˆny po skupin ch (v¨eobecn‚, FPU, MMX, SSE, ...)
--    a v r mci nich abecednˆ a/nebo po podskupin ch (nap©¡klad FADD, FADDP, FIADD pohromadˆ).
--    K instrukci se zapisuje jej¡ popisn˜ n zev p©esnˆ podle manu lu Intelu.
--
-- 2. Do pole [iinstrtxt] doplnit textov˜ identifik tor instrukce. Pozor, je pot©eba zvednout horn¡
--    mez pole.
--
-- 3. Do pole [iopcodemap] doplnit v¨echna k¢dov n¡ instrukci. Pole je organizov no podobnˆ jako
--    enum [iinstr] a t‚‘ je pot©eba zvednout horn¡ mez. V˜znam slo‘ek jedn‚ definice je 
--    n sleduj¡c¡:
--      ii       -- instrukce
--      oc       -- opera‡n¡ k¢d - ©etˆzec 1 a‘ 3 byty
--      ex       -- roz¨¡©en¡ opera‡n¡ho k¢du - v manu lech Intelu ozna‡eno jako /r (->[x_r]), 
--                  +i (->[x_i]), /0../7 (->[x_0]..[x_7]), pokud nen¡ uvedeno nic, vypln¡ se [x_n]
--      op1..op3 -- m¢dy jednotliv˜ch operand– ve tvaru op_<jm‚no>, kde <jm‚no> zpravidla odpov¡d 
--                  pojmenov n¡ Intelu
--      p        -- indikace nutn˜ch prefix–: $00 = nic, $10 = 16 -> 32 bit, $01 = 32 -> 16 bit 
--
-- 4. Analogick˜m zp–sobem do pole [iinstrinfo] doplnit dal¨¡ informace o instrukci:
--      kind     -- druh instrukce (viz hodnoty [iik_*])
--      cond     -- k¢d podm¡nky proveden¡ instrukce (zpravidla [ic_ucond] pro nepodm¡nˆn‚)
--
-- Pozn mka: Pro usnadnˆn¡ vyhled n¡ m¡st, na kter  se zpravidla p©id vaj¡ nov‚ instrukce, jsou
-- v tomto modulu um¡stˆny zna‡ky %%ADD(INSTR).
----------------------------------------------------------------------------------------------------

type
  ----- Registry -----------------------------------------------------------------------------------
  -- v¨echny p©¡mo p©¡stupn‚ registry procesoru
  ireg             = enum     
      ir_none;                                   -- nic
      ir_al;                                     -- v¨eobecn˜ registr AL
      ir_cl;                                     -- v¨eobecn˜ registr CL
      ir_dl;                                     -- v¨eobecn˜ registr DL
      ir_bl;                                     -- v¨eobecn˜ registr BL
      ir_ah;                                     -- v¨eobecn˜ registr AH
      ir_ch;                                     -- v¨eobecn˜ registr CH
      ir_dh;                                     -- v¨eobecn˜ registr DH
      ir_bh;                                     -- v¨eobecn˜ registr BH
      ir_ax;                                     -- v¨eobecn˜ registr AX
      ir_cx;                                     -- v¨eobecn˜ registr CX
      ir_dx;                                     -- v¨eobecn˜ registr DX
      ir_bx;                                     -- v¨eobecn˜ registr BX
      ir_sp;                                     -- v¨eobecn˜ registr SP
      ir_bp;                                     -- v¨eobecn˜ registr BP
      ir_si;                                     -- v¨eobecn˜ registr SI
      ir_di;                                     -- v¨eobecn˜ registr DI
      ir_eax;                                    -- v¨eobecn˜ registr EAX
      ir_ecx;                                    -- v¨eobecn˜ registr ECX
      ir_edx;                                    -- v¨eobecn˜ registr EDX
      ir_ebx;                                    -- v¨eobecn˜ registr EBX
      ir_esp;                                    -- v¨eobecn˜ registr ESP
      ir_ebp;                                    -- v¨eobecn˜ registr EBP
      ir_esi;                                    -- v¨eobecn˜ registr ESI
      ir_edi;                                    -- v¨eobecn˜ registr EDI
      ir_cs;                                     -- segmentov˜ registr CS
      ir_ss;                                     -- segmentov˜ registr SS
      ir_ds;                                     -- segmentov˜ registr DS
      ir_es;                                     -- segmentov˜ registr ES
      ir_fs;                                     -- segmentov˜ registr FS
      ir_gs;                                     -- segmentov˜ registr GS
      ir_cr0;                                    -- ©¡d¡c¡ registr CR0
      ir_cr2;                                    -- ©¡d¡c¡ registr CR2
      ir_cr3;                                    -- ©¡d¡c¡ registr CR3
      ir_cr4;                                    -- ©¡d¡c¡ registr CR4
      ir_dr0;                                    -- lad¡c¡ registr DR0
      ir_dr1;                                    -- lad¡c¡ registr DR1
      ir_dr2;                                    -- lad¡c¡ registr DR2
      ir_dr3;                                    -- lad¡c¡ registr DR3
      ir_dr6;                                    -- lad¡c¡ registr DR6
      ir_dr7;                                    -- lad¡c¡ registr DR7
      ir_st0;                                    -- floating point registr ST(0)
      ir_st1;                                    -- floating point registr ST(1)
      ir_st2;                                    -- floating point registr ST(2)
      ir_st3;                                    -- floating point registr ST(3)
      ir_st4;                                    -- floating point registr ST(4)
      ir_st5;                                    -- floating point registr ST(5)
      ir_st6;                                    -- floating point registr ST(6)
      ir_st7;                                    -- floating point registr ST(7)
      ir_mm0;                                    -- MMX registr MM0
      ir_mm1;                                    -- MMX registr MM1
      ir_mm2;                                    -- MMX registr MM2
      ir_mm3;                                    -- MMX registr MM3
      ir_mm4;                                    -- MMX registr MM4
      ir_mm5;                                    -- MMX registr MM5
      ir_mm6;                                    -- MMX registr MM6
      ir_mm7;                                    -- MMX registr MM7
      ir_xmm0;                                   -- XMM registr XMM0
      ir_xmm1;                                   -- XMM registr XMM1
      ir_xmm2;                                   -- XMM registr XMM2
      ir_xmm3;                                   -- XMM registr XMM3
      ir_xmm4;                                   -- XMM registr XMM4
      ir_xmm5;                                   -- XMM registr XMM5
      ir_xmm6;                                   -- XMM registr XMM6
      ir_xmm7;                                   -- XMM registr XMM7
      end enum;
  iregset          = set of ireg;

const
  -- 8, 16 a 32 bitov‚ v¨eobecn‚ registry
  ir_r8l           = iregset:[ir_al,ir_cl,ir_dl,ir_bl];
  ir_r8h           = iregset:[ir_ah,ir_ch,ir_dh,ir_bh];
  ir_r8            = ir_r8l+ir_r8h;
  ir_r16           = iregset:[ir_ax,ir_cx,ir_dx,ir_bx,ir_sp,ir_bp,ir_si,ir_di];
  ir_r32           = iregset:[ir_eax,ir_ecx,ir_edx,ir_ebx,ir_esp,ir_ebp,ir_esi,ir_edi];
  ir_reg           = ir_r8+ir_r16+ir_r32;
  -- segmentov‚ registry
  ir_seg           = iregset:[ir_es,ir_cs,ir_ss,ir_ds,ir_fs,ir_gs];
  -- ©¡d¡c¡ registry
  ir_cri           = iregset:[ir_cr0,ir_cr2,ir_cr3,ir_cr4];
  -- lad¡c¡ registry
  ir_dri           = iregset:[ir_dr0,ir_dr1,ir_dr2,ir_dr3,ir_dr6,ir_dr7];
  -- stack pointery
  ir_stack         = iregset:[ir_bp,ir_sp,ir_ebp,ir_esp];
  -- indexov‚ registry
  ir_index         = ir_r32;
  -- floating point registry
  ir_sti           = iregset:[ir_st0..ir_st7];
  -- MMX registry
  ir_mmxi          = iregset:[ir_mm0..ir_mm7];
  -- XMM registry
  ir_xmmi          = iregset:[ir_xmm0..ir_xmm7];

type
  -- skupinov  jm‚na univerz ln¡ch registr–
  iunireg          = enum
      in_eax;                                    -- al, ah, ax, eax
      in_ebx;                                    -- bl, bh, bx, ebx
      in_ecx;                                    -- cl, ch, cx, ecx
      in_edx;                                    -- dl, dh, dx, edx
      in_esi;                                    -- si, esi
      in_edi;                                    -- di, edi
      in_none;                                   -- ostatn¡
      end enum;
  iuniregset       = set of iunireg;

const
  -- prvn¡ a posledn¡ registr
  in_first         = iunireg:first;
  in_last          = pred iunireg:last;
  -- prvn¡ a posledn¡ celo‡¡seln˜ aritmetick˜ registr
  in_first_int     = in_eax;
  in_last_int      = in_edi;
  -- po‡et celo‡¡seln˜ch registr–
  in_count         = in_last_int:ord-in_first_int:ord+1;

var
  -- konverzn¡ tabulka fyzick˜ch registr– na univerz ln¡ varianty
  iregtouni        : const array ireg of iunireg := [
      for ir_none  use in_none,
      for ir_al    use in_eax,
      for ir_cl    use in_ecx,
      for ir_dl    use in_edx,
      for ir_bl    use in_ebx,
      for ir_ah    use in_eax,
      for ir_ch    use in_ecx,
      for ir_dh    use in_edx,
      for ir_bh    use in_ebx,
      for ir_ax    use in_eax,
      for ir_cx    use in_ecx,
      for ir_dx    use in_edx,
      for ir_bx    use in_ebx,
      for ir_sp    use in_none,
      for ir_bp    use in_none,
      for ir_si    use in_esi,
      for ir_di    use in_edi,
      for ir_eax   use in_eax,
      for ir_ecx   use in_ecx,
      for ir_edx   use in_edx,
      for ir_ebx   use in_ebx,
      for ir_esp   use in_none,
      for ir_ebp   use in_none,
      for ir_esi   use in_esi,
      for ir_edi   use in_edi,
      for others   use in_none{
      for ir_es    use in_none,
      for ir_cs    use in_none,
      for ir_ss    use in_none,
      for ir_ds    use in_none,
      for ir_fs    use in_none,
      for ir_gs    use in_none,
      for ir_cr0   use in_none,
      for ir_cr2   use in_none,
      for ir_cr3   use in_none,
      for ir_cr4   use in_none,
      for ir_dr0   use in_none,
      for ir_dr1   use in_none,
      for ir_dr2   use in_none,
      for ir_dr3   use in_none,
      for ir_dr6   use in_none,
      for ir_dr7   use in_none}];

  -- konverzn¡ tabulka univerz ln¡ch registr– na fyzick‚
  iunitoreg        : const array iunireg,1..4 of ireg := [
      for in_eax   use [for 1 use ir_al, for 2 use ir_ax, for 4 use ir_eax],
      for in_ebx   use [for 1 use ir_bl, for 2 use ir_bx, for 4 use ir_ebx],
      for in_ecx   use [for 1 use ir_cl, for 2 use ir_cx, for 4 use ir_ecx],
      for in_edx   use [for 1 use ir_dl, for 2 use ir_dx, for 4 use ir_edx],
      for in_esi   use [                 for 2 use ir_si, for 4 use ir_esi],
      for in_edi   use [                 for 2 use ir_di, for 4 use ir_edi],
      for in_none  use [                                                  ]];



type
  ----- Podm¡nky -----------------------------------------------------------------------------------
  icond            = enum
      ic_ucond;                                  -- nepodm¡nˆn  instrukce
      ic_o;                                      -- Overflow
      ic_no;                                     -- No overflow
      ic_b;                                      -- Below
      ic_c;                                      -- Carry
      ic_nae;                                    -- Neither above nor equal
      ic_nb;                                     -- Not below
      ic_nc;                                     -- Not Carry
      ic_ae;                                     -- Above or equal
      ic_e;                                      -- Equal
      ic_z;                                      -- Zero
      ic_ne;                                     -- Not equal
      ic_nz;                                     -- Not zero
      ic_be;                                     -- Below or equal
      ic_na;                                     -- Not above
      ic_nbe;                                    -- Neither below nor equal
      ic_a;                                      -- Above
      ic_s;                                      -- Sign
      ic_ns;                                     -- No sign
      ic_p;                                      -- Parity
      ic_pe;                                     -- Parity even
      ic_np;                                     -- No parity
      ic_po;                                     -- Parity odd
      ic_l;                                      -- Less
      ic_nge;                                    -- Neither greater nor equal
      ic_nl;                                     -- Not less
      ic_ge;                                     -- Greater or equal
      ic_le;                                     -- Less or equal
      ic_ng;                                     -- Not greater
      ic_nle;                                    -- Neither less nor equal
      ic_g;                                      -- Greater
      ic_cxz;                                    -- CX is zero
      ic_ecxz;                                   -- ECX is zero
      end enum;
  icondset         = set of icond;

var
  -- negace podm¡nky
  icondneg         : const array icond of icond := [
      for ic_ucond use ic_ucond,
      for ic_o     use ic_no,
      for ic_no    use ic_o,
      for ic_b     use ic_nb,
      for ic_c     use ic_nc,
      for ic_nae   use ic_ae,
      for ic_nb    use ic_b,
      for ic_nc    use ic_c,
      for ic_ae    use ic_nae,
      for ic_e     use ic_ne,
      for ic_z     use ic_nz,
      for ic_ne    use ic_e,
      for ic_nz    use ic_z,
      for ic_be    use ic_nbe,
      for ic_na    use ic_a,
      for ic_nbe   use ic_be,
      for ic_a     use ic_na,
      for ic_s     use ic_ns,
      for ic_ns    use ic_s,
      for ic_p     use ic_np,
      for ic_pe    use ic_po,
      for ic_np    use ic_p,
      for ic_po    use ic_pe,
      for ic_l     use ic_nl,
      for ic_nge   use ic_ge,
      for ic_nl    use ic_l,
      for ic_ge    use ic_nge,
      for ic_le    use ic_nle,
      for ic_ng    use ic_g,
      for ic_nle   use ic_le,
      for ic_g     use ic_ng,
      for ic_cxz   use ic_ucond{%%X},
      for ic_ecxz  use ic_ucond{%%X}];



type
  ----- Prefixy ------------------------------------------------------------------------------------
  iprefix          = enum
      ip_none;                                   -- ‘ dn˜ prefix
      ip_data;                                   -- Operand-size override
      ip_addr;                                   -- Address-size override
      ip_rep;                                    -- Repeat Following String Operation
      ip_repe;                                   -- Repeat Following String Operation
      ip_repz;                                   -- Repeat Following String Operation
      ip_repne;                                  -- Repeat Following String Operation
      ip_repnz;                                  -- Repeat Following String Operation
      ip_lock;                                   -- Lock
      ip_cs;                                     -- CS segment override
      ip_ss;                                     -- SS segment override
      ip_ds;                                     -- DS segment override
      ip_es;                                     -- ES segment override
      ip_fs;                                     -- FS segment override
      ip_gs;                                     -- GS segment override
      ip_bnt;                                    -- Branch not taken
      ip_btk;                                    -- Branch Taken
      end enum;
  iprefixset       = set of iprefix;

const
  -- mno‘ina prefixu indikuj¡c¡ch segmentov‚ registry
  ips_segment      = iprefixset:[ip_cs,ip_ss,ip_ds,ip_es,ip_fs,ip_gs];

var
  -- konverzn¡ tabulka segmentov˜ch registr– na instruk‡n¡ prefixy
  isegregtoprefix  : array ir_cs..ir_gs of iprefix := [
      for ir_cs use ip_cs,
      for ir_ss use ip_ss,
      for ir_ds use ip_ds,
      for ir_es use ip_es,
      for ir_fs use ip_fs,
      for ir_gs use ip_gs];

type
  ----- Instruk‡n¡ sada ----------------------------------------------------------------------------
  iinstr           = enum
      --- v¨eobecn‚ instrukce ---
      ii_aaa;                                    -- ASCII Adjust After Addition
      ii_aad;                                    -- ASCII Adjust AX Before Division
      ii_aam;                                    -- ASCII Adjust AX After Multiply
      ii_aas;                                    -- ASCII Adjust AL After Subtraction
      ii_adc;                                    -- Add with Carry
      ii_add;                                    -- Add
      ii_and;                                    -- Logical AND
      ii_arpl;                                   -- Adjust RPL Field of Selector
      ii_bound;                                  -- Check Array Index Against Bounds
      ii_bsf;                                    -- Bit Scan Forward
      ii_bsr;                                    -- Bit Scan Reverse
      ii_bswap;                                  -- Byte Swap
      ii_bt;                                     -- Bit Test
      ii_btc;                                    -- Bit Test and Complement
      ii_btr;                                    -- Bit Test and Reset
      ii_bts;                                    -- Bit Test and Set
      ii_call;                                   -- Call Procedure
      ii_cbw;                                    -- Convert Byte to Word
      ii_cdq;                                    -- Convert Doubleword to Quadword
      ii_clc;                                    -- Clear Carry Flag
      ii_cld;                                    -- Clear Direction Flag
      ii_cli;                                    -- Clear Interrupt Flag
      ii_clts;                                   -- Clear Task-Switched Flag in CR0
      ii_cmc;                                    -- Complement Carry Flag
      ii_cmova;                                  -- Move if above (CF=0 and ZF=0)
      ii_cmovae;                                 -- Move if above or equal (CF=0)
      ii_cmovb;                                  -- Move if below (CF=1)
      ii_cmovbe;                                 -- Move if below or equal (CF=1 or ZF=1)
      ii_cmovc;                                  -- Move if carry (CF=1)
      ii_cmove;                                  -- Move if equal (ZF=1)
      ii_cmovg;                                  -- Move if greater (ZF=0 and SF=OF)
      ii_cmovge;                                 -- Move if greater or equal (SF=OF)
      ii_cmovl;                                  -- Move if less (SF<>OF)
      ii_cmovle;                                 -- Move if less or equal (ZF=1 or SF<>OF)
      ii_cmovna;                                 -- Move if not above (CF=1 or ZF=1)
      ii_cmovnae;                                -- Move if not above or equal (CF=1)
      ii_cmovnb;                                 -- Move if not below (CF=0)
      ii_cmovnbe;                                -- Move if not below or equal (CF=0 and ZF=0)
      ii_cmovnc;                                 -- Move if not carry (CF=0)
      ii_cmovne;                                 -- Move if not equal (ZF=0)
      ii_cmovng;                                 -- Move if not greater (ZF=1 or SF<>OF)
      ii_cmovnge;                                -- Move if not greater or equal (SF<>OF)
      ii_cmovnl;                                 -- Move if not less (SF=OF)
      ii_cmovnle;                                -- Move if not less or equal (ZF=0 and SF=OF)
      ii_cmovno;                                 -- Move if not overflow (OF=0)
      ii_cmovnp;                                 -- Move if not parity (PF=0)
      ii_cmovns;                                 -- Move if not sign (SF=0)
      ii_cmovnz;                                 -- Move if not zero (ZF=0)
      ii_cmovo;                                  -- Move if overflow (OF=0)
      ii_cmovp;                                  -- Move if parity (PF=1)
      ii_cmovpe;                                 -- Move if parity even (PF=1)
      ii_cmovpo;                                 -- Move if parity odd (PF=0)
      ii_cmovs;                                  -- Move if sign (SF=1)
      ii_cmovz;                                  -- Move if zero (ZF=1)
      ii_cmp;                                    -- Compare Two Operands
      ii_cmpsb;                                  -- Compare String Operands
      ii_cmpsd;                                  -- Compare String Operands
      ii_cmpsw;                                  -- Compare String Operands
      ii_cmpxchg;                                -- Compare and Exchange
      ii_cmpxchg8b;                              -- Compare and Exchange 8 Bytes
      ii_cpuid;                                  -- CPU Identification
      ii_cwd;                                    -- Convert Word to Doubleword
      ii_cwde;                                   -- Convert Word to Doubleword
      ii_daa;                                    -- Decimal Adjust AL after Addition
      ii_das;                                    -- Decimal Adjust AL after Subtraction
      ii_dec;                                    -- Decrement by 1
      ii_div;                                    -- Unsigned Divide
      ii_enter;                                  -- Make Stack Frame for Procedure Parameters
      ii_hlt;                                    -- Halt
      ii_idiv;                                   -- Signed Divide
      ii_imul;                                   -- Signed Multiply
      ii_in;                                     -- Input from Port
      ii_inc;                                    -- Increment by 1
      ii_insb;                                   -- Input from Port to String
      ii_insd;                                   -- Input from Port to String
      ii_insw;                                   -- Input from Port to String
      ii_int;                                    -- Call to Interrupt Procedure
      ii_into;                                   -- Call to Interrupt Procedure on Overflow
      ii_invd;                                   -- Invalidate Cache
      ii_invlpg;                                 -- Invalidate TLB Entry
      ii_iret;                                   -- Interrupt Return
      ii_iretd;                                  -- Interrupt Return
      ii_ja;                                     -- Jump if Condition is Met
      ii_jae;                                    -- Jump if Condition is Met
      ii_jb;                                     -- Jump if Condition is Met
      ii_jbe;                                    -- Jump if Condition is Met
      ii_jc;                                     -- Jump if Condition is Met
      ii_jcxz;                                   -- Jump if CX Register is 0
      ii_je;                                     -- Jump if Condition is Met
      ii_jecxz;                                  -- Jump if ECX Register is 0
      ii_jg;                                     -- Jump if Condition is Met
      ii_jge;                                    -- Jump if Condition is Met
      ii_jl;                                     -- Jump if Condition is Met
      ii_jle;                                    -- Jump if Condition is Met
      ii_jmp;                                    -- Jump
      ii_jna;                                    -- Jump if Condition is Met
      ii_jnae;                                   -- Jump if Condition is Met
      ii_jnb;                                    -- Jump if Condition is Met
      ii_jnbe;                                   -- Jump if Condition is Met
      ii_jnc;                                    -- Jump if Condition is Met
      ii_jne;                                    -- Jump if Condition is Met
      ii_jng;                                    -- Jump if Condition is Met
      ii_jnge;                                   -- Jump if Condition is Met
      ii_jnl;                                    -- Jump if Condition is Met
      ii_jnle;                                   -- Jump if Condition is Met
      ii_jno;                                    -- Jump if Condition is Met
      ii_jnp;                                    -- Jump if Condition is Met
      ii_jns;                                    -- Jump if Condition is Met
      ii_jnz;                                    -- Jump if Condition is Met
      ii_jo;                                     -- Jump if Condition is Met
      ii_jp;                                     -- Jump if Condition is Met
      ii_jpe;                                    -- Jump if Condition is Met
      ii_jpo;                                    -- Jump if Condition is Met
      ii_js;                                     -- Jump if Condition is Met
      ii_jz;                                     -- Jump if Condition is Met
      ii_lahf;                                   -- Load Flags into AH Register
      ii_lar;                                    -- Load Acces Rights Byte
      ii_lds;                                    -- Load Full Pointer
      ii_lea;                                    -- Load Effective Address
      ii_leave;                                  -- High Level Procedure Exit
      ii_les;                                    -- Load Full Pointer
      ii_lfs;                                    -- Load Full Pointer
      ii_lgdt;                                   -- Load Global Descriptor Table Register
      ii_lgs;                                    -- Load Full Pointer
      ii_lidt;                                   -- Load Interrupt Descriptor Table Register
      ii_lldt;                                   -- Load Local Descriptor Table Register
      ii_lmsw;                                   -- Load Machine Status Word
      ii_lodsb;                                  -- Load String Operand
      ii_lodsd;                                  -- Load String Operand
      ii_lodsw;                                  -- Load String Operand
      ii_loop;                                   -- Loop Control with CX Counter
      ii_loope;                                  -- Loop Control with CX Counter
      ii_loopne;                                 -- Loop Control with CX Counter
      ii_loopnz;                                 -- Loop Control with CX Counter
      ii_loopz;                                  -- Loop Control with CX Counter
      ii_lsl;                                    -- Load Segment Limit
      ii_lss;                                    -- Load Full Pointer
      ii_ltr;                                    -- Load Task Register
      ii_mov;                                    -- Move Data; Move to/form Debug/Control Registers
      ii_movsb;                                  -- Move Data from String to String
      ii_movsd;                                  -- Move Data from String to String
      ii_movsw;                                  -- Move Data from String to String
      ii_movsx;                                  -- Move with Sign-Extend
      ii_movzx;                                  -- Move with Zero-Extend
      ii_mul;                                    -- Unsigned Multiplication of AL; AX or EAX
      ii_neg;                                    -- Two's Complement Negation
      ii_nop;                                    -- No Operation
      ii_not;                                    -- One's Complement Negation
      ii_or;                                     -- Logical Inclusive OR
      ii_out;                                    -- Output to Port
      ii_outsb;                                  -- Output String to Port
      ii_outsd;                                  -- Output String to Port
      ii_outsw;                                  -- Output String to Port
      ii_pause;                                  -- Spin Loop Hint
      ii_pop;                                    -- Pop a Word from the Stack
      ii_popa;                                   -- Pop all General Registers
      ii_popad;                                  -- Pop all General Registers
      ii_popf;                                   -- Pop Stack into FLAGS Register
      ii_popfd;                                  -- Pop Stack into EFLAGS Register
      ii_push;                                   -- Push Operand onto the Stack
      ii_pusha;                                  -- Push all General Registers
      ii_pushad;                                 -- Push all General Registers
      ii_pushf;                                  -- Push FLAGS Register onto the Stack
      ii_pushfd;                                 -- Push EFLAGS Register onto the Stack
      ii_rcl;                                    -- Rotate Through Carry Left
      ii_rcr;                                    -- Rotate Through Carry Right
      ii_rdmsr;                                  -- Read from Model Specific Register
      ii_rdtsc;                                  -- Read from Time Stamp Counter
      ii_ret;                                    -- Return from Procedure
      ii_retf;                                   -- Return from Procedure
      ii_rol;                                    -- Rotate Left
      ii_ror;                                    -- Rotate Right
      ii_rsm;                                    -- Resume from System Management Mode
      ii_sahf;                                   -- Store AH into Flags
      ii_sal;                                    -- Shift Arithmetic Left
      ii_sar;                                    -- Shift Arithmetic Right
      ii_sbb;                                    -- Integer Subtraction with Borrow
      ii_scasb;                                  -- Compare String Data
      ii_scasd;                                  -- Compare String Data
      ii_scasw;                                  -- Compare String Data
      ii_seta;                                   -- Byte Set on Condition
      ii_setae;                                  -- Byte Set on Condition
      ii_setb;                                   -- Byte Set on Condition
      ii_setbe;                                  -- Byte Set on Condition
      ii_setc;                                   -- Byte Set on Condition
      ii_sete;                                   -- Byte Set on Condition
      ii_setg;                                   -- Byte Set on Condition
      ii_setge;                                  -- Byte Set on Condition
      ii_setl;                                   -- Byte Set on Condition
      ii_setle;                                  -- Byte Set on Condition
      ii_setna;                                  -- Byte Set on Condition
      ii_setnae;                                 -- Byte Set on Condition
      ii_setnb;                                  -- Byte Set on Condition
      ii_setnbe;                                 -- Byte Set on Condition
      ii_setnc;                                  -- Byte Set on Condition
      ii_setne;                                  -- Byte Set on Condition
      ii_setng;                                  -- Byte Set on Condition
      ii_setnge;                                 -- Byte Set on Condition
      ii_setnl;                                  -- Byte Set on Condition
      ii_setnle;                                 -- Byte Set on Condition
      ii_setno;                                  -- Byte Set on Condition
      ii_setnp;                                  -- Byte Set on Condition
      ii_setns;                                  -- Byte Set on Condition
      ii_setnz;                                  -- Byte Set on Condition
      ii_seto;                                   -- Byte Set on Condition
      ii_setp;                                   -- Byte Set on Condition
      ii_setpe;                                  -- Byte Set on Condition
      ii_setpo;                                  -- Byte Set on Condition
      ii_sets;                                   -- Byte Set on Condition
      ii_setz;                                   -- Byte Set on Condition
      ii_sgdt;                                   -- Store Global Descriptor Table Register
      ii_shl;                                    -- Shift Logical Left
      ii_shld;                                   -- Double Precision Shift Left
      ii_shr;                                    -- Shift Logical Right
      ii_shrd;                                   -- Double Precision Shift Right
      ii_sidt;                                   -- Store Interrupt Descriptor Table Register
      ii_sldt;                                   -- Store Local Descriptor Table Register
      ii_smsw;                                   -- Store Machine Status Word
      ii_stc;                                    -- Set Carry Flag
      ii_std;                                    -- Set Direction Flag
      ii_sti;                                    -- Set Interrupt Flag
      ii_stosb;                                  -- Store String Data
      ii_stosd;                                  -- Store String Data
      ii_stosw;                                  -- Store String Data
      ii_str;                                    -- Store Task Register
      ii_sub;                                    -- Integer Subtraction
      ii_test;                                   -- Logical Compare
      ii_verr;                                   -- Verify a Segment for Reading
      ii_verw;                                   -- Verify a Segment for Writing
      ii_wait;                                   -- Wait
      ii_wbinvd;                                 -- Write-Back and Invalidate Cache
      ii_wrmsr;                                  -- Write to Model Specific Register
      ii_xadd;                                   -- Exchange and Add
      ii_xchg;                                   -- Exchange Register/Memory with Register
      ii_xlatb;                                  -- Table Look-up Translation
      ii_xor;                                    -- Logical Exclusive OR

      --- FPU instrukce ---
      ii_fadd;                                   -- Add
      ii_faddp;                                  -- Add
      ii_fiadd;                                  -- Add

      ii_fsub;                                   -- Subtract
      ii_fsubp;                                  -- Subtract
      ii_fisub;                                  -- Subtract

      ii_fsubr;                                  -- Reverse Subtract
      ii_fsubrp;                                 -- Reverse Subtract
      ii_fisubr;                                 -- Reverse Subtract

      ii_fmul;                                   -- Multiply
      ii_fmulp;                                  -- Multiply
      ii_fimul;                                  -- Multiply

      ii_fdiv;                                   -- Divide
      ii_fdivp;                                  -- Divide
      ii_fidiv;                                  -- Divide

      ii_fdivr;                                  -- Reverse Divide
      ii_fdivrp;                                 -- Reverse Divide
      ii_fidivr;                                 -- Reverse Divide

      ii_fldcw;                                  -- Load x87 FPU Control Word
      ii_fstcw;                                  -- Store x87 FPU Control Word
      ii_fnstcw;                                 -- Store x87 FPU Control Word

      ii_fstsw;                                  -- Store x87 FPU Status Word
      ii_fnstsw;                                 -- Store x87 FPU Status Word

      ii_finit;                                  -- Initialize Floating-Point Unit 
      ii_fninit;                                 -- Initialize Floating-Point Unit 
      ii_fclex;                                  -- Clear Exceptions  
      ii_fnclex;                                 -- Clear Exceptions  

      ii_fabs;                                   -- Absolute Value
      ii_fchs;                                   -- Change Sign Value
      ii_f2xm1;                                  -- Compute 2^x-1                    
      ii_fcos;                                   -- Cosine                           
      ii_fdecstp;                                -- Decrement Stack-Top Pointer      
      ii_fincstp;                                -- Increment Stack-Top Pointer      
      ii_fld1;                                   -- Load Constant 1                  
      ii_fldl2t;                                 -- Load Constant log2(10)           
      ii_fldl2e;                                 -- Load Constant log2(e)            
      ii_fldpi;                                  -- Load Constant pi                 
      ii_flflg2;                                 -- Load Constant log10(2)           
      ii_fldln2;                                 -- Load Constant ln(2)              
      ii_fldz;                                   -- Load Constant 0                  
      ii_fnop;                                   -- No Operation                     
      ii_fpatan;                                 -- Partial Arctangent               D
      ii_fprem;                                  -- Partial Remainder                
      ii_fprem1;                                 -- Partial Remainder                
      ii_fptan;                                  -- Partial Tangent                  
      ii_frndint;                                -- Round to Integer                 
      ii_fscale;                                 -- Scale                            
      ii_fsin;                                   -- Sine                             
      ii_fsincos;                                -- Sine and Cosine                  
      ii_fsqrt;                                  -- Square Root                      
      ii_ftst;                                   -- Test                             
      ii_fxam;                                   -- Examine                          
      ii_fxtract;                                -- Extract Exponent and Significand 
      ii_fyl2x;                                  -- Compute y * log2(x)              
      ii_fyl2xp1;                                -- Compute y * log2(x+1)            

      ii_fcom;                                   -- Compare Floating Point Values
      ii_fcomp;                                  -- Compare Floating Point Values and Pop
      ii_fcompp;                                 -- Compare Floating Point Values and Pop Twice

      ii_fcomi;                                  -- Compare Floating Point Values and Set EFLAGS
      ii_fcomip;                                 -- Compare Floating Point Values and Set EFLAGS and Pop
      ii_fucomi;                                 -- Compare Floating Point Values and Set EFLAGS
      ii_fucomip;                                -- Compare Floating Point Values and Set EFLAGS and Pop

      ii_fucom;                                  -- Unordered Compare Floating Point Values
      ii_fucomp;                                 -- Unordered Compare Floating Point Values and Pop
      ii_fucompp;                                -- Unordered Compare Floating Point Values and Pop Twice

      ii_fbld;                                   -- Load Binary Coded Decimal
      ii_fbstp;                                  -- Store BCD Integer and Pop

      ii_fld;                                    -- Load Floating Point Value
      ii_fst;                                    -- Store Floating Point Value
      ii_fstp;                                   -- Store Floating Point Value and Pop

      --- MMX ---
      --- Streaming SIMD Extensions ---
      --- 3D Now! ---

      --%%ADD(INSTR)
      end enum;

var
  ----- Jm‚na instrukc¡ ----------------------------------------------------------------------------
{%OFF}
  iinstrtxt        : const array iinstr of tshortident := [
      --- v¨eobecn‚ instrukce ---
      for ii_aaa       use 'AAA',
      for ii_aad       use 'AAD',
      for ii_aam       use 'AAM',
      for ii_aas       use 'AAS',
      for ii_adc       use 'ADC',
      for ii_add       use 'ADD',
      for ii_and       use 'AND',
      for ii_arpl      use 'ARPL',
      for ii_bound     use 'BOUND',
      for ii_bsf       use 'BSF',
      for ii_bsr       use 'BSR',
      for ii_bswap     use 'BSWAP',
      for ii_bt        use 'BT',
      for ii_btc       use 'BTC',
      for ii_btr       use 'BTR',
      for ii_bts       use 'BTS',
      for ii_call      use 'CALL',
      for ii_cbw       use 'CBW',
      for ii_cdq       use 'CDQ',
      for ii_clc       use 'CLC',
      for ii_cld       use 'CLD',
      for ii_cli       use 'CLI',
      for ii_clts      use 'CLTS',
      for ii_cmc       use 'CMC',
      for ii_cmova     use 'CMOVA',
      for ii_cmovae    use 'CMOVAE',
      for ii_cmovb     use 'CMOVB',
      for ii_cmovbe    use 'CMOVBE',
      for ii_cmovc     use 'CMOVC',
      for ii_cmove     use 'CMOVE',
      for ii_cmovg     use 'CMOVG',
      for ii_cmovge    use 'CMOVGE',
      for ii_cmovl     use 'CMOVL',
      for ii_cmovle    use 'CMOVLE',
      for ii_cmovna    use 'CMOVNA',
      for ii_cmovnae   use 'CMOVNAE',
      for ii_cmovnb    use 'CMOVNB',
      for ii_cmovnbe   use 'CMOVNBE',
      for ii_cmovnc    use 'CMOVNC',
      for ii_cmovne    use 'CMOVNE',
      for ii_cmovng    use 'CMOVNG',
      for ii_cmovnge   use 'CMOVNGE',
      for ii_cmovnl    use 'CMOVNL',
      for ii_cmovnle   use 'CMOVNLE',
      for ii_cmovno    use 'CMOVNO',
      for ii_cmovnp    use 'CMOVNP',
      for ii_cmovns    use 'CMOVNS',
      for ii_cmovnz    use 'CMOVNZ',
      for ii_cmovo     use 'CMOVO',
      for ii_cmovp     use 'CMOVP',
      for ii_cmovpe    use 'CMOVPE',
      for ii_cmovpo    use 'CMOVPO',
      for ii_cmovs     use 'CMOVS',
      for ii_cmovz     use 'CMOVZ',
      for ii_cmp       use 'CMP',
      for ii_cmpsb     use 'CMPSB',
      for ii_cmpsd     use 'CMPSD',
      for ii_cmpsw     use 'CMPSW',
      for ii_cmpxchg   use 'CMPXCHG',
      for ii_cmpxchg8b use 'CMPXCHG8B',
      for ii_cpuid     use 'CPUID',
      for ii_cwd       use 'CWD',
      for ii_cwde      use 'CWDE',
      for ii_daa       use 'DAA',
      for ii_das       use 'DAS',
      for ii_dec       use 'DEC',
      for ii_div       use 'DIV',
      for ii_enter     use 'ENTER',
      for ii_hlt       use 'HLT',
      for ii_idiv      use 'IDIV',
      for ii_imul      use 'IMUL',
      for ii_in        use 'IN',
      for ii_inc       use 'INC',
      for ii_insb      use 'INSB',
      for ii_insd      use 'INSD',
      for ii_insw      use 'INSW',
      for ii_int       use 'INT',
      for ii_into      use 'INTO',
      for ii_invd      use 'INVD',
      for ii_invlpg    use 'INVLPG',
      for ii_iret      use 'IRET',
      for ii_iretd     use 'IRETD',
      for ii_ja        use 'JA',
      for ii_jae       use 'JAE',
      for ii_jb        use 'JB',
      for ii_jbe       use 'JBE',
      for ii_jc        use 'JC',
      for ii_jcxz      use 'JCXZ',
      for ii_je        use 'JE',
      for ii_jecxz     use 'JECXZ',
      for ii_jg        use 'JG',
      for ii_jge       use 'JGE',
      for ii_jl        use 'JL',
      for ii_jle       use 'JLE',
      for ii_jmp       use 'JMP',
      for ii_jna       use 'JNA',
      for ii_jnae      use 'JNAE',
      for ii_jnb       use 'JNB',
      for ii_jnbe      use 'JNBE',
      for ii_jnc       use 'JNC',
      for ii_jne       use 'JNE',
      for ii_jng       use 'JNG',
      for ii_jnge      use 'JNGE',
      for ii_jnl       use 'JNL',
      for ii_jnle      use 'JNLE',
      for ii_jno       use 'JNO',
      for ii_jnp       use 'JNP',
      for ii_jns       use 'JNS',
      for ii_jnz       use 'JNZ',
      for ii_jo        use 'JO',
      for ii_jp        use 'JP',
      for ii_jpe       use 'JPE',
      for ii_jpo       use 'JPO',
      for ii_js        use 'JS',
      for ii_jz        use 'JZ',
      for ii_lahf      use 'LAHF',
      for ii_lar       use 'LAR',
      for ii_lds       use 'LDS',
      for ii_lea       use 'LEA',
      for ii_leave     use 'LEAVE',
      for ii_les       use 'LES',
      for ii_lfs       use 'LFS',
      for ii_lgdt      use 'LGDT',
      for ii_lgs       use 'LGS',
      for ii_lidt      use 'LIDT',
      for ii_lldt      use 'LLDT',
      for ii_lmsw      use 'LMSW',
      for ii_lodsb     use 'LODSB',
      for ii_lodsd     use 'LODSD',
      for ii_lodsw     use 'LODSW',
      for ii_loop      use 'LOOP',
      for ii_loope     use 'LOOPE',
      for ii_loopne    use 'LOOPNE',
      for ii_loopnz    use 'LOOPNZ',
      for ii_loopz     use 'LOOPZ',
      for ii_lsl       use 'LSL',
      for ii_lss       use 'LSS',
      for ii_ltr       use 'LTR',
      for ii_mov       use 'MOV',
      for ii_movsb     use 'MOVSB',
      for ii_movsd     use 'MOVSD',
      for ii_movsw     use 'MOVSW',
      for ii_movsx     use 'MOVSX',
      for ii_movzx     use 'MOVZX',
      for ii_mul       use 'MUL',
      for ii_neg       use 'NEG',
      for ii_nop       use 'NOP',
      for ii_not       use 'NOT',
      for ii_or        use 'OR',
      for ii_out       use 'OUT',
      for ii_outsb     use 'OUTSB',
      for ii_outsd     use 'OUTSD',
      for ii_outsw     use 'OUTSW',
      for ii_pause     use 'PAUSE',
      for ii_pop       use 'POP',
      for ii_popa      use 'POPA',
      for ii_popad     use 'POPAD',
      for ii_popf      use 'POPF',
      for ii_popfd     use 'POPFD',
      for ii_push      use 'PUSH',
      for ii_pusha     use 'PUSHA',
      for ii_pushad    use 'PUSHAD',
      for ii_pushf     use 'PUSHF',
      for ii_pushfd    use 'PUSHFD',
      for ii_rcl       use 'RCL',
      for ii_rcr       use 'RCR',
      for ii_rdmsr     use 'RDMSR',
      for ii_rdtsc     use 'RDTSC',
      for ii_ret       use 'RET',
      for ii_retf      use 'RETF',
      for ii_rol       use 'ROL',
      for ii_ror       use 'ROR',
      for ii_rsm       use 'RSM',
      for ii_sahf      use 'SAHF',
      for ii_sal       use 'SAL',
      for ii_sar       use 'SAR',
      for ii_sbb       use 'SBB',
      for ii_scasb     use 'SCASB',
      for ii_scasd     use 'SCASD',
      for ii_scasw     use 'SCASW',
      for ii_seta      use 'SETA',
      for ii_setae     use 'SETAE',
      for ii_setb      use 'SETB',
      for ii_setbe     use 'SETBE',
      for ii_setc      use 'SETC',
      for ii_sete      use 'SETE',
      for ii_setg      use 'SETG',
      for ii_setge     use 'SETGE',
      for ii_setl      use 'SETL',
      for ii_setle     use 'SETLE',
      for ii_setna     use 'SETNA',
      for ii_setnae    use 'SETNAE',
      for ii_setnb     use 'SETNB',
      for ii_setnbe    use 'SETNBE',
      for ii_setnc     use 'SETNC',
      for ii_setne     use 'SETNE',
      for ii_setng     use 'SETNG',
      for ii_setnge    use 'SETNGE',
      for ii_setnl     use 'SETNL',
      for ii_setnle    use 'SETNLE',
      for ii_setno     use 'SETNO',
      for ii_setnp     use 'SETNP',
      for ii_setns     use 'SETNS',
      for ii_setnz     use 'SETNZ',
      for ii_seto      use 'SETO',
      for ii_setp      use 'SETP',
      for ii_setpe     use 'SETPE',
      for ii_setpo     use 'SETPO',
      for ii_sets      use 'SETS',
      for ii_setz      use 'SETZ',
      for ii_sgdt      use 'SGDT',
      for ii_shl       use 'SHL',
      for ii_shld      use 'SHLD',
      for ii_shr       use 'SHR',
      for ii_shrd      use 'SHRD',
      for ii_sidt      use 'SIDT',
      for ii_sldt      use 'SLDT',
      for ii_smsw      use 'SMSW',
      for ii_stc       use 'STC',
      for ii_std       use 'STD',
      for ii_sti       use 'STI',
      for ii_stosb     use 'STOSB',
      for ii_stosd     use 'STOSD',
      for ii_stosw     use 'STOSW',
      for ii_str       use 'STR',
      for ii_sub       use 'SUB',
      for ii_test      use 'TEST',
      for ii_verr      use 'VERR',
      for ii_verw      use 'VERW',
      for ii_wait      use 'WAIT',
      for ii_wbinvd    use 'WBINVD',
      for ii_wrmsr     use 'WRMSR',
      for ii_xadd      use 'XADD',
      for ii_xchg      use 'XCHG',
      for ii_xlatb     use 'XLATB',
      for ii_xor       use 'XOR',

      -- FPU instrukce 
      for ii_fadd      use 'FADD',  
      for ii_faddp     use 'FADDP', 
      for ii_fiadd     use 'FIADD', 
      for ii_fsub      use 'FSUB',  
      for ii_fsubp     use 'FSUBP', 
      for ii_fisub     use 'FISUB', 
      for ii_fsubr     use 'FSUBR',  
      for ii_fsubrp    use 'FSUBRP', 
      for ii_fisubr    use 'FISUBR', 
      for ii_fmul      use 'FMUL',  
      for ii_fmulp     use 'FMULP', 
      for ii_fimul     use 'FIMUL', 
      for ii_fdiv      use 'FDIV',  
      for ii_fdivp     use 'FDIVP', 
      for ii_fidiv     use 'FIDIV', 
      for ii_fdivr     use 'FDIVR',  
      for ii_fdivrp    use 'FDIVRP', 
      for ii_fidivr    use 'FIDIVR', 
      for ii_fldcw     use 'FLDCW', 
      for ii_fstcw     use 'FSTCW', 
      for ii_fnstcw    use 'FNSTCW',
      for ii_fstsw     use 'FSTSW', 
      for ii_fnstsw    use 'FNSTSW',
      for ii_finit     use 'FINIT',
      for ii_fninit    use 'FNINIT',
      for ii_fclex     use 'FCLEX',
      for ii_fnclex    use 'FNCLEX',
      for ii_fabs      use 'FABS',
      for ii_fchs      use 'FCHS',
      for ii_f2xm1     use 'F2XM1',
      for ii_fcos      use 'FCOS',     
      for ii_fdecstp   use 'FDECSTP',   
      for ii_fincstp   use 'FINCSTP',   
      for ii_fld1      use 'FLD1',      
      for ii_fldl2t    use 'FLDL2T',    
      for ii_fldl2e    use 'FLDL2E',    
      for ii_fldpi     use 'FLDPI',     
      for ii_flflg2    use 'FLFLG2',    
      for ii_fldln2    use 'FLDLN2',    
      for ii_fldz      use 'FLDZ',      
      for ii_fnop      use 'FNOP',      
      for ii_fpatan    use 'FPATAN',   
      for ii_fprem     use 'FPREM',     
      for ii_fprem1    use 'FPREM1',    
      for ii_fptan     use 'FPTAN',     
      for ii_frndint   use 'FRNDINT',   
      for ii_fscale    use 'FSCALE',    
      for ii_fsin      use 'FSIN',      
      for ii_fsincos   use 'FSINCOS',   
      for ii_fsqrt     use 'FSQRT',     
      for ii_ftst      use 'FTST',      
      for ii_fxam      use 'FXAM',      
      for ii_fxtract   use 'FXTRACT',   
      for ii_fyl2x     use 'FYL2X',     
      for ii_fyl2xp1   use 'FYL2XP1',   
      for ii_fcom      use 'FCOM',
      for ii_fcomp     use 'FCOMP',
      for ii_fcompp    use 'FCOMPP',
      for ii_fcomi     use 'FCOMI',
      for ii_fcomip    use 'FCOMIP',
      for ii_fucomi    use 'FUCOMI',
      for ii_fucomip   use 'FUCOMIP',
      for ii_fucom     use 'FUCOM',
      for ii_fucomp    use 'FUCOMP',
      for ii_fucompp   use 'FUCOMPP',
      for ii_fbld      use 'FBLD',
      for ii_fbstp     use 'FBSTP',
      for ii_fld       use 'FLD',
      for ii_fst       use 'FST',
      for ii_fstp      use 'FSTP'

      --- MMX ---
      --- Streaming SIMD Extensions ---
      --- 3D Now! ---

      --%%ADD(INSTR)
      ];
{%ON}

type
  ----- Dopl¤uj¡c¡ v¨eobecn‚ informace o instrukc¡ch -----------------------------------------------
  -- charakter instrukce
  iinstrkind       = enum
      iik_normal;                                -- norm ln¡ instrukce
      iik_jump;                                  -- skokov  instrukce (podm¡nˆn˜ i nepodm¡nˆn˜)
      iik_privileged;                            -- privilegovan  instrukce
      iik_mmx;                                   -- MMX
      iik_sse;                                   -- SSE
      iik_sse2;                                  -- SSE 2
      iik_3Dnow;                                 -- 3DNow!
      end enum;

  -- informace o instrukci
  tiinstrinfo      = record
      kind         : iinstrkind;                 -- charakter instrukce
      cond         : icond;                      -- podm¡nka proveden¡ instrukce
      end record;

var
  -- tabulka dopl¤uj¡c¡ch v¨eobecn˜ch informac¡ o instrukc¡ch
  iinstrinfo       : const array iinstr of tiinstrinfo := [
      --- v¨eobecn‚ instrukce ---
      for ii_aaa       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_aad       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_aam       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_aas       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_adc       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_add       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_and       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_arpl      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_bound     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_bsf       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_bsr       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_bswap     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_bt        use [for kind use iik_normal, for cond use ic_ucond],
      for ii_btc       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_btr       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_bts       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_call      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cbw       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cdq       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_clc       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cld       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cli       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_clts      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cmc       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cmova     use [for kind use iik_normal, for cond use ic_a    ],
      for ii_cmovae    use [for kind use iik_normal, for cond use ic_ae   ],
      for ii_cmovb     use [for kind use iik_normal, for cond use ic_b    ],
      for ii_cmovbe    use [for kind use iik_normal, for cond use ic_be   ],
      for ii_cmovc     use [for kind use iik_normal, for cond use ic_c    ],
      for ii_cmove     use [for kind use iik_normal, for cond use ic_e    ],
      for ii_cmovg     use [for kind use iik_normal, for cond use ic_g    ],
      for ii_cmovge    use [for kind use iik_normal, for cond use ic_ge   ],
      for ii_cmovl     use [for kind use iik_normal, for cond use ic_l    ],
      for ii_cmovle    use [for kind use iik_normal, for cond use ic_le   ],
      for ii_cmovna    use [for kind use iik_normal, for cond use ic_na   ],
      for ii_cmovnae   use [for kind use iik_normal, for cond use ic_nae  ],
      for ii_cmovnb    use [for kind use iik_normal, for cond use ic_nb   ],
      for ii_cmovnbe   use [for kind use iik_normal, for cond use ic_nbe  ],
      for ii_cmovnc    use [for kind use iik_normal, for cond use ic_nc   ],
      for ii_cmovne    use [for kind use iik_normal, for cond use ic_ne   ],
      for ii_cmovng    use [for kind use iik_normal, for cond use ic_ng   ],
      for ii_cmovnge   use [for kind use iik_normal, for cond use ic_nge  ],
      for ii_cmovnl    use [for kind use iik_normal, for cond use ic_nl   ],
      for ii_cmovnle   use [for kind use iik_normal, for cond use ic_nle  ],
      for ii_cmovno    use [for kind use iik_normal, for cond use ic_no   ],
      for ii_cmovnp    use [for kind use iik_normal, for cond use ic_np   ],
      for ii_cmovns    use [for kind use iik_normal, for cond use ic_ns   ],
      for ii_cmovnz    use [for kind use iik_normal, for cond use ic_nz   ],
      for ii_cmovo     use [for kind use iik_normal, for cond use ic_o    ],
      for ii_cmovp     use [for kind use iik_normal, for cond use ic_p    ],
      for ii_cmovpe    use [for kind use iik_normal, for cond use ic_pe   ],
      for ii_cmovpo    use [for kind use iik_normal, for cond use ic_po   ],
      for ii_cmovs     use [for kind use iik_normal, for cond use ic_s    ],
      for ii_cmovz     use [for kind use iik_normal, for cond use ic_z    ],
      for ii_cmp       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cmpsb     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cmpsd     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cmpsw     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cmpxchg   use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cmpxchg8b use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cpuid     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cwd       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_cwde      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_daa       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_das       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_dec       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_div       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_enter     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_hlt       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_idiv      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_imul      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_in        use [for kind use iik_normal, for cond use ic_ucond],
      for ii_inc       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_insb      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_insd      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_insw      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_int       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_into      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_invd      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_invlpg    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_iret      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_iretd     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_ja        use [for kind use iik_jump,   for cond use ic_a    ],
      for ii_jae       use [for kind use iik_jump,   for cond use ic_ae   ],
      for ii_jb        use [for kind use iik_jump,   for cond use ic_b    ],
      for ii_jbe       use [for kind use iik_jump,   for cond use ic_be   ],
      for ii_jc        use [for kind use iik_jump,   for cond use ic_c    ],
      for ii_jcxz      use [for kind use iik_jump,   for cond use ic_cxz  ], -- %%X Pozor, v˜jimka !
      for ii_je        use [for kind use iik_jump,   for cond use ic_e    ],
      for ii_jecxz     use [for kind use iik_jump,   for cond use ic_ecxz ], -- %%X Pozor, v˜jimka !
      for ii_jg        use [for kind use iik_jump,   for cond use ic_g    ],
      for ii_jge       use [for kind use iik_jump,   for cond use ic_ge   ],
      for ii_jl        use [for kind use iik_jump,   for cond use ic_l    ],
      for ii_jle       use [for kind use iik_jump,   for cond use ic_le   ],
      for ii_jmp       use [for kind use iik_jump,   for cond use ic_ucond],
      for ii_jna       use [for kind use iik_jump,   for cond use ic_na   ],
      for ii_jnae      use [for kind use iik_jump,   for cond use ic_nae  ],
      for ii_jnb       use [for kind use iik_jump,   for cond use ic_nb   ],
      for ii_jnbe      use [for kind use iik_jump,   for cond use ic_nbe  ],
      for ii_jnc       use [for kind use iik_jump,   for cond use ic_nc   ],
      for ii_jne       use [for kind use iik_jump,   for cond use ic_ne   ],
      for ii_jng       use [for kind use iik_jump,   for cond use ic_ng   ],
      for ii_jnge      use [for kind use iik_jump,   for cond use ic_nge  ],
      for ii_jnl       use [for kind use iik_jump,   for cond use ic_nl   ],
      for ii_jnle      use [for kind use iik_jump,   for cond use ic_nle  ],
      for ii_jno       use [for kind use iik_jump,   for cond use ic_no   ],
      for ii_jnp       use [for kind use iik_jump,   for cond use ic_np   ],
      for ii_jns       use [for kind use iik_jump,   for cond use ic_ns   ],
      for ii_jnz       use [for kind use iik_jump,   for cond use ic_nz   ],
      for ii_jo        use [for kind use iik_jump,   for cond use ic_o    ],
      for ii_jp        use [for kind use iik_jump,   for cond use ic_p    ],
      for ii_jpe       use [for kind use iik_jump,   for cond use ic_pe   ],
      for ii_jpo       use [for kind use iik_jump,   for cond use ic_po   ],
      for ii_js        use [for kind use iik_jump,   for cond use ic_s    ],
      for ii_jz        use [for kind use iik_jump,   for cond use ic_z    ],
      for ii_lahf      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lar       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lds       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lea       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_leave     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_les       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lfs       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lgdt      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lgs       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lidt      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lldt      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lmsw      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lodsb     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lodsd     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lodsw     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_loop      use [for kind use iik_jump,   for cond use ic_ucond],
      for ii_loope     use [for kind use iik_jump,   for cond use ic_ucond],
      for ii_loopne    use [for kind use iik_jump,   for cond use ic_ucond],
      for ii_loopnz    use [for kind use iik_jump,   for cond use ic_ucond],
      for ii_loopz     use [for kind use iik_jump,   for cond use ic_ucond],
      for ii_lsl       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_lss       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_ltr       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_mov       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_movsb     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_movsd     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_movsw     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_movsx     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_movzx     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_mul       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_neg       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_nop       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_not       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_or        use [for kind use iik_normal, for cond use ic_ucond],
      for ii_out       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_outsb     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_outsd     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_outsw     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_pause     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_pop       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_popa      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_popad     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_popf      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_popfd     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_push      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_pusha     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_pushad    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_pushf     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_pushfd    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_rcl       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_rcr       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_rdmsr     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_rdtsc     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_ret       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_retf      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_rol       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_ror       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_rsm       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_sahf      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_sal       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_sar       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_sbb       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_scasb     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_scasd     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_scasw     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_seta      use [for kind use iik_normal, for cond use ic_a    ],
      for ii_setae     use [for kind use iik_normal, for cond use ic_ae   ],
      for ii_setb      use [for kind use iik_normal, for cond use ic_b    ],
      for ii_setbe     use [for kind use iik_normal, for cond use ic_be   ],
      for ii_setc      use [for kind use iik_normal, for cond use ic_c    ],
      for ii_sete      use [for kind use iik_normal, for cond use ic_e    ],
      for ii_setg      use [for kind use iik_normal, for cond use ic_g    ],
      for ii_setge     use [for kind use iik_normal, for cond use ic_ge   ],
      for ii_setl      use [for kind use iik_normal, for cond use ic_l    ],
      for ii_setle     use [for kind use iik_normal, for cond use ic_le   ],
      for ii_setna     use [for kind use iik_normal, for cond use ic_na   ],
      for ii_setnae    use [for kind use iik_normal, for cond use ic_nae  ],
      for ii_setnb     use [for kind use iik_normal, for cond use ic_nb   ],
      for ii_setnbe    use [for kind use iik_normal, for cond use ic_nbe  ],
      for ii_setnc     use [for kind use iik_normal, for cond use ic_nc   ],
      for ii_setne     use [for kind use iik_normal, for cond use ic_ne   ],
      for ii_setng     use [for kind use iik_normal, for cond use ic_ng   ],
      for ii_setnge    use [for kind use iik_normal, for cond use ic_nge  ],
      for ii_setnl     use [for kind use iik_normal, for cond use ic_nl   ],
      for ii_setnle    use [for kind use iik_normal, for cond use ic_nle  ],
      for ii_setno     use [for kind use iik_normal, for cond use ic_no   ],
      for ii_setnp     use [for kind use iik_normal, for cond use ic_np   ],
      for ii_setns     use [for kind use iik_normal, for cond use ic_ns   ],
      for ii_setnz     use [for kind use iik_normal, for cond use ic_nz   ],
      for ii_seto      use [for kind use iik_normal, for cond use ic_o    ],
      for ii_setp      use [for kind use iik_normal, for cond use ic_p    ],
      for ii_setpe     use [for kind use iik_normal, for cond use ic_pe   ],
      for ii_setpo     use [for kind use iik_normal, for cond use ic_po   ],
      for ii_sets      use [for kind use iik_normal, for cond use ic_s    ],
      for ii_setz      use [for kind use iik_normal, for cond use ic_z    ],
      for ii_sgdt      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_shl       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_shld      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_shr       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_shrd      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_sidt      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_sldt      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_smsw      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_stc       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_std       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_sti       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_stosb     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_stosd     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_stosw     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_str       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_sub       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_test      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_verr      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_verw      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_wait      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_wbinvd    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_wrmsr     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_xadd      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_xchg      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_xlatb     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_xor       use [for kind use iik_normal, for cond use ic_ucond],

      --- FPU instrukce ---
      for ii_fadd      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_faddp     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fiadd     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fsub      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fsubp     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fisub     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fsubr     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fsubrp    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fisubr    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fmul      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fmulp     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fimul     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fdiv      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fdivp     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fidiv     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fdivr     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fdivrp    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fidivr    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fldcw     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fstcw     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fnstcw    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fstsw     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fnstsw    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_finit     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fninit    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fclex     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fnclex    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fabs      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fchs      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_f2xm1     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fcos      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fdecstp   use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fincstp   use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fld1      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fldl2t    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fldl2e    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fldpi     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_flflg2    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fldln2    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fldz      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fnop      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fpatan    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fprem     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fprem1    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fptan     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_frndint   use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fscale    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fsin      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fsincos   use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fsqrt     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_ftst      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fxam      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fxtract   use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fyl2x     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fyl2xp1   use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fcom      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fcomp     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fcompp    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fcomi     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fcomip    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fucomi    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fucomip   use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fucom     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fucomp    use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fucompp   use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fbld      use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fbstp     use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fld       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fst       use [for kind use iik_normal, for cond use ic_ucond],
      for ii_fstp      use [for kind use iik_normal, for cond use ic_ucond]

      --- MMX ---
      --- Streaming SIMD Extensions ---
      --- 3D Now! ---

      --%%ADD(INSTR)
      ];



--#if #environment compiler_version;='4.0.2' then;
----------------------------------------------------------------------------------------------------
--protected
----------------------------------------------------------------------------------------------------
--#end if;

var
  ----- Registry -----------------------------------------------------------------------------------
  -- velikosti registr– v bytech
  iregsize         : const array ireg of t_unsigned := [
      for ir_none  use 0,
      for ir_al    use 1,
      for ir_cl    use 1,
      for ir_dl    use 1,
      for ir_bl    use 1,
      for ir_ah    use 1,
      for ir_ch    use 1,
      for ir_dh    use 1,
      for ir_bh    use 1,
      for ir_ax    use 2,
      for ir_cx    use 2,
      for ir_dx    use 2,
      for ir_bx    use 2,
      for ir_sp    use 2,
      for ir_bp    use 2,
      for ir_si    use 2,
      for ir_di    use 2,
      for ir_eax   use 4,
      for ir_ecx   use 4,
      for ir_edx   use 4,
      for ir_ebx   use 4,
      for ir_esp   use 4,
      for ir_ebp   use 4,
      for ir_esi   use 4,
      for ir_edi   use 4,
      for ir_es    use 2,
      for ir_cs    use 2,
      for ir_ss    use 2,
      for ir_ds    use 2,
      for ir_fs    use 2,
      for ir_gs    use 2,
      for ir_cr0   use 4,
      for ir_cr2   use 4,
      for ir_cr3   use 4,
      for ir_cr4   use 4,
      for ir_dr0   use 4,
      for ir_dr1   use 4,
      for ir_dr2   use 4,
      for ir_dr3   use 4,
      for ir_dr6   use 4,
      for ir_dr7   use 4,
      for ir_st0   use 10,
      for ir_st1   use 10,
      for ir_st2   use 10,
      for ir_st3   use 10,
      for ir_st4   use 10,
      for ir_st5   use 10,
      for ir_st6   use 10,
      for ir_st7   use 10,
      for ir_mm0   use 8,
      for ir_mm1   use 8,
      for ir_mm2   use 8,
      for ir_mm3   use 8,
      for ir_mm4   use 8,
      for ir_mm5   use 8,
      for ir_mm6   use 8,
      for ir_mm7   use 8,
      for ir_xmm0  use 16,
      for ir_xmm1  use 16,
      for ir_xmm2  use 16,
      for ir_xmm3  use 16,
      for ir_xmm4  use 16,
      for ir_xmm5  use 16,
      for ir_xmm6  use 16,
      for ir_xmm7  use 16];

var
  iuniregtxt       : const array iunireg of t_char32str := [
      for in_eax   use 'eax',
      for in_ebx   use 'ebx',
      for in_ecx   use 'ecx',
      for in_edx   use 'edx',
      for in_esi   use 'esi',
      for in_edi   use 'edi',
      for in_none  use '???'];

const
  -- registry bez 8mi bitov‚ ‡ sti
  in_no8bit        = iuniregset:[in_esi,in_edi];

{%OFF}
var
  ----- Jm‚na registr– -----------------------------------------------------------------------------
  iregtxt          : const array ireg of tshortident := [
      for ir_none  use '',
      for ir_al    use 'AL',
      for ir_cl    use 'CL',
      for ir_dl    use 'DL',
      for ir_bl    use 'BL',
      for ir_ah    use 'AH',
      for ir_ch    use 'CH',
      for ir_dh    use 'DH',
      for ir_bh    use 'BH',
      for ir_ax    use 'AX',
      for ir_cx    use 'CX',
      for ir_dx    use 'DX',
      for ir_bx    use 'BX',
      for ir_sp    use 'SP',
      for ir_bp    use 'BP',
      for ir_si    use 'SI',
      for ir_di    use 'DI',
      for ir_eax   use 'EAX',
      for ir_ecx   use 'ECX',
      for ir_edx   use 'EDX',
      for ir_ebx   use 'EBX',
      for ir_esp   use 'ESP',
      for ir_ebp   use 'EBP',
      for ir_esi   use 'ESI',
      for ir_edi   use 'EDI',
      for ir_es    use 'ES',
      for ir_cs    use 'CS',
      for ir_ss    use 'SS',
      for ir_ds    use 'DS',
      for ir_fs    use 'FS',
      for ir_gs    use 'GS',
      for ir_cr0   use 'CR0',
      for ir_cr2   use 'CR2',
      for ir_cr3   use 'CR3',
      for ir_cr4   use 'CR4',
      for ir_dr0   use 'DR0',
      for ir_dr1   use 'DR1',
      for ir_dr2   use 'DR2',
      for ir_dr3   use 'DR3',
      for ir_dr6   use 'DR6',
      for ir_dr7   use 'DR7',
      for ir_st0   use 'ST0',
      for ir_st1   use 'ST1',
      for ir_st2   use 'ST2',
      for ir_st3   use 'ST3',
      for ir_st4   use 'ST4',
      for ir_st5   use 'ST5',
      for ir_st6   use 'ST6',
      for ir_st7   use 'ST7',
      for ir_mm0   use 'MM0',
      for ir_mm1   use 'MM1',
      for ir_mm2   use 'MM2',
      for ir_mm3   use 'MM3',
      for ir_mm4   use 'MM4',
      for ir_mm5   use 'MM5',
      for ir_mm6   use 'MM6',
      for ir_mm7   use 'MM7',
      for ir_xmm0  use 'XMM0',
      for ir_xmm1  use 'XMM1',
      for ir_xmm2  use 'XMM2',
      for ir_xmm3  use 'XMM3',
      for ir_xmm4  use 'XMM4',
      for ir_xmm5  use 'XMM5',
      for ir_xmm6  use 'XMM6',
      for ir_xmm7  use 'XMM7'];
{%ON}

var
  ----- K¢dov n¡ registr– --------------------------------------------------------------------------
  iregcode         : const array ireg of t_code_byte := [
      for ir_none  use $00,
      for ir_al    use $00,
      for ir_cl    use $01,
      for ir_dl    use $02,
      for ir_bl    use $03,
      for ir_ah    use $04,
      for ir_ch    use $05,
      for ir_dh    use $06,
      for ir_bh    use $07,
      for ir_ax    use $00,
      for ir_cx    use $01,
      for ir_dx    use $02,
      for ir_bx    use $03,
      for ir_sp    use $04,
      for ir_bp    use $05,
      for ir_si    use $06,
      for ir_di    use $07,
      for ir_eax   use $00,
      for ir_ecx   use $01,
      for ir_edx   use $02,
      for ir_ebx   use $03,
      for ir_esp   use $04,
      for ir_ebp   use $05,
      for ir_esi   use $06,
      for ir_edi   use $07,
      for ir_es    use $00,
      for ir_cs    use $01,
      for ir_ss    use $02,
      for ir_ds    use $03,
      for ir_fs    use $04,
      for ir_gs    use $05,
      for ir_cr0   use $00,
      for ir_cr2   use $02,
      for ir_cr3   use $03,
      for ir_cr4   use $04,
      for ir_dr0   use $00,
      for ir_dr1   use $01,
      for ir_dr2   use $02,
      for ir_dr3   use $03,
      for ir_dr6   use $06,
      for ir_dr7   use $07,
      for ir_st0   use $00,
      for ir_st1   use $01,
      for ir_st2   use $02,
      for ir_st3   use $03,
      for ir_st4   use $04,
      for ir_st5   use $05,
      for ir_st6   use $06,
      for ir_st7   use $07,
      for ir_mm0   use $00,
      for ir_mm1   use $01,
      for ir_mm2   use $02,
      for ir_mm3   use $03,
      for ir_mm4   use $04,
      for ir_mm5   use $05,
      for ir_mm6   use $06,
      for ir_mm7   use $07,
      for ir_xmm0  use $00,
      for ir_xmm1  use $01,
      for ir_xmm2  use $02,
      for ir_xmm3  use $03,
      for ir_xmm4  use $04,
      for ir_xmm5  use $05,
      for ir_xmm6  use $06,
      for ir_xmm7  use $07];

type
  ----- Podm¡nky -----------------------------------------------------------------------------------
  -- podm¡nˆn‚ instrukce
  iinstrcond       = enum
      iic_jmp;                                   -- Jump (if Condition is Met)
      iic_set;                                   -- Byte Set on Condition
      iic_cmov;                                  -- Conditional Move
      end enum;

  -- predikce skoku
  ijumpprediction  = enum                        
      ijp_none;                                  -- nev¡ se
      ijp_taken;                                 -- skok zpravidla nastane
      ijp_not_taken;                             -- skok zpravidla nenastane
      end enum;

var
  -- k¢dov n¡ podm¡nek
  icondcode        : const array icond of t_code_byte := [
      for ic_ucond use $00,
      for ic_o     use $00,
      for ic_no    use $01,
      for ic_b     use $02,
      for ic_c     use $02,
      for ic_nae   use $02,
      for ic_nb    use $03,
      for ic_nc    use $03,
      for ic_ae    use $03,
      for ic_e     use $04,
      for ic_z     use $04,
      for ic_ne    use $05,
      for ic_nz    use $05,
      for ic_be    use $06,
      for ic_na    use $06,
      for ic_nbe   use $07,
      for ic_a     use $07,
      for ic_s     use $08,
      for ic_ns    use $09,
      for ic_p     use $0a,
      for ic_pe    use $0a,
      for ic_np    use $0b,
      for ic_po    use $0b,
      for ic_l     use $0c,
      for ic_nge   use $0c,
      for ic_nl    use $0d,
      for ic_ge    use $0d,
      for ic_le    use $0e,
      for ic_ng    use $0e,
      for ic_nle   use $0f,
      for ic_g     use $0f,
      for ic_cxz   use $00,
      for ic_ecxz  use $00];

  -- podm¡nka a instrukce
  icondinstr       : array icond,iinstrcond of iinstr := [
      for ic_ucond use [ii_jmp , ii_nop   , ii_mov    ],  {%%X form lnˆ by zde m¡sto NOP mˆlo b˜t MOV x,1 }
      for ic_o     use [ii_jo  , ii_seto  , ii_cmovo  ],
      for ic_no    use [ii_jno , ii_setno , ii_cmovno ],
      for ic_b     use [ii_jb  , ii_setb  , ii_cmovb  ],
      for ic_c     use [ii_jc  , ii_setc  , ii_cmovc  ],
      for ic_nae   use [ii_jnae, ii_setnae, ii_cmovnae],
      for ic_nb    use [ii_jnb , ii_setnb , ii_cmovnb ],
      for ic_nc    use [ii_jnc , ii_setnc , ii_cmovnc ],
      for ic_ae    use [ii_jae , ii_setae , ii_cmovae ],
      for ic_e     use [ii_je  , ii_sete  , ii_cmove  ],
      for ic_z     use [ii_jz  , ii_setz  , ii_cmovz  ],
      for ic_ne    use [ii_jne , ii_setne , ii_cmovne ],
      for ic_nz    use [ii_jnz , ii_setnz , ii_cmovnz ],
      for ic_be    use [ii_jbe , ii_setbe , ii_cmovbe ],
      for ic_na    use [ii_jna , ii_setna , ii_cmovna ],
      for ic_nbe   use [ii_jnbe, ii_setnbe, ii_cmovnbe],
      for ic_a     use [ii_ja  , ii_seta  , ii_cmova  ],
      for ic_s     use [ii_js  , ii_sets  , ii_cmovs  ],
      for ic_ns    use [ii_jns , ii_setns , ii_cmovns ],
      for ic_p     use [ii_jp  , ii_setp  , ii_cmovp  ],
      for ic_pe    use [ii_jpe , ii_setpe , ii_cmovpe ],
      for ic_np    use [ii_jnp , ii_setnp , ii_cmovnp ],
      for ic_po    use [ii_jpo , ii_setpo , ii_cmovpo ],
      for ic_l     use [ii_jl  , ii_setl  , ii_cmovl  ],
      for ic_nge   use [ii_jnge, ii_setnge, ii_cmovnge],
      for ic_nl    use [ii_jnl , ii_setnl , ii_cmovnl ],
      for ic_ge    use [ii_jge , ii_setge , ii_cmovge ],
      for ic_le    use [ii_jle , ii_setle , ii_cmovle ],
      for ic_ng    use [ii_jng , ii_setng , ii_cmovng ],
      for ic_nle   use [ii_jnle, ii_setnle, ii_cmovnle],
      for ic_g     use [ii_jg  , ii_setg  , ii_cmovg  ],
      for ic_cxz   use [ii_jcxz, ii_nop   , ii_nop    ],
      for ic_ecxz  use [ii_jecxz,ii_nop   , ii_nop    ]];

var
  ----- Prefixy ------------------------------------------------------------------------------------
#if debug then;{%OFF}
  iprefixtxt       : const array iprefix of tshortident := [
      for ip_none  use '',
      for ip_data  use 'db 67h',
      for ip_addr  use 'db 66h',
      for ip_rep   use 'REP',
      for ip_repe  use 'REPE',
      for ip_repz  use 'REPZ',
      for ip_repne use 'REPNE',
      for ip_repnz use 'REPNZ',
      for ip_lock  use 'LOCK',
      for ip_cs    use 'cs:',
      for ip_ss    use 'ss:',
      for ip_ds    use 'ds:',
      for ip_es    use 'es:',
      for ip_fs    use 'fs:',
      for ip_gs    use 'gs:',
      for ip_bnt   use 'BNT',
      for ip_btk   use 'BTK'];

#end if;{%ON}

  -- k¢dov n¡ prefix–
  iprefixcode      : const array iprefix of t_code_byte := [
      for ip_none  use $00,
      for ip_data  use $66,
      for ip_addr  use $67,
      for ip_rep   use $f3,
      for ip_repe  use $f3,
      for ip_repz  use $f3,
      for ip_repne use $f2,
      for ip_repnz use $f2,
      for ip_lock  use $f0,
      for ip_cs    use $2e,
      for ip_ss    use $36,
      for ip_ds    use $3e,
      for ip_es    use $26,
      for ip_fs    use $64,
      for ip_gs    use $65,
      for ip_bnt   use $2E,
      for ip_btk   use $3E];

type
  ----- M¢dy operand– ------------------------------------------------------------------------------
  iopmode          = enum
      op_null;                                   -- nic
      op_AL;                                     -- registr AL
      op_AX;                                     -- registr AX
      op_EAX;                                    -- registr EAX
      op_CL;                                     -- registr CL
      op_DX;                                     -- registr DX
      op_CRi;                                    -- registr CRi
      op_DRi;                                    -- registr DRi
      op_CS;                                     -- segmentov˜ registr CS
      op_DS;                                     -- segmentov˜ registr DS
      op_ES;                                     -- segmentov˜ registr ES
      op_SS;                                     -- segmentov˜ registr SS
      op_FS;                                     -- segmentov˜ registr FS
      op_GS;                                     -- segmentov˜ registr GS
      op_i1;                                     -- ‡¡slo 1
      op_i3;                                     -- ‡¡slo 3
      op_rel8;                                   -- relativn¡ adresa 8 bit– (signed)
      op_rel16;                                  -- relativn¡ adresa 16 bit–
      op_rel32;                                  -- relativn¡ adresa 32 bit–
      op_ptr16_16;                               -- far pointer ptr16:16
      op_ptr16_32;                               -- far pointer ptr16:32
      op_r8;                                     -- registr 8 bit–
      op_r16;                                    -- registr 16 bit–
      op_r32;                                    -- registr 32 bit–
      op_imm8;                                   -- p©¡m  hodnota 8 bit–
      op_imm16;                                  -- p©¡m  hodnota 16 bit–
      op_imm32;                                  -- p©¡m  hodnota 32 bit–
      op_imm8s;                                  -- p©¡m  hodnota 8 bit– (znam‚nkov‚ roz¨¡©en¡)
      op_rm8;                                    -- registr/pamˆŸ 8 bit–
      op_rm16;                                   -- registr/pamˆŸ 16 bit–
      op_rm32;                                   -- registr/pamˆŸ 32 bit–
      op_rm64;                                   -- registr/pamˆŸ 64 bit–
      op_m;                                      -- pamˆŸ 16/32 bit–
      op_m2byte;                                 -- pamˆŸ 2 byty
      op_m8;                                     -- pamˆŸ 8 bit– ds:esi/es:edi
      op_m16;                                    -- pamˆŸ 16 bit– ds:esi/es:edi
      op_m32;                                    -- pamˆŸ 32 bit– ds:esi/es:edi
      op_m16_16;                                 -- pamˆŸ s far pointer ptr16:16
      op_m16_32;                                 -- pamˆŸ s far pointer ptr16:32
      op_m16a32;                                 -- pamˆŸ s dvojic¡ ‡¡sel 16 a 32 bit–
      op_m16a16;                                 -- pamˆŸ s dvojic¡ ‡¡sel 16 a 16 bit–
      op_m32a32;                                 -- pamˆŸ s dvojic¡ ‡¡sel 32 a 32 bit–
      op_moffs8;                                 -- pamˆŸ offset s ‡¡slem 8 bit–
      op_moffs16;                                -- pamˆŸ offset s ‡¡slem 16 bit–
      op_moffs32;                                -- pamˆŸ offset s ‡¡slem 32 bit–
      op_sreg;                                   -- segmentov˜ registr
      op_m32fp;                                  -- pamˆŸ s ‡¡slem single
      op_m64fp;                                  -- pamˆŸ s ‡¡slem double
      op_m80fp;                                  -- pamˆŸ s ‡¡slem extended
      op_m16int;                                 -- pamˆŸ s 16bitov˜m integer ‡¡slem
      op_m32int;                                 -- pamˆŸ s 32bitov˜m integer ‡¡slem
      op_ST0;                                    -- registr ST(0)
      op_STi;                                    -- registr ST(i)
      end enum;
  iopmodeset       = set of iopmode;

const
  op_implicit      = iopmodeset:[op_i1,op_i3,op_AL,op_AX,op_EAX,op_CL,op_DX,op_CS,op_DS,op_ES,op_SS,op_FS,op_GS];

#if debug then;{%OFF}
var
  iopmodetxt       : const array iopmode of t_char32str := [
      for op_null     use '',
      for op_AL       use 'AL',
      for op_AX       use 'AX',
      for op_EAX      use 'EAX',
      for op_CL       use 'CL',
      for op_DX       use 'DX',
      for op_CRi      use 'CRi',
      for op_DRi      use 'DRi',
      for op_CS       use 'CS',
      for op_DS       use 'DS',
      for op_ES       use 'ES',
      for op_SS       use 'SS',
      for op_FS       use 'FS',
      for op_GS       use 'GS',
      for op_i1       use '1',
      for op_i3       use '3',
      for op_rel8     use 'rel8',
      for op_rel16    use 'rel16',
      for op_rel32    use 'rel32',
      for op_ptr16_16 use 'ptr16:16',
      for op_ptr16_32 use 'ptr16:32',
      for op_r8       use 'r8',
      for op_r16      use 'r16',
      for op_r32      use 'r32',
      for op_imm8     use 'imm8',
      for op_imm16    use 'imm16',
      for op_imm32    use 'imm32',
      for op_imm8s    use 'imm8S',
      for op_rm8      use 'rm8',
      for op_rm16     use 'rm16',
      for op_rm32     use 'rm32',
      for op_rm64     use 'rm64',
      for op_m        use 'm',
      for op_m2byte   use 'm2byte',
      for op_m8       use 'm8',
      for op_m16      use 'm16',
      for op_m32      use 'm32',
      for op_m16_16   use 'm16:16',
      for op_m16_32   use 'm16:32',
      for op_m16a32   use 'm16&32',
      for op_m16a16   use 'm16&16',
      for op_m32a32   use 'm32&32',
      for op_moffs8   use 'moffs8',
      for op_moffs16  use 'moffs16',
      for op_moffs32  use 'moffs32',
      for op_sreg     use 'sreg',
      for op_m32fp    use 'm32fp',
      for op_m64fp    use 'm64fp',
      for op_m80fp    use 'm80fp',
      for op_ST0      use 'ST(0)',
      for op_STi      use 'ST(i)'];
#end if;{%ON}

type
  ----- Roz¨¡©en¡ opera‡n¡ho k¢du ------------------------------------------------------------------
  iocext           = enum
      x_n;                                       -- nic
      x_r;                                       -- p©i‡¡st ‡¡slo registru
      x_i;                                       -- p©i‡¡st ‡¡slo registru ST(i)
      x_x;                                       -- v˜jimka pro IMUL
      x_0;                                       -- modifikace 0
      x_1;                                       -- modifikace 1
      x_2;                                       -- modifikace 2
      x_3;                                       -- modifikace 3
      x_4;                                       -- modifikace 4
      x_5;                                       -- modifikace 5
      x_6;                                       -- modifikace 6
      x_7;                                       -- modifikace 7
      end enum;

type
  ----- Opera‡n¡ k¢d instrukce -------------------------------------------
  iopcode          = record
      ii           : iinstr;                     -- instrukce
      oc           : string 3 of t_code_byte;    -- opera‡n¡ k¢d
      ex           : iocext;                     -- roz¨¡©en¡ opera‡n¡ho k¢du
      op1          : iopmode;                    -- operand 1
      op2          : iopmode;                    -- operand 2
      op3          : iopmode;                    -- operand 3
      p            : t_code_byte;                -- po‘adovan‚ prefixy
      end record;

var
  ----- Tabulka k¢dov n¡ instrukc¡ -----------------------------------------------------------------
  -- K¢dov n¡ podle Pentium Processor Family Developer's Manual,
  -- Volume 3: Architecture and Programming Manual.
  -- Po©ad¡ k¢du pro jednotliv‚ instrukce je upraveno tak, aby byly
  -- optimalizovan‚ (krat¨¡) verze instrukc¡ d©¡v (a‘ na v˜jimky, nap©.
  -- instrukce imul m  po©ad¡ tak, aby se pokudmo‘no nevybrala varianta
  -- s implicitn¡m operandem.


  iopcodemap       : const array 0..765 {%%ADD(INSTR)} of iopcode := [
      --- v¨eobecn‚ instrukce ---
      [for ii use ii_aaa      , for oc use [$37],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_aad      , for oc use [$d5,$0a],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_aam      , for oc use [$d4,$0a],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_aas      , for oc use [$3f],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_adc      , for oc use [$14],        for ex use x_n, for op1 use op_AL      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_adc      , for oc use [$15],        for ex use x_n, for op1 use op_AX      , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_adc      , for oc use [$15],        for ex use x_n, for op1 use op_EAX     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_adc      , for oc use [$80],        for ex use x_2, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_adc      , for oc use [$83],        for ex use x_2, for op1 use op_rm16    , for op2 use op_imm8s   , for op3 use op_null    , for p use $01],
      [for ii use ii_adc      , for oc use [$83],        for ex use x_2, for op1 use op_rm32    , for op2 use op_imm8s   , for op3 use op_null    , for p use $10],
      [for ii use ii_adc      , for oc use [$81],        for ex use x_2, for op1 use op_rm16    , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_adc      , for oc use [$81],        for ex use x_2, for op1 use op_rm32    , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_adc      , for oc use [$10],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_adc      , for oc use [$11],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_adc      , for oc use [$11],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_adc      , for oc use [$12],        for ex use x_n, for op1 use op_r8      , for op2 use op_rm8     , for op3 use op_null    , for p use $00],
      [for ii use ii_adc      , for oc use [$13],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_adc      , for oc use [$13],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_add      , for oc use [$04],        for ex use x_n, for op1 use op_AL      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_add      , for oc use [$05],        for ex use x_n, for op1 use op_AX      , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_add      , for oc use [$05],        for ex use x_n, for op1 use op_EAX     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_add      , for oc use [$80],        for ex use x_0, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_add      , for oc use [$83],        for ex use x_0, for op1 use op_rm16    , for op2 use op_imm8s   , for op3 use op_null    , for p use $01],
      [for ii use ii_add      , for oc use [$83],        for ex use x_0, for op1 use op_rm32    , for op2 use op_imm8s   , for op3 use op_null    , for p use $10],
      [for ii use ii_add      , for oc use [$81],        for ex use x_0, for op1 use op_rm16    , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_add      , for oc use [$81],        for ex use x_0, for op1 use op_rm32    , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_add      , for oc use [$00],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_add      , for oc use [$01],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_add      , for oc use [$01],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_add      , for oc use [$02],        for ex use x_n, for op1 use op_r8      , for op2 use op_rm8     , for op3 use op_null    , for p use $00],
      [for ii use ii_add      , for oc use [$03],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_add      , for oc use [$03],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_and      , for oc use [$24],        for ex use x_n, for op1 use op_AL      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_and      , for oc use [$25],        for ex use x_n, for op1 use op_AX      , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_and      , for oc use [$25],        for ex use x_n, for op1 use op_EAX     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_and      , for oc use [$80],        for ex use x_4, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_and      , for oc use [$83],        for ex use x_4, for op1 use op_rm16    , for op2 use op_imm8s   , for op3 use op_null    , for p use $01],
      [for ii use ii_and      , for oc use [$83],        for ex use x_4, for op1 use op_rm32    , for op2 use op_imm8s   , for op3 use op_null    , for p use $10],
      [for ii use ii_and      , for oc use [$81],        for ex use x_4, for op1 use op_rm16    , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_and      , for oc use [$81],        for ex use x_4, for op1 use op_rm32    , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_and      , for oc use [$20],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_and      , for oc use [$21],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_and      , for oc use [$21],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_and      , for oc use [$22],        for ex use x_n, for op1 use op_r8      , for op2 use op_rm8     , for op3 use op_null    , for p use $00],
      [for ii use ii_and      , for oc use [$23],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_and      , for oc use [$23],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                             
      [for ii use ii_arpl     , for oc use [$63],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_bound    , for oc use [$62],        for ex use x_n, for op1 use op_r16     , for op2 use op_m16_16  , for op3 use op_null    , for p use $01],
      [for ii use ii_bound    , for oc use [$62],        for ex use x_n, for op1 use op_r32     , for op2 use op_m16_32  , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_bsf      , for oc use [$0f,$bc],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_bsf      , for oc use [$0f,$bc],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_bsr      , for oc use [$0f,$bd],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_bsr      , for oc use [$0f,$bd],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_bswap    , for oc use [$0f,$c8],    for ex use x_r, for op1 use op_r32     , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_bt       , for oc use [$0f,$a3],    for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_bt       , for oc use [$0f,$a3],    for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_bt       , for oc use [$0f,$ba],    for ex use x_4, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_bt       , for oc use [$0f,$ba],    for ex use x_4, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_btc      , for oc use [$0f,$bb],    for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_btc      , for oc use [$0f,$bb],    for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_btc      , for oc use [$0f,$ba],    for ex use x_7, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_btc      , for oc use [$0f,$ba],    for ex use x_7, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_btr      , for oc use [$0f,$b3],    for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_btr      , for oc use [$0f,$b3],    for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_btr      , for oc use [$0f,$ba],    for ex use x_6, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_btr      , for oc use [$0f,$ba],    for ex use x_6, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_bts      , for oc use [$0f,$ab],    for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_bts      , for oc use [$0f,$ab],    for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_bts      , for oc use [$0f,$ba],    for ex use x_5, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_bts      , for oc use [$0f,$ba],    for ex use x_5, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_call     , for oc use [$e8],        for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_call     , for oc use [$ff],        for ex use x_2, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_call     , for oc use [$9a],        for ex use x_n, for op1 use op_ptr16_16, for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_call     , for oc use [$ff],        for ex use x_3, for op1 use op_m16_16  , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_call     , for oc use [$e8],        for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_call     , for oc use [$ff],        for ex use x_2, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_call     , for oc use [$9a],        for ex use x_n, for op1 use op_ptr16_32, for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_call     , for oc use [$ff],        for ex use x_3, for op1 use op_m16_32  , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_cbw      , for oc use [$98],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_cwde     , for oc use [$98],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_clc      , for oc use [$f8],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_cld      , for oc use [$fc],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_cli      , for oc use [$fa],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_clts     , for oc use [$0f,$06],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_cmc      , for oc use [$f5],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_cmova    , for oc use [$0f,$47],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmova    , for oc use [$0f,$47],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovae   , for oc use [$0f,$43],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovae   , for oc use [$0f,$43],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovb    , for oc use [$0f,$42],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovb    , for oc use [$0f,$42],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovbe   , for oc use [$0f,$46],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovbe   , for oc use [$0f,$46],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovc    , for oc use [$0f,$42],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovc    , for oc use [$0f,$42],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmove    , for oc use [$0f,$44],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmove    , for oc use [$0f,$44],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovg    , for oc use [$0f,$4f],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovg    , for oc use [$0f,$4f],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovge   , for oc use [$0f,$4d],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovge   , for oc use [$0f,$4d],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovl    , for oc use [$0f,$4c],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovl    , for oc use [$0f,$4c],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovle   , for oc use [$0f,$4e],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovle   , for oc use [$0f,$4e],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovna   , for oc use [$0f,$46],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovna   , for oc use [$0f,$46],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovnae  , for oc use [$0f,$42],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovnae  , for oc use [$0f,$42],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovnb   , for oc use [$0f,$43],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovnb   , for oc use [$0f,$43],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovnbe  , for oc use [$0f,$47],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovnbe  , for oc use [$0f,$47],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovnc   , for oc use [$0f,$43],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovnc   , for oc use [$0f,$43],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovne   , for oc use [$0f,$45],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovne   , for oc use [$0f,$45],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovnge  , for oc use [$0f,$4c],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovnge  , for oc use [$0f,$4c],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovnl   , for oc use [$0f,$4d],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovnl   , for oc use [$0f,$4d],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovnle  , for oc use [$0f,$4f],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovnle  , for oc use [$0f,$4f],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovno   , for oc use [$0f,$41],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovno   , for oc use [$0f,$41],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovnp   , for oc use [$0f,$4b],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovnp   , for oc use [$0f,$4b],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovns   , for oc use [$0f,$49],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovns   , for oc use [$0f,$49],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovnz   , for oc use [$0f,$45],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovnz   , for oc use [$0f,$45],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovo    , for oc use [$0f,$40],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovo    , for oc use [$0f,$40],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovp    , for oc use [$0f,$4a],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovp    , for oc use [$0f,$4a],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovpe   , for oc use [$0f,$4a],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovpe   , for oc use [$0f,$4a],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovpo   , for oc use [$0f,$4b],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovpo   , for oc use [$0f,$4b],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovs    , for oc use [$0f,$48],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovs    , for oc use [$0f,$48],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_cmovz    , for oc use [$0f,$44],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmovz    , for oc use [$0f,$44],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_cmp      , for oc use [$3c],        for ex use x_n, for op1 use op_AL      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_cmp      , for oc use [$3d],        for ex use x_n, for op1 use op_AX      , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_cmp      , for oc use [$3d],        for ex use x_n, for op1 use op_EAX     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_cmp      , for oc use [$80],        for ex use x_7, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_cmp      , for oc use [$83],        for ex use x_7, for op1 use op_rm16    , for op2 use op_imm8s   , for op3 use op_null    , for p use $01],
      [for ii use ii_cmp      , for oc use [$83],        for ex use x_7, for op1 use op_rm32    , for op2 use op_imm8s   , for op3 use op_null    , for p use $10],
      [for ii use ii_cmp      , for oc use [$81],        for ex use x_7, for op1 use op_rm16    , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_cmp      , for oc use [$81],        for ex use x_7, for op1 use op_rm32    , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_cmp      , for oc use [$38],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_cmp      , for oc use [$39],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_cmp      , for oc use [$39],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_cmp      , for oc use [$3a],        for ex use x_n, for op1 use op_r8      , for op2 use op_rm8     , for op3 use op_null    , for p use $00],
      [for ii use ii_cmp      , for oc use [$3b],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmp      , for oc use [$3b],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_cmpsb    , for oc use [$a6],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_cmpsw    , for oc use [$a7],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_cmpsd    , for oc use [$a7],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_cmpxchg  , for oc use [$0f,$b0],    for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_cmpxchg  , for oc use [$0f,$b1],    for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_cmpxchg  , for oc use [$0f,$b1],    for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_cmpxchg8b, for oc use [$0f,$c7],    for ex use x_1, for op1 use op_rm64    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_cpuid    , for oc use [$0f,$a2],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_cwd      , for oc use [$99],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_cdq      , for oc use [$99],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_daa      , for oc use [$27],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_das      , for oc use [$2f],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_dec      , for oc use [$48],        for ex use x_r, for op1 use op_r16     , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_dec      , for oc use [$48],        for ex use x_r, for op1 use op_r32     , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_dec      , for oc use [$fe],        for ex use x_1, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_dec      , for oc use [$ff],        for ex use x_1, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_dec      , for oc use [$ff],        for ex use x_1, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_div      , for oc use [$f6],        for ex use x_6, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_div      , for oc use [$f7],        for ex use x_6, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_div      , for oc use [$f7],        for ex use x_6, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_enter    , for oc use [$c8],        for ex use x_n, for op1 use op_imm16   , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_hlt      , for oc use [$f4],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_idiv     , for oc use [$f6],        for ex use x_7, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_idiv     , for oc use [$f7],        for ex use x_7, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_idiv     , for oc use [$f7],        for ex use x_7, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_imul     , for oc use [$f6],        for ex use x_5, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_imul     , for oc use [$f7],        for ex use x_5, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_imul     , for oc use [$f7],        for ex use x_5, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_imul     , for oc use [$0f,$af],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_imul     , for oc use [$0f,$af],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_imul     , for oc use [$6b],        for ex use x_x, for op1 use op_r16     , for op2 use op_imm8s   , for op3 use op_null    , for p use $01],
      [for ii use ii_imul     , for oc use [$6b],        for ex use x_x, for op1 use op_r32     , for op2 use op_imm8s   , for op3 use op_null    , for p use $10],
      [for ii use ii_imul     , for oc use [$69],        for ex use x_x, for op1 use op_r16     , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_imul     , for oc use [$69],        for ex use x_x, for op1 use op_r32     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_imul     , for oc use [$6b],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_imm8s   , for p use $01],
      [for ii use ii_imul     , for oc use [$6b],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_imm8s   , for p use $10],
      [for ii use ii_imul     , for oc use [$69],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_imm16   , for p use $01],
      [for ii use ii_imul     , for oc use [$69],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_imm32   , for p use $10],
                           
      [for ii use ii_in       , for oc use [$e4],        for ex use x_n, for op1 use op_AL      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_in       , for oc use [$e5],        for ex use x_n, for op1 use op_AX      , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_in       , for oc use [$e5],        for ex use x_n, for op1 use op_EAX     , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
      [for ii use ii_in       , for oc use [$ec],        for ex use x_n, for op1 use op_AL      , for op2 use op_DX      , for op3 use op_null    , for p use $00],
      [for ii use ii_in       , for oc use [$ed],        for ex use x_n, for op1 use op_AX      , for op2 use op_DX      , for op3 use op_null    , for p use $01],
      [for ii use ii_in       , for oc use [$ed],        for ex use x_n, for op1 use op_EAX     , for op2 use op_DX      , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_inc      , for oc use [$40],        for ex use x_r, for op1 use op_r16     , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_inc      , for oc use [$40],        for ex use x_r, for op1 use op_r32     , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_inc      , for oc use [$fe],        for ex use x_0, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_inc      , for oc use [$ff],        for ex use x_0, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_inc      , for oc use [$ff],        for ex use x_0, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_insb     , for oc use [$6c],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_insw     , for oc use [$6d],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_insd     , for oc use [$6d],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_int      , for oc use [$cc],        for ex use x_n, for op1 use op_i3      , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_int      , for oc use [$cd],        for ex use x_n, for op1 use op_imm8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_into     , for oc use [$ce],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_invd     , for oc use [$0f,$08],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_invlpg   , for oc use [$0f,$01],    for ex use x_7, for op1 use op_m       , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_iret     , for oc use [$cf],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],{!!}
      [for ii use ii_iretd    , for oc use [$cf],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_ja       , for oc use [$77],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_ja       , for oc use [$0f,$87],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_ja       , for oc use [$0f,$87],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jae      , for oc use [$73],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jae      , for oc use [$0f,$83],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jae      , for oc use [$0f,$83],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jb       , for oc use [$72],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jb       , for oc use [$0f,$82],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jb       , for oc use [$0f,$82],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jbe      , for oc use [$76],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jbe      , for oc use [$0f,$86],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jbe      , for oc use [$0f,$86],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jc       , for oc use [$72],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jc       , for oc use [$0f,$82],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jc       , for oc use [$0f,$82],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_je       , for oc use [$74],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_je       , for oc use [$0f,$84],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_je       , for oc use [$0f,$84],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jg       , for oc use [$7f],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jg       , for oc use [$0f,$8f],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jg       , for oc use [$0f,$8f],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jge      , for oc use [$7d],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jge      , for oc use [$0f,$8d],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jge      , for oc use [$0f,$8d],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jl       , for oc use [$7c],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jl       , for oc use [$0f,$8c],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jl       , for oc use [$0f,$8c],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jle      , for oc use [$7e],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jle      , for oc use [$0f,$8e],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jle      , for oc use [$0f,$8e],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jna      , for oc use [$76],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jna      , for oc use [$0f,$86],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jna      , for oc use [$0f,$86],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jnae     , for oc use [$72],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jnae     , for oc use [$0f,$82],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jnae     , for oc use [$0f,$82],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jnb      , for oc use [$73],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jnb      , for oc use [$0f,$83],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jnb      , for oc use [$0f,$83],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jnbe     , for oc use [$77],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jnbe     , for oc use [$0f,$87],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jnbe     , for oc use [$0f,$87],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jnc      , for oc use [$73],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jnc      , for oc use [$0f,$83],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jnc      , for oc use [$0f,$83],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jne      , for oc use [$75],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jne      , for oc use [$0f,$85],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jne      , for oc use [$0f,$85],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jng      , for oc use [$7e],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jng      , for oc use [$0f,$8e],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jng      , for oc use [$0f,$8e],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jnge     , for oc use [$7c],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jnge     , for oc use [$0f,$8c],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jnge     , for oc use [$0f,$8c],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jnl      , for oc use [$7d],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jnl      , for oc use [$0f,$8d],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jnl      , for oc use [$0f,$8d],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jnle     , for oc use [$7f],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jnle     , for oc use [$0f,$8f],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jnle     , for oc use [$0f,$8f],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jno      , for oc use [$71],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jno      , for oc use [$0f,$81],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jno      , for oc use [$0f,$81],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jnp      , for oc use [$7b],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jnp      , for oc use [$0f,$8b],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jnp      , for oc use [$0f,$8b],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jns      , for oc use [$79],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jns      , for oc use [$0f,$89],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jns      , for oc use [$0f,$89],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jnz      , for oc use [$75],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jnz      , for oc use [$0f,$85],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jnz      , for oc use [$0f,$85],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jo       , for oc use [$70],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jo       , for oc use [$0f,$80],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jo       , for oc use [$0f,$80],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jp       , for oc use [$7a],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jp       , for oc use [$0f,$8a],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jp       , for oc use [$0f,$8a],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jpe      , for oc use [$7a],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jpe      , for oc use [$0f,$8a],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jpe      , for oc use [$0f,$8a],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jpo      , for oc use [$7b],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jpo      , for oc use [$0f,$8b],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jpo      , for oc use [$0f,$8b],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_js       , for oc use [$78],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_js       , for oc use [$0f,$88],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_js       , for oc use [$0f,$88],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jz       , for oc use [$74],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jz       , for oc use [$0f,$84],    for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jz       , for oc use [$0f,$84],    for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jcxz     , for oc use [$e3],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $01],{!!}
      [for ii use ii_jecxz    , for oc use [$e3],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_jmp      , for oc use [$eb],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_jmp      , for oc use [$e9],        for ex use x_n, for op1 use op_rel16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jmp      , for oc use [$ff],        for ex use x_4, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jmp      , for oc use [$ea],        for ex use x_n, for op1 use op_ptr16_16, for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jmp      , for oc use [$ff],        for ex use x_5, for op1 use op_m16_16  , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_jmp      , for oc use [$e9],        for ex use x_n, for op1 use op_rel32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_jmp      , for oc use [$ff],        for ex use x_4, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_jmp      , for oc use [$ea],        for ex use x_n, for op1 use op_ptr16_32, for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_jmp      , for oc use [$ff],        for ex use x_5, for op1 use op_m16_32  , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_lahf     , for oc use [$9f],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_lar      , for oc use [$0f,$02],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_lar      , for oc use [$0f,$02],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_lds      , for oc use [$c5],        for ex use x_n, for op1 use op_r16     , for op2 use op_m16_16  , for op3 use op_null    , for p use $01],
      [for ii use ii_lds      , for oc use [$c5],        for ex use x_n, for op1 use op_r32     , for op2 use op_m16_32  , for op3 use op_null    , for p use $10],
      [for ii use ii_lss      , for oc use [$0f,$b2],    for ex use x_n, for op1 use op_r16     , for op2 use op_m16_16  , for op3 use op_null    , for p use $01],
      [for ii use ii_lss      , for oc use [$0f,$b2],    for ex use x_n, for op1 use op_r32     , for op2 use op_m16_32  , for op3 use op_null    , for p use $10],
      [for ii use ii_les      , for oc use [$c4],        for ex use x_n, for op1 use op_r16     , for op2 use op_m16_16  , for op3 use op_null    , for p use $01],
      [for ii use ii_les      , for oc use [$c4],        for ex use x_n, for op1 use op_r32     , for op2 use op_m16_32  , for op3 use op_null    , for p use $10],
      [for ii use ii_lfs      , for oc use [$0f,$b4],    for ex use x_n, for op1 use op_r16     , for op2 use op_m16_16  , for op3 use op_null    , for p use $01],
      [for ii use ii_lfs      , for oc use [$0f,$b4],    for ex use x_n, for op1 use op_r32     , for op2 use op_m16_32  , for op3 use op_null    , for p use $10],
      [for ii use ii_lgs      , for oc use [$0f,$b5],    for ex use x_n, for op1 use op_r16     , for op2 use op_m16_16  , for op3 use op_null    , for p use $01],
      [for ii use ii_lgs      , for oc use [$0f,$b5],    for ex use x_n, for op1 use op_r32     , for op2 use op_m16_32  , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_lea      , for oc use [$8d],        for ex use x_n, for op1 use op_r16     , for op2 use op_m       , for op3 use op_null    , for p use $01],
      [for ii use ii_lea      , for oc use [$8d],        for ex use x_n, for op1 use op_r32     , for op2 use op_m       , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_leave    , for oc use [$c9],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_lgdt     , for oc use [$0f,$01],    for ex use x_2, for op1 use op_m16a32  , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_lidt     , for oc use [$0f,$01],    for ex use x_3, for op1 use op_m16a32  , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_lldt     , for oc use [$0f,$00],    for ex use x_2, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_lmsw     , for oc use [$0f,$01],    for ex use x_6, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_lodsb    , for oc use [$ac],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_lodsw    , for oc use [$ad],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_lodsd    , for oc use [$ad],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_loop     , for oc use [$e2],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_loope    , for oc use [$e1],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_loopz    , for oc use [$e1],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_loopne   , for oc use [$e0],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_loopnz   , for oc use [$e0],        for ex use x_n, for op1 use op_rel8    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_lsl      , for oc use [$0f,$03],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_lsl      , for oc use [$0f,$03],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_ltr      , for oc use [$0f,$00],    for ex use x_3, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_mov      , for oc use [$a0],        for ex use x_n, for op1 use op_AL      , for op2 use op_moffs8  , for op3 use op_null    , for p use $00],
      [for ii use ii_mov      , for oc use [$a1],        for ex use x_n, for op1 use op_AX      , for op2 use op_moffs16 , for op3 use op_null    , for p use $01],
      [for ii use ii_mov      , for oc use [$a1],        for ex use x_n, for op1 use op_EAX     , for op2 use op_moffs32 , for op3 use op_null    , for p use $10],
      [for ii use ii_mov      , for oc use [$a2],        for ex use x_n, for op1 use op_moffs8  , for op2 use op_AL      , for op3 use op_null    , for p use $00],
      [for ii use ii_mov      , for oc use [$a3],        for ex use x_n, for op1 use op_moffs16 , for op2 use op_AX      , for op3 use op_null    , for p use $01],
      [for ii use ii_mov      , for oc use [$a3],        for ex use x_n, for op1 use op_moffs32 , for op2 use op_EAX     , for op3 use op_null    , for p use $10],
      [for ii use ii_mov      , for oc use [$88],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_mov      , for oc use [$89],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_mov      , for oc use [$89],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_mov      , for oc use [$8a],        for ex use x_n, for op1 use op_r8      , for op2 use op_rm8     , for op3 use op_null    , for p use $00],
      [for ii use ii_mov      , for oc use [$8b],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_mov      , for oc use [$8b],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      [for ii use ii_mov      , for oc use [$b0],        for ex use x_r, for op1 use op_r8      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_mov      , for oc use [$b8],        for ex use x_r, for op1 use op_r16     , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_mov      , for oc use [$b8],        for ex use x_r, for op1 use op_r32     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_mov      , for oc use [$c6],        for ex use x_0, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_mov      , for oc use [$c7],        for ex use x_0, for op1 use op_rm16    , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_mov      , for oc use [$c7],        for ex use x_0, for op1 use op_rm32    , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_mov      , for oc use [$8c],        for ex use x_n, for op1 use op_rm16    , for op2 use op_sreg    , for op3 use op_null    , for p use $01],
      [for ii use ii_mov      , for oc use [$8e],        for ex use x_n, for op1 use op_sreg    , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
                           
      [for ii use ii_mov      , for oc use [$0f,$22],    for ex use x_n, for op1 use op_CRi     , for op2 use op_r32     , for op3 use op_null    , for p use $00],
      [for ii use ii_mov      , for oc use [$0f,$20],    for ex use x_n, for op1 use op_r32     , for op2 use op_CRi     , for op3 use op_null    , for p use $00],
      [for ii use ii_mov      , for oc use [$0f,$23],    for ex use x_n, for op1 use op_DRi     , for op2 use op_r32     , for op3 use op_null    , for p use $00],
      [for ii use ii_mov      , for oc use [$0f,$21],    for ex use x_n, for op1 use op_r32     , for op2 use op_DRi     , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_movsb    , for oc use [$a4],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_movsw    , for oc use [$a5],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_movsd    , for oc use [$a5],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_movsx    , for oc use [$0f,$be],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm8     , for op3 use op_null    , for p use $01],
      [for ii use ii_movsx    , for oc use [$0f,$be],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm8     , for op3 use op_null    , for p use $10],
      [for ii use ii_movsx    , for oc use [$0f,$bf],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm16    , for op3 use op_null    , for p use $00],{!!}
      [for ii use ii_movzx    , for oc use [$0f,$b6],    for ex use x_n, for op1 use op_r16     , for op2 use op_rm8     , for op3 use op_null    , for p use $01],
      [for ii use ii_movzx    , for oc use [$0f,$b6],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm8     , for op3 use op_null    , for p use $10],
      [for ii use ii_movzx    , for oc use [$0f,$b7],    for ex use x_n, for op1 use op_r32     , for op2 use op_rm16    , for op3 use op_null    , for p use $00],{!!}
                           
      [for ii use ii_mul      , for oc use [$f6],        for ex use x_4, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_mul      , for oc use [$f7],        for ex use x_4, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_mul      , for oc use [$f7],        for ex use x_4, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_neg      , for oc use [$f6],        for ex use x_3, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_neg      , for oc use [$f7],        for ex use x_3, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_neg      , for oc use [$f7],        for ex use x_3, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_nop      , for oc use [$90],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_not      , for oc use [$f6],        for ex use x_2, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_not      , for oc use [$f7],        for ex use x_2, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_not      , for oc use [$f7],        for ex use x_2, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_or       , for oc use [$0c],        for ex use x_n, for op1 use op_AL      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_or       , for oc use [$0d],        for ex use x_n, for op1 use op_AX      , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_or       , for oc use [$0d],        for ex use x_n, for op1 use op_EAX     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_or       , for oc use [$80],        for ex use x_1, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_or       , for oc use [$83],        for ex use x_1, for op1 use op_rm16    , for op2 use op_imm8s   , for op3 use op_null    , for p use $01],
      [for ii use ii_or       , for oc use [$83],        for ex use x_1, for op1 use op_rm32    , for op2 use op_imm8s   , for op3 use op_null    , for p use $10],
      [for ii use ii_or       , for oc use [$81],        for ex use x_1, for op1 use op_rm16    , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_or       , for oc use [$81],        for ex use x_1, for op1 use op_rm32    , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_or       , for oc use [$08],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_or       , for oc use [$09],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_or       , for oc use [$09],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_or       , for oc use [$0a],        for ex use x_n, for op1 use op_r8      , for op2 use op_rm8     , for op3 use op_null    , for p use $00],
      [for ii use ii_or       , for oc use [$0b],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_or       , for oc use [$0b],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_out      , for oc use [$e6],        for ex use x_n, for op1 use op_imm8    , for op2 use op_AL      , for op3 use op_null    , for p use $00],
      [for ii use ii_out      , for oc use [$e7],        for ex use x_n, for op1 use op_imm8    , for op2 use op_AX      , for op3 use op_null    , for p use $01],
      [for ii use ii_out      , for oc use [$e7],        for ex use x_n, for op1 use op_imm8    , for op2 use op_EAX     , for op3 use op_null    , for p use $10],
      [for ii use ii_out      , for oc use [$ee],        for ex use x_n, for op1 use op_DX      , for op2 use op_AL      , for op3 use op_null    , for p use $00],
      [for ii use ii_out      , for oc use [$ef],        for ex use x_n, for op1 use op_DX      , for op2 use op_AX      , for op3 use op_null    , for p use $01],
      [for ii use ii_out      , for oc use [$ef],        for ex use x_n, for op1 use op_DX      , for op2 use op_EAX     , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_outsb    , for oc use [$6e],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_outsw    , for oc use [$6f],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_outsd    , for oc use [$6f],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],

      [for ii use ii_pause    , for oc use [$F3,$90],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                          
      [for ii use ii_pop      , for oc use [$8f],        for ex use x_0, for op1 use op_m16     , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_pop      , for oc use [$8f],        for ex use x_0, for op1 use op_m32     , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_pop      , for oc use [$58],        for ex use x_r, for op1 use op_r16     , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_pop      , for oc use [$58],        for ex use x_r, for op1 use op_r32     , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_pop      , for oc use [$1f],        for ex use x_n, for op1 use op_DS      , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_pop      , for oc use [$07],        for ex use x_n, for op1 use op_ES      , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_pop      , for oc use [$17],        for ex use x_n, for op1 use op_SS      , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_pop      , for oc use [$0f,$a1],    for ex use x_n, for op1 use op_FS      , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_pop      , for oc use [$0f,$a9],    for ex use x_n, for op1 use op_GS      , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_popa     , for oc use [$61],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_popad    , for oc use [$61],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_popf     , for oc use [$9d],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_popfd    , for oc use [$9d],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_push     , for oc use [$50],        for ex use x_r, for op1 use op_r16     , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_push     , for oc use [$50],        for ex use x_r, for op1 use op_r32     , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_push     , for oc use [$ff],        for ex use x_6, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_push     , for oc use [$ff],        for ex use x_6, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_push     , for oc use [$6a],        for ex use x_n, for op1 use op_imm8    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_push     , for oc use [$68],        for ex use x_n, for op1 use op_imm16   , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_push     , for oc use [$68],        for ex use x_n, for op1 use op_imm32   , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_push     , for oc use [$0e],        for ex use x_n, for op1 use op_CS      , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_push     , for oc use [$16],        for ex use x_n, for op1 use op_SS      , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_push     , for oc use [$1e],        for ex use x_n, for op1 use op_DS      , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_push     , for oc use [$06],        for ex use x_n, for op1 use op_ES      , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_push     , for oc use [$0f,$a0],    for ex use x_n, for op1 use op_FS      , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_push     , for oc use [$0f,$a8],    for ex use x_n, for op1 use op_GS      , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_pusha    , for oc use [$60],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_pushad   , for oc use [$60],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_pushf    , for oc use [$9c],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_pushfd   , for oc use [$9c],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_rcl      , for oc use [$d0],        for ex use x_2, for op1 use op_rm8     , for op2 use op_i1      , for op3 use op_null    , for p use $00],
      [for ii use ii_rcl      , for oc use [$d2],        for ex use x_2, for op1 use op_rm8     , for op2 use op_CL      , for op3 use op_null    , for p use $00],
      [for ii use ii_rcl      , for oc use [$c0],        for ex use x_2, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_rcl      , for oc use [$d1],        for ex use x_2, for op1 use op_rm16    , for op2 use op_i1      , for op3 use op_null    , for p use $01],
      [for ii use ii_rcl      , for oc use [$d3],        for ex use x_2, for op1 use op_rm16    , for op2 use op_CL      , for op3 use op_null    , for p use $01],
      [for ii use ii_rcl      , for oc use [$c1],        for ex use x_2, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_rcl      , for oc use [$d1],        for ex use x_2, for op1 use op_rm32    , for op2 use op_i1      , for op3 use op_null    , for p use $10],
      [for ii use ii_rcl      , for oc use [$d3],        for ex use x_2, for op1 use op_rm32    , for op2 use op_CL      , for op3 use op_null    , for p use $10],
      [for ii use ii_rcl      , for oc use [$c1],        for ex use x_2, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_rcr      , for oc use [$d0],        for ex use x_3, for op1 use op_rm8     , for op2 use op_i1      , for op3 use op_null    , for p use $00],
      [for ii use ii_rcr      , for oc use [$d2],        for ex use x_3, for op1 use op_rm8     , for op2 use op_CL      , for op3 use op_null    , for p use $00],
      [for ii use ii_rcr      , for oc use [$c0],        for ex use x_3, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_rcr      , for oc use [$d1],        for ex use x_3, for op1 use op_rm16    , for op2 use op_i1      , for op3 use op_null    , for p use $01],
      [for ii use ii_rcr      , for oc use [$d3],        for ex use x_3, for op1 use op_rm16    , for op2 use op_CL      , for op3 use op_null    , for p use $01],
      [for ii use ii_rcr      , for oc use [$c1],        for ex use x_3, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_rcr      , for oc use [$d1],        for ex use x_3, for op1 use op_rm32    , for op2 use op_i1      , for op3 use op_null    , for p use $10],
      [for ii use ii_rcr      , for oc use [$d3],        for ex use x_3, for op1 use op_rm32    , for op2 use op_CL      , for op3 use op_null    , for p use $10],
      [for ii use ii_rcr      , for oc use [$c1],        for ex use x_3, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_rol      , for oc use [$d0],        for ex use x_0, for op1 use op_rm8     , for op2 use op_i1      , for op3 use op_null    , for p use $00],
      [for ii use ii_rol      , for oc use [$d2],        for ex use x_0, for op1 use op_rm8     , for op2 use op_CL      , for op3 use op_null    , for p use $00],
      [for ii use ii_rol      , for oc use [$c0],        for ex use x_0, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_rol      , for oc use [$d1],        for ex use x_0, for op1 use op_rm16    , for op2 use op_i1      , for op3 use op_null    , for p use $01],
      [for ii use ii_rol      , for oc use [$d3],        for ex use x_0, for op1 use op_rm16    , for op2 use op_CL      , for op3 use op_null    , for p use $01],
      [for ii use ii_rol      , for oc use [$c1],        for ex use x_0, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_rol      , for oc use [$d1],        for ex use x_0, for op1 use op_rm32    , for op2 use op_i1      , for op3 use op_null    , for p use $10],
      [for ii use ii_rol      , for oc use [$d3],        for ex use x_0, for op1 use op_rm32    , for op2 use op_CL      , for op3 use op_null    , for p use $10],
      [for ii use ii_rol      , for oc use [$c1],        for ex use x_0, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_ror      , for oc use [$d0],        for ex use x_1, for op1 use op_rm8     , for op2 use op_i1      , for op3 use op_null    , for p use $00],
      [for ii use ii_ror      , for oc use [$d2],        for ex use x_1, for op1 use op_rm8     , for op2 use op_CL      , for op3 use op_null    , for p use $00],
      [for ii use ii_ror      , for oc use [$c0],        for ex use x_1, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_ror      , for oc use [$d1],        for ex use x_1, for op1 use op_rm16    , for op2 use op_i1      , for op3 use op_null    , for p use $01],
      [for ii use ii_ror      , for oc use [$d3],        for ex use x_1, for op1 use op_rm16    , for op2 use op_CL      , for op3 use op_null    , for p use $01],
      [for ii use ii_ror      , for oc use [$c1],        for ex use x_1, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_ror      , for oc use [$d1],        for ex use x_1, for op1 use op_rm32    , for op2 use op_i1      , for op3 use op_null    , for p use $10],
      [for ii use ii_ror      , for oc use [$d3],        for ex use x_1, for op1 use op_rm32    , for op2 use op_CL      , for op3 use op_null    , for p use $10],
      [for ii use ii_ror      , for oc use [$c1],        for ex use x_1, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_rdmsr    , for oc use [$0f,$32],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_rdtsc    , for oc use [$0f,$31],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_ret      , for oc use [$c3],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_ret      , for oc use [$c2],        for ex use x_n, for op1 use op_imm16   , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_retf     , for oc use [$cb],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_retf     , for oc use [$ca],        for ex use x_n, for op1 use op_imm16   , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_rsm      , for oc use [$0f,$aa],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_sahf     , for oc use [$9e],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_sal      , for oc use [$d0],        for ex use x_4, for op1 use op_rm8     , for op2 use op_i1      , for op3 use op_null    , for p use $00],
      [for ii use ii_sal      , for oc use [$d2],        for ex use x_4, for op1 use op_rm8     , for op2 use op_CL      , for op3 use op_null    , for p use $00],
      [for ii use ii_sal      , for oc use [$c0],        for ex use x_4, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_sal      , for oc use [$d1],        for ex use x_4, for op1 use op_rm16    , for op2 use op_i1      , for op3 use op_null    , for p use $01],
      [for ii use ii_sal      , for oc use [$d3],        for ex use x_4, for op1 use op_rm16    , for op2 use op_CL      , for op3 use op_null    , for p use $01],
      [for ii use ii_sal      , for oc use [$c1],        for ex use x_4, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_sal      , for oc use [$d1],        for ex use x_4, for op1 use op_rm32    , for op2 use op_i1      , for op3 use op_null    , for p use $10],
      [for ii use ii_sal      , for oc use [$d3],        for ex use x_4, for op1 use op_rm32    , for op2 use op_CL      , for op3 use op_null    , for p use $10],
      [for ii use ii_sal      , for oc use [$c1],        for ex use x_4, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_sar      , for oc use [$d0],        for ex use x_7, for op1 use op_rm8     , for op2 use op_i1      , for op3 use op_null    , for p use $00],
      [for ii use ii_sar      , for oc use [$d2],        for ex use x_7, for op1 use op_rm8     , for op2 use op_CL      , for op3 use op_null    , for p use $00],
      [for ii use ii_sar      , for oc use [$c0],        for ex use x_7, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_sar      , for oc use [$d1],        for ex use x_7, for op1 use op_rm16    , for op2 use op_i1      , for op3 use op_null    , for p use $01],
      [for ii use ii_sar      , for oc use [$d3],        for ex use x_7, for op1 use op_rm16    , for op2 use op_CL      , for op3 use op_null    , for p use $01],
      [for ii use ii_sar      , for oc use [$c1],        for ex use x_7, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_sar      , for oc use [$d1],        for ex use x_7, for op1 use op_rm32    , for op2 use op_i1      , for op3 use op_null    , for p use $10],
      [for ii use ii_sar      , for oc use [$d3],        for ex use x_7, for op1 use op_rm32    , for op2 use op_CL      , for op3 use op_null    , for p use $10],
      [for ii use ii_sar      , for oc use [$c1],        for ex use x_7, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_shl      , for oc use [$d0],        for ex use x_4, for op1 use op_rm8     , for op2 use op_i1      , for op3 use op_null    , for p use $00],
      [for ii use ii_shl      , for oc use [$d2],        for ex use x_4, for op1 use op_rm8     , for op2 use op_CL      , for op3 use op_null    , for p use $00],
      [for ii use ii_shl      , for oc use [$c0],        for ex use x_4, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_shl      , for oc use [$d1],        for ex use x_4, for op1 use op_rm16    , for op2 use op_i1      , for op3 use op_null    , for p use $01],
      [for ii use ii_shl      , for oc use [$d3],        for ex use x_4, for op1 use op_rm16    , for op2 use op_CL      , for op3 use op_null    , for p use $01],
      [for ii use ii_shl      , for oc use [$c1],        for ex use x_4, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_shl      , for oc use [$d1],        for ex use x_4, for op1 use op_rm32    , for op2 use op_i1      , for op3 use op_null    , for p use $10],
      [for ii use ii_shl      , for oc use [$d3],        for ex use x_4, for op1 use op_rm32    , for op2 use op_CL      , for op3 use op_null    , for p use $10],
      [for ii use ii_shl      , for oc use [$c1],        for ex use x_4, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_shr      , for oc use [$d0],        for ex use x_5, for op1 use op_rm8     , for op2 use op_i1      , for op3 use op_null    , for p use $00],
      [for ii use ii_shr      , for oc use [$d2],        for ex use x_5, for op1 use op_rm8     , for op2 use op_CL      , for op3 use op_null    , for p use $00],
      [for ii use ii_shr      , for oc use [$c0],        for ex use x_5, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_shr      , for oc use [$d1],        for ex use x_5, for op1 use op_rm16    , for op2 use op_i1      , for op3 use op_null    , for p use $01],
      [for ii use ii_shr      , for oc use [$d3],        for ex use x_5, for op1 use op_rm16    , for op2 use op_CL      , for op3 use op_null    , for p use $01],
      [for ii use ii_shr      , for oc use [$c1],        for ex use x_5, for op1 use op_rm16    , for op2 use op_imm8    , for op3 use op_null    , for p use $01],
      [for ii use ii_shr      , for oc use [$d1],        for ex use x_5, for op1 use op_rm32    , for op2 use op_i1      , for op3 use op_null    , for p use $10],
      [for ii use ii_shr      , for oc use [$d3],        for ex use x_5, for op1 use op_rm32    , for op2 use op_CL      , for op3 use op_null    , for p use $10],
      [for ii use ii_shr      , for oc use [$c1],        for ex use x_5, for op1 use op_rm32    , for op2 use op_imm8    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_sbb      , for oc use [$1c],        for ex use x_n, for op1 use op_AL      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_sbb      , for oc use [$1d],        for ex use x_n, for op1 use op_AX      , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_sbb      , for oc use [$1d],        for ex use x_n, for op1 use op_EAX     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_sbb      , for oc use [$80],        for ex use x_3, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_sbb      , for oc use [$83],        for ex use x_3, for op1 use op_rm16    , for op2 use op_imm8s   , for op3 use op_null    , for p use $01],
      [for ii use ii_sbb      , for oc use [$83],        for ex use x_3, for op1 use op_rm32    , for op2 use op_imm8s   , for op3 use op_null    , for p use $10],
      [for ii use ii_sbb      , for oc use [$81],        for ex use x_3, for op1 use op_rm16    , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_sbb      , for oc use [$81],        for ex use x_3, for op1 use op_rm32    , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_sbb      , for oc use [$18],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_sbb      , for oc use [$19],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_sbb      , for oc use [$19],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_sbb      , for oc use [$1a],        for ex use x_n, for op1 use op_r8      , for op2 use op_rm8     , for op3 use op_null    , for p use $00],
      [for ii use ii_sbb      , for oc use [$1b],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_sbb      , for oc use [$1b],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_scasb    , for oc use [$ae],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_scasw    , for oc use [$af],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_scasd    , for oc use [$af],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_seta     , for oc use [$0f,$97],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setae    , for oc use [$0f,$93],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setb     , for oc use [$0f,$92],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setbe    , for oc use [$0f,$96],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setc     , for oc use [$0f,$92],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_sete     , for oc use [$0f,$94],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setg     , for oc use [$0f,$9f],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setge    , for oc use [$0f,$9d],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setl     , for oc use [$0f,$9c],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setle    , for oc use [$0f,$9e],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setna    , for oc use [$0f,$96],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setnae   , for oc use [$0f,$92],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setnb    , for oc use [$0f,$93],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setnbe   , for oc use [$0f,$97],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setnc    , for oc use [$0f,$93],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setne    , for oc use [$0f,$95],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setng    , for oc use [$0f,$9e],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setnge   , for oc use [$0f,$9c],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setnl    , for oc use [$0f,$9d],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setnle   , for oc use [$0f,$9f],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setno    , for oc use [$0f,$91],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setnp    , for oc use [$0f,$9b],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setns    , for oc use [$0f,$99],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setnz    , for oc use [$0f,$95],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_seto     , for oc use [$0f,$90],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setp     , for oc use [$0f,$9a],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setpe    , for oc use [$0f,$9a],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setpo    , for oc use [$0f,$9b],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_sets     , for oc use [$0f,$98],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_setz     , for oc use [$0f,$94],    for ex use x_n, for op1 use op_rm8     , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_sgdt     , for oc use [$0f,$01],    for ex use x_0, for op1 use op_m       , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_sidt     , for oc use [$0f,$01],    for ex use x_1, for op1 use op_m       , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_shld     , for oc use [$0f,$a4],    for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_imm8    , for p use $01],
      [for ii use ii_shld     , for oc use [$0f,$a4],    for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_imm8    , for p use $10],
      [for ii use ii_shld     , for oc use [$0f,$a5],    for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_CL      , for p use $01],
      [for ii use ii_shld     , for oc use [$0f,$a5],    for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_CL      , for p use $10],
                           
      [for ii use ii_shrd     , for oc use [$0f,$ac],    for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_imm8    , for p use $01],
      [for ii use ii_shrd     , for oc use [$0f,$ac],    for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_imm8    , for p use $10],
      [for ii use ii_shrd     , for oc use [$0f,$ad],    for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_CL      , for p use $01],
      [for ii use ii_shrd     , for oc use [$0f,$ad],    for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_CL      , for p use $10],
                           
      [for ii use ii_sldt     , for oc use [$0f,$00],    for ex use x_0, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_sldt     , for oc use [$0f,$00],    for ex use x_0, for op1 use op_rm32    , for op2 use op_null    , for op3 use op_null    , for p use $10],
      [for ii use ii_smsw     , for oc use [$0f,$01],    for ex use x_4, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_stc      , for oc use [$f9],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_std      , for oc use [$fd],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_sti      , for oc use [$fb],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_stosb    , for oc use [$aa],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_stosw    , for oc use [$ab],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $01],
      [for ii use ii_stosd    , for oc use [$ab],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_str      , for oc use [$0f,$00],    for ex use x_1, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_sub      , for oc use [$2c],        for ex use x_n, for op1 use op_AL      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_sub      , for oc use [$2d],        for ex use x_n, for op1 use op_AX      , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_sub      , for oc use [$2d],        for ex use x_n, for op1 use op_EAX     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_sub      , for oc use [$80],        for ex use x_5, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_sub      , for oc use [$83],        for ex use x_5, for op1 use op_rm16    , for op2 use op_imm8s   , for op3 use op_null    , for p use $01],
      [for ii use ii_sub      , for oc use [$83],        for ex use x_5, for op1 use op_rm32    , for op2 use op_imm8s   , for op3 use op_null    , for p use $10],
      [for ii use ii_sub      , for oc use [$81],        for ex use x_5, for op1 use op_rm16    , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_sub      , for oc use [$81],        for ex use x_5, for op1 use op_rm32    , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_sub      , for oc use [$28],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_sub      , for oc use [$29],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_sub      , for oc use [$29],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_sub      , for oc use [$2a],        for ex use x_n, for op1 use op_r8      , for op2 use op_rm8     , for op3 use op_null    , for p use $00],
      [for ii use ii_sub      , for oc use [$2b],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_sub      , for oc use [$2b],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_test     , for oc use [$a8],        for ex use x_n, for op1 use op_AL      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_test     , for oc use [$a9],        for ex use x_n, for op1 use op_AX      , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_test     , for oc use [$a9],        for ex use x_n, for op1 use op_EAX     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_test     , for oc use [$f6],        for ex use x_0, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_test     , for oc use [$f7],        for ex use x_0, for op1 use op_rm16    , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_test     , for oc use [$f7],        for ex use x_0, for op1 use op_rm32    , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_test     , for oc use [$84],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_test     , for oc use [$85],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_test     , for oc use [$85],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_verr     , for oc use [$0f,$00],    for ex use x_4, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_verw     , for oc use [$0f,$00],    for ex use x_5, for op1 use op_rm16    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_wait     , for oc use [$9b],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_wbinvd   , for oc use [$0f,$09],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_wrmsr    , for oc use [$0f,$30],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_xadd     , for oc use [$0f,$c0],    for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_xadd     , for oc use [$0f,$c1],    for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_xadd     , for oc use [$0f,$c1],    for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_xchg     , for oc use [$90],        for ex use x_r, for op1 use op_AX      , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_xchg     , for oc use [$90],        for ex use x_r, for op1 use op_r16     , for op2 use op_AX      , for op3 use op_null    , for p use $01],
      [for ii use ii_xchg     , for oc use [$90],        for ex use x_r, for op1 use op_EAX     , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_xchg     , for oc use [$90],        for ex use x_r, for op1 use op_r32     , for op2 use op_EAX     , for op3 use op_null    , for p use $10],
      [for ii use ii_xchg     , for oc use [$86],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_xchg     , for oc use [$86],        for ex use x_n, for op1 use op_r8      , for op2 use op_rm8     , for op3 use op_null    , for p use $00],
      [for ii use ii_xchg     , for oc use [$87],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_xchg     , for oc use [$87],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_xchg     , for oc use [$87],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_xchg     , for oc use [$87],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
                           
      [for ii use ii_xlatb    , for oc use [$d7],        for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
                           
      [for ii use ii_xor      , for oc use [$34],        for ex use x_n, for op1 use op_AL      , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_xor      , for oc use [$35],        for ex use x_n, for op1 use op_AX      , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_xor      , for oc use [$35],        for ex use x_n, for op1 use op_EAX     , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_xor      , for oc use [$80],        for ex use x_6, for op1 use op_rm8     , for op2 use op_imm8    , for op3 use op_null    , for p use $00],
      [for ii use ii_xor      , for oc use [$83],        for ex use x_6, for op1 use op_rm16    , for op2 use op_imm8s   , for op3 use op_null    , for p use $01],
      [for ii use ii_xor      , for oc use [$83],        for ex use x_6, for op1 use op_rm32    , for op2 use op_imm8s   , for op3 use op_null    , for p use $10],
      [for ii use ii_xor      , for oc use [$81],        for ex use x_6, for op1 use op_rm16    , for op2 use op_imm16   , for op3 use op_null    , for p use $01],
      [for ii use ii_xor      , for oc use [$81],        for ex use x_6, for op1 use op_rm32    , for op2 use op_imm32   , for op3 use op_null    , for p use $10],
      [for ii use ii_xor      , for oc use [$30],        for ex use x_n, for op1 use op_rm8     , for op2 use op_r8      , for op3 use op_null    , for p use $00],
      [for ii use ii_xor      , for oc use [$31],        for ex use x_n, for op1 use op_rm16    , for op2 use op_r16     , for op3 use op_null    , for p use $01],
      [for ii use ii_xor      , for oc use [$31],        for ex use x_n, for op1 use op_rm32    , for op2 use op_r32     , for op3 use op_null    , for p use $10],
      [for ii use ii_xor      , for oc use [$32],        for ex use x_n, for op1 use op_r8      , for op2 use op_rm8     , for op3 use op_null    , for p use $00],
      [for ii use ii_xor      , for oc use [$33],        for ex use x_n, for op1 use op_r16     , for op2 use op_rm16    , for op3 use op_null    , for p use $01],
      [for ii use ii_xor      , for oc use [$33],        for ex use x_n, for op1 use op_r32     , for op2 use op_rm32    , for op3 use op_null    , for p use $10],
      
      --- FPU instrukce ---
      [for ii use ii_fadd     , for oc use [$D8],        for ex use x_n, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fadd     , for oc use [$DC],        for ex use x_n, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fadd     , for oc use [$D8,$C0],    for ex use x_i, for op1 use op_ST0     , for op2 use op_STi     , for op3 use op_null    , for p use $00],
      [for ii use ii_fadd     , for oc use [$DC,$C0],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],

      [for ii use ii_faddp    , for oc use [$DE,$C0],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],
      [for ii use ii_faddp    , for oc use [$DE,$C1],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fiadd    , for oc use [$DA],        for ex use x_n, for op1 use op_m32int  , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fiadd    , for oc use [$DE],        for ex use x_n, for op1 use op_m16int  , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fsub     , for oc use [$D8],        for ex use x_4, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fsub     , for oc use [$DC],        for ex use x_4, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fsub     , for oc use [$D8,$E0],    for ex use x_i, for op1 use op_ST0     , for op2 use op_STi     , for op3 use op_null    , for p use $00],
      [for ii use ii_fsub     , for oc use [$DC,$E8],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],
      
      [for ii use ii_fsubp    , for oc use [$DE,$E8],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],
      [for ii use ii_fsubp    , for oc use [$DE,$E9],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      
      [for ii use ii_fisub    , for oc use [$DA],        for ex use x_4, for op1 use op_m32int  , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fisub    , for oc use [$DE],        for ex use x_4, for op1 use op_m16int  , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fsubr    , for oc use [$D8],        for ex use x_5, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fsubr    , for oc use [$DC],        for ex use x_5, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fsubr    , for oc use [$D8,$E8],    for ex use x_i, for op1 use op_ST0     , for op2 use op_STi     , for op3 use op_null    , for p use $00],
      [for ii use ii_fsubr    , for oc use [$DC,$E0],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],
      
      [for ii use ii_fsubrp   , for oc use [$DE,$E0],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],
      [for ii use ii_fsubrp   , for oc use [$DE,$E1],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      
      [for ii use ii_fisubr   , for oc use [$DA],        for ex use x_5, for op1 use op_m32int  , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fisubr   , for oc use [$DE],        for ex use x_5, for op1 use op_m16int  , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fmul     , for oc use [$D8],        for ex use x_1, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fmul     , for oc use [$DC],        for ex use x_1, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fmul     , for oc use [$D8,$C8],    for ex use x_i, for op1 use op_ST0     , for op2 use op_STi     , for op3 use op_null    , for p use $00],
      [for ii use ii_fmul     , for oc use [$DC,$C8],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],
      
      [for ii use ii_fmulp    , for oc use [$DE,$C8],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],
      [for ii use ii_fmulp    , for oc use [$DE,$C9],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      
      [for ii use ii_fimul    , for oc use [$DA],        for ex use x_1, for op1 use op_m32int  , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fimul    , for oc use [$DE],        for ex use x_1, for op1 use op_m16int  , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fdiv     , for oc use [$D8],        for ex use x_6, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fdiv     , for oc use [$DC],        for ex use x_6, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fdiv     , for oc use [$D8,$F0],    for ex use x_i, for op1 use op_ST0     , for op2 use op_STi     , for op3 use op_null    , for p use $00],
      [for ii use ii_fdiv     , for oc use [$DC,$F8],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],

      [for ii use ii_fdivp    , for oc use [$DE,$F8],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],
      [for ii use ii_fdivp    , for oc use [$DE,$F9],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fidiv    , for oc use [$DA],        for ex use x_6, for op1 use op_m32int  , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fidiv    , for oc use [$DE],        for ex use x_6, for op1 use op_m16int  , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fdivr    , for oc use [$D8],        for ex use x_7, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fdivr    , for oc use [$DC],        for ex use x_7, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fdivr    , for oc use [$D8,$F8],    for ex use x_i, for op1 use op_ST0     , for op2 use op_STi     , for op3 use op_null    , for p use $00],
      [for ii use ii_fdivr    , for oc use [$DC,$F0],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],

      [for ii use ii_fdivrp   , for oc use [$DE,$F0],    for ex use x_i, for op1 use op_STi     , for op2 use op_ST0     , for op3 use op_null    , for p use $00],
      [for ii use ii_fdivrp   , for oc use [$DE,$F1],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fidivr   , for oc use [$DA],        for ex use x_7, for op1 use op_m32int  , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fidivr   , for oc use [$DE],        for ex use x_7, for op1 use op_m16int  , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fldcw    , for oc use [$D9],        for ex use x_5, for op1 use op_m2byte  , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fstcw    , for oc use [$9B,$D9],    for ex use x_7, for op1 use op_m2byte  , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fnstcw   , for oc use [$D9],        for ex use x_7, for op1 use op_m2byte  , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fstsw    , for oc use [$98,$DD],    for ex use x_7, for op1 use op_m2byte  , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fstsw    , for oc use [$9B,$DF,$E0],for ex use x_n, for op1 use op_AX      , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fnstsw   , for oc use [$DD],        for ex use x_7, for op1 use op_m2byte  , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fnstsw   , for oc use [$DF,$E0],    for ex use x_n, for op1 use op_AX      , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_finit    , for oc use [$9B,$DB,$E3],for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fninit   , for oc use [$DB,$E3],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fclex    , for oc use [$9B,$DB,$E2],for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fnclex   , for oc use [$DB,$E2],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],


      [for ii use ii_fabs     , for oc use [$D9,$E1],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fchs     , for oc use [$D9,$E1],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_f2xm1    , for oc use [$D9,$F0],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fcos     , for oc use [$D9,$FF],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fdecstp  , for oc use [$D9,$F6],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fincstp  , for oc use [$D9,$F7],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fld1     , for oc use [$D9,$E8],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fldl2t   , for oc use [$D9,$E9],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fldl2e   , for oc use [$D9,$EA],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fldpi    , for oc use [$D9,$EB],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_flflg2   , for oc use [$D9,$EC],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fldln2   , for oc use [$D9,$ED],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fldz     , for oc use [$D9,$EE],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fnop     , for oc use [$D9,$D0],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fpatan   , for oc use [$D9,$F3],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fprem    , for oc use [$D9,$F8],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fprem1   , for oc use [$D9,$F5],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fptan    , for oc use [$D9,$F2],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_frndint  , for oc use [$D9,$FC],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fscale   , for oc use [$D9,$FD],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fsin     , for oc use [$D9,$FE],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fsincos  , for oc use [$D9,$FB],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fsqrt    , for oc use [$D9,$FA],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_ftst     , for oc use [$D9,$E4],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fxam     , for oc use [$D9,$E5],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fxtract  , for oc use [$D9,$F4],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fyl2x    , for oc use [$D9,$F1],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fyl2xp1  , for oc use [$D9,$F9],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fcom     , for oc use [$D8],        for ex use x_2, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fcom     , for oc use [$DC],        for ex use x_2, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fcom     , for oc use [$D8,$D0],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fcom     , for oc use [$D8,$D1],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fcomp    , for oc use [$D8],        for ex use x_3, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fcomp    , for oc use [$DC],        for ex use x_3, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fcomp    , for oc use [$D8,$D8],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fcomp    , for oc use [$D8,$D9],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fcompp   , for oc use [$DE,$D9],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fcomi    , for oc use [$DB,$F0],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fcomip   , for oc use [$DF,$F0],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fucomi   , for oc use [$DB,$EB],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fucomip  , for oc use [$DF,$EB],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fucom    , for oc use [$DD,$E0],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fucom    , for oc use [$DD,$E1],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fucomp   , for oc use [$DD,$E8],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fucomp   , for oc use [$DD,$E9],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fucompp  , for oc use [$DA,$E9],    for ex use x_n, for op1 use op_null    , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fbld     , for oc use [$DF],        for ex use x_4, for op1 use op_m80fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fbstp    , for oc use [$DF],        for ex use x_6, for op1 use op_m80fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fld      , for oc use [$D9],        for ex use x_0, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fld      , for oc use [$DD],        for ex use x_0, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fld      , for oc use [$DB],        for ex use x_5, for op1 use op_m80fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fld      , for oc use [$D9,$C0],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00],

      [for ii use ii_fst      , for oc use [$D9],        for ex use x_2, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fst      , for oc use [$DD],        for ex use x_2, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fst      , for oc use [$DD,$D0],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fstp     , for oc use [$D9],        for ex use x_3, for op1 use op_m32fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fstp     , for oc use [$DD],        for ex use x_3, for op1 use op_m64fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fstp     , for oc use [$DB],        for ex use x_7, for op1 use op_m80fp   , for op2 use op_null    , for op3 use op_null    , for p use $00],
      [for ii use ii_fstp     , for oc use [$DD,$D8],    for ex use x_i, for op1 use op_sti     , for op2 use op_null    , for op3 use op_null    , for p use $00]
      
      --%%ADD(INSTR)
      ];

var
  -- index do tabulky k¢dov n¡ instrukc¡
  iopcodemapindex  : protected array iinstr of record 
      first        : iopcodemap:range;
      last         : iopcodemap:range;
      end record;

end ci_instr;