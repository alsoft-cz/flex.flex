----------------------------------------------------------------------------------------------------
module private cc_binding =
-- Překladač Flexu.
-- Dynamické vazby mezi parititionami (importy a exporty entit).
----------------------------------------------------------------------------------------------------

with
  cc_def.cc_var;

----------------------------------------------------------------------------------------------------
class c_export_iterator = extend c_entity_iterator;
-- Iterátor pro export entit.
----------------------------------------------------------------------------------------------------

    var
      expname      : t_char32str;
      try_export   : t_logical;                  -- T-zkusit exportovat, nejde-li, nic se neděje

    ------------------------------------------------------------------------------------------------
    override process_entity_var =
    ------------------------------------------------------------------------------------------------
    begin
      os^.export_variable(node,try_export,expname);
      end process_entity_var;



    ------------------------------------------------------------------------------------------------
    override process_entity_static_subprogram =
    ------------------------------------------------------------------------------------------------
    begin
      os^.export_static_subprogram(node,try_export,expname);
      end process_entity_static_subprogram;



    ------------------------------------------------------------------------------------------------
    override process_entity_program =
    ------------------------------------------------------------------------------------------------
    begin
      os^.export_program(node,try_export,expname);
      end process_entity_program;



    ------------------------------------------------------------------------------------------------
    entry =
    -- Inicializace.
    ------------------------------------------------------------------------------------------------
    begin
      -- nastavit filtry na zpracování a trasování
      set_processing_filter(ets_exportable,[etv_public,etv_protected,etv_supervised]);
      set_traversal_filter(ets_export_traceable,[etv_public,etv_protected,etv_supervised]);
      end entry;

    end c_export_iterator;



----------------------------------------------------------------------------------------------------
procedure export_entity =
-- Exportuje zadanou entitu pod uvedeným externím jménem.
-- Exportovat je možné procedury, statické metody, program a proměnné. Pokud je dodán modul, třída,
-- nebo kompilační jednotka, tak rekurzivně trasuje strom entit a exportuje všechny viditelné
-- exportovatelné entity.
----------------------------------------------------------------------------------------------------
with
  cc_def.cc_var;

var
  it               : c_export_iterator;          -- exportní iterátor

begin
  it.expname:=external_name;
  it.try_export:=entity^.etype not in ets_exportable;
  it.traverse_entity(entity);
  end export_entity;



----------------------------------------------------------------------------------------------------
procedure get_export_info =
-- Získá pointer na exportní informace zadané entity.
----------------------------------------------------------------------------------------------------
begin
  case entity^.etype
    when et_procedure do result:=pentity_procedure(entity)^.export_info;
    when et_static    do result:=pentity_static(entity)^.export_info;
    when et_var       do result:=pentity_var(entity)^.export_info;
    when et_program   do result:=pentity_program(entity)^.export_info;
    when others do verify({VERIFY=}001101);
    end case;
  end get_export_info;

end cc_binding;