----------------------------------------------------------------------------------------------------
module public cl_resolver =
-- Překladač Flexu.
-- Vyhodnocovač cross-referencí a adres.
----------------------------------------------------------------------------------------------------
-- Ondra : 12.04.2002 : Vytvořil
----------------------------------------------------------------------------------------------------

with
  standard,
  standard.files,
  standard.streams,
  cc_def.cc_unitype,
  cc_def.cc_entity.cc_list;

-- dopředné deklarace
class abstract linkresolver; type p_linkresolver = ^class linkresolver;

type
  -- typ segmentu
  tsegment         = enum
      tseg_code;                                 -- kód
      tseg_const;                                -- const data
      tseg_init;                                 -- inicializovaná data
      tseg_data;                                 -- neinicializovaná data
      tseg_import;                               -- importy
      tseg_metadata;                             -- metadata (deskriptory entit)
      tseg_export;                               -- exporty
      end enum;

type 
  trelocs  = string of t_unsigned;
  prelocs  = ^trelocs;

----------------------------------------------------------------------------------------------------
class public abstract linkresolver = 
-- Vyhodnocovač cross-referencí a adres.
----------------------------------------------------------------------------------------------------

    with
      cc_base,
      cc_base.cc_util;

    extend 
      c_flex_class;

    var
      -- seznamy entit zařazených do jednotlivých segmentů
      code         : protected tentitystring;    -- symboly zařazené v code segmentu
      reloc        : protected tentitystring;    -- symboly vyžadující vyhodnocení relokací
      cdata        : protected timmstring;       -- přímé hodnoty zařazené v const data seg
      idata        : protected tentitystring;    -- symboly zařazené v inicializovaném data seg
      data         : protected tentitystring;    -- symboly zažazené v neinic. data segmentu
      import       : protected tentitystring;    -- externí symboly
      metadata     : protected tentitystring;    -- seznam entit, pro které se generují deskriptory

    ------------------------------------------------------------------------------------------------
    static mark (
        curr       : in pentity);                -- symbol
    -- Fáze 1: Označení symbolů pro linkování.
    ------------------------------------------------------------------------------------------------
    virtual abstract link;
    -- Fáze 2: Vlastní sestavení.
    ----------------------------------------------------------------------------------------------
    virtual abstract info;
    -- Výpis souhrnných informací do listingu.
    ----------------------------------------------------------------------------------------------
    virtual abstract getaddrbase return tunicode_addr;
    -- Bázová adresa, ke které se vztahují relokace.
    ----------------------------------------------------------------------------------------------
    virtual abstract getentrypoint return tunicode_addr;
    -- Entrypoint programu.
    ----------------------------------------------------------------------------------------------
    virtual abstract checkseg (
        _seg       : in tsegment)                -- segment
        return t_logical;                        -- T-zahrnout do EXE
    -- True, pokud se má zadaný segment zahrnout do EXE.
    ----------------------------------------------------------------------------------------------
    virtual abstract getsegbase (
        _seg       : in tsegment)                -- segment
        return tunicode_addr;                    -- bázová adresa segmentu
    -- Bázová adresa segmentu.
    ----------------------------------------------------------------------------------------------
    virtual abstract getsegtotal (
        _seg       : in tsegment)                -- segment
        return tunidata_size;                    -- velikost segmentu
    -- Celková velikost segmentu.
    ----------------------------------------------------------------------------------------------
    virtual abstract writesegment (
        _seg       : in tsegment;                -- segment
        os         : in p_stream_binary_writer);        -- výstupní soubor
    -- Do výstupního souboru zapíše zadaný segment.
    ----------------------------------------------------------------------------------------------
    procedure getrelocaddrs return prelocs;
    -- vrati seznam adres na kterych je treba provest relokaci
    ------------------------------------------------------------------------------------------------

  protected

    var
      relocaddrs   : prelocs;                    -- setrideny seznam adres na kterych je treba provest relokaci

    type
      -- procedura pro sestavení jednoho segmentu
      t_link_segment = procedure (
          _address   : in out c_address_aligner_32); -- přidělovač adres
      p_link_segment = ^t_link_segment;

    ------------------------------------------------------------------------------------------------
    virtual abstract link_segment_code : t_link_segment;
    -- Linkování segmentu: kód.
    ------------------------------------------------------------------------------------------------
    virtual abstract link_segment_metadata : t_link_segment;
    -- Linkování segmentu: metadata.          
    ------------------------------------------------------------------------------------------------
    virtual abstract link_segment_const : t_link_segment;
    -- Linkování segmentu: konstanty.
    ------------------------------------------------------------------------------------------------
    virtual abstract link_segment_init_var : t_link_segment;
    -- Linkování segmentu: inicializované proměnné.
    ------------------------------------------------------------------------------------------------
    virtual abstract link_segment_uninit_var : t_link_segment;
    -- Linkování segmentu: neinicializované proměnné.
    ------------------------------------------------------------------------------------------------
    virtual abstract link_segment_import : t_link_segment;
    -- Linkování segmentu: importované entity.
    ------------------------------------------------------------------------------------------------
    virtual abstract link_segment_export : t_link_segment;
    -- Linkování segmentu: exportované entity.
    ------------------------------------------------------------------------------------------------
    virtual abstract trace (
        curr       : in pentity);                -- vyhodnocovaný symbol
    -- Projde tabulku relokací symbolu CURR a pro každý symbol zavolí MARK.
    ----------------------------------------------------------------------------------------------
    procedure add_relocation (
        relocaddr  : in t_unsigned);             -- absolutní adresa relokabilního pole
    -- Zatridi [relocaddr] do seznamu adres na kterych je treba provest relokaci
    ------------------------------------------------------------------------------------------------
    end linkresolver;



----------------------------------------------------------------------------------------------------
#separate public cl_ia32;
-- Vyhodnocovač cross-referencí a adres: IA-32.
----------------------------------------------------------------------------------------------------

end cl_resolver;
