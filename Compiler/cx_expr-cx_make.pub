----------------------------------------------------------------------------------------------------
module public cx_make =
-- P©eklada‡ Flexu.
-- Vytv ©en¡ kompil torem generovan˜ch uzl– stromu.
----------------------------------------------------------------------------------------------------
-- Ondra : 12.11.2001 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  cc_attr,
  cx_def;

------ %%TECH Generov n¡ stromu kompil torem -------------------------------------------------------
--
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
procedure x_make_op_assign (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    el             : in pexpnode;                -- operandy
    er             : in pexpnode)                -- operandy
                   return pexpoper;              -- sestaven˜ uzel
-- :=
----------------------------------------------------------------------------------------------------
procedure x_make_op_eq (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    el             : in pexpnode;                -- operandy
    er             : in pexpnode)                -- operandy
                   return pexpoper;              -- sestaven˜ uzel
-- =
----------------------------------------------------------------------------------------------------
procedure x_make_op_ne (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    el             : in pexpnode;                -- operandy
    er             : in pexpnode)                -- operandy
                   return pexpoper;              -- sestaven˜ uzel
-- <>
----------------------------------------------------------------------------------------------------
procedure x_make_op_and_then (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    el             : in pexpnode;                -- operandy
    er             : in pexpnode)                -- operandy
                   return pexpoper;              -- sestaven˜ uzel
-- AND THEN
----------------------------------------------------------------------------------------------------
procedure x_make_op_bit_or (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    el             : in pexpnode;                -- operandy
    er             : in pexpnode;                -- operandy
    assign         : in t_logical := false)      -- T-je to p©i©azovac¡ oper tor
                   return pexpoper;              -- sestaven˜ uzel
-- BIT OR
----------------------------------------------------------------------------------------------------
procedure x_make_op_bit_and (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    el             : in pexpnode;                -- operandy
    er             : in pexpnode)                -- operandy
                   return pexpoper;              -- sestaven˜ uzel
-- BIT AND
----------------------------------------------------------------------------------------------------
procedure x_make_component_var (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    pvar           : in pentity_var)             -- promˆnn 
                   return pexpcomponent;         -- sestaven˜ uzel
-- Promˆnn .
----------------------------------------------------------------------------------------------------
procedure x_make_component_type (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    ptyp           : in pentity_type)            -- typ
                   return pexpcomponent;         -- sestaven˜ uzel
-- Typ.
----------------------------------------------------------------------------------------------------
procedure x_make_component_message (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    pmsg           : in pentity_message)         -- zpr va
                   return pexpcomponent;         -- sestaven˜ uzel
-- Zpr va.
----------------------------------------------------------------------------------------------------
procedure x_make_component_selector (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    pitem          : in pentity_var;             -- slo‘ka
    el             : in pexpnode)                -- podv˜raz
                   return pexpcomponent;         -- sestaven˜ uzel
-- Selektor recordu/t©¡dy.
----------------------------------------------------------------------------------------------------
procedure x_make_component_index (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    prefix         : in pexpnode;                -- pole
    index          : in pexpnode)                -- index
                   return pexpindex;             -- sestaven˜ uzel
-- Selektor recordu/t©¡dy.
----------------------------------------------------------------------------------------------------
procedure x_make_ref (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    el             : in pexpnode)                -- podv˜raz
                   return pexpref;               -- sestaven˜ uzel
-- Reference.
----------------------------------------------------------------------------------------------------
procedure x_make_deref (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    el             : in pexpnode)                -- podv˜raz
                   return pexpderef;             -- sestaven˜ uzel
-- Dereference.
-- Pozor: tato procedura modifikuje podv˜raz - dopln¡ do nˆj p©¡znak, ‘e bude dereferencov n.
----------------------------------------------------------------------------------------------------
procedure x_make_this (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    ptyp           : in pentity_type)            -- typ t©¡dy
                   return pexpthis;              -- sestaven˜ uzel
-- THIS.
----------------------------------------------------------------------------------------------------
procedure x_make_call_spec (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    spectype       : in tspectype;               -- speci ln¡ metoda
    pspec          : in pentity_special;         -- volan  spec. metoda, je-li ur‡ena
    el             : in pexpnode;                -- podv˜raz
    arglist        : in pexpitem)                -- seznam argument–
                   return pexpcallspec;          -- sestaven˜ uzel
-- Vol n¡ speci ln¡ metody.
----------------------------------------------------------------------------------------------------
procedure x_make_send_message (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    msg            : in pexpcomponent)           -- komponenta definuj¡c¡ zpr vu
                   return pexplist;
-- Sestaven¡ zpr vy (bez parametr–) pro odesl n¡.
----------------------------------------------------------------------------------------------------
procedure x_make_attribute (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    aclass         : in tattrclass;              -- t©¡da atributu
    atf            : in tattrformal;             -- form ln¡ atribut
    ata            : in tattractual;             -- skute‡n˜ atribut
    ptyp           : in pentity_type;            -- typ atributu
    el             : in pexpnode)                -- podv˜raz
                   return pexpattrib;            -- sestaven˜ uzel
-- Jazykem definovan˜ atribut.
-- Pozn mka: Narozd¡l od norm ln¡ho zpracov n¡ atributu se p©i generov n¡
-- uzlu p©edpokl d , ‘e volaj¡c¡ dod  typ atributu v souladu s pravidly
-- jazyka a typ (a t‚‘ t©¡da typu a form ln¡ atribut) nen¡ ur‡ov n¡ podle
-- vlastnost¡ podv˜razu.
----------------------------------------------------------------------------------------------------
procedure x_make_imm (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    ptyp           : in pentity_type;            -- typ oprandy
    imm            : in timm_value;              -- ukl dan  p©¡m  hodnota
    immkind        : in timmentrykind)           -- druh p©¡m‚ hodnoty
                   return pexpimm;               -- sestaven˜ uzel
-- P©¡m  hodnota.
----------------------------------------------------------------------------------------------------
procedure x_make_imm_nil (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    ptyp           : in pentity_type)            -- typ operandu
                   return pexpimm;               -- sestaven˜ uzel
-- NIL.
----------------------------------------------------------------------------------------------------
procedure x_make_imm_uniint (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    ui             : in tuniint)                 -- typ operandu
                   return pexpimm;               -- sestaven˜ uzel
-- Univerz ln¡ integer.
----------------------------------------------------------------------------------------------------
procedure x_make_param (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    el             : in pexpnode;                -- podv˜raz
    pparam         : in pentity_param)           -- souvisej¡c¡ symbol
                   return pexpitem;              -- sestaven˜ uzel
-- Pozi‡n¡ parametr procedury.
----------------------------------------------------------------------------------------------------
procedure x_make_fake_tag (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    info           : in expinfo;                 -- kontext
    interface      : in p_class_interface)       -- interface t©¡dy
                   return pexpfaketag;           -- sestaven˜ uzel
-- Fake tag interfacu t©¡dy.
----------------------------------------------------------------------------------------------------

end cx_make;