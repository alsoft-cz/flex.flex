----------------------------------------------------------------------------------------------------
module private cc_block =
-- Výstup bloků do XML
----------------------------------------------------------------------------------------------------
-- honzap : 8.12.2003 : Vytvořil
----------------------------------------------------------------------------------------------------

with
  standard.conversions,
  cc_io.cc_xml.cc_util,
  cc_def,
  cc_base.cc_sym,
  cc_io.cc_xml.cc_expr,
  cc_def.cc_unitype,
  cb_block.cb_def.cb_choice;

----------------------------------------------------------------------------------------------------
procedure blocktypeset_to_string (
    value          : in blocktypeset)            -- převáděná množina
    return t_char32str =
-- Převod množiny na řetězec
----------------------------------------------------------------------------------------------------
begin
  -- zpracovat všechny hodnoty výčtového typu blocktype
  for bt in blocktype loop
    -- pokud je právě zpracovávaná hodnota obsažena v množině, zapsat ji do výsledku
    if bt in value then
      result & blocktype_export_id[bt] & ' ';
      end if;
    end loop;
  end blocktypeset_to_string;



----------------------------------------------------------------------------------------------------
procedure blsendpartset_to_string (
    value          : in blsendpartset)           -- převáděná množina
    return t_char32str =
-- Převod množiny na řetězec
----------------------------------------------------------------------------------------------------
begin
  -- zpracovat všechny hodnoty výčgtového typu blocktype
  for bt in blsendpart loop
    -- pokud je právě zpracovávaná hodnota obsažena v množině, zapsat ji do výsledku
    if bt in value then
      result & blsendpart_export_id[bt] & ' ';
      end if;
    end loop;
  end blsendpartset_to_string;



----------------------------------------------------------------------------------------------------
procedure xml_dump_blpositions (
    pos            : in blpositions;             -- pozice
    xml            : in p_xml_dumper;            -- XML dumper
    name           : in t_char32ustr) =          -- jméno obalového elementu
-- XML dump typu [blpositions]
----------------------------------------------------------------------------------------------------
begin
  -- zanoření
  xml^.go_in(name);

  -- zpracovat pole [pos]
  for i in blposition loop
    xml_dump_lex_pos_block(xml,blposition_export_id[i],pos[i]);
    end loop;

  -- vynoření
  xml^.go_out(name);
  end xml_dump_blpositions;



----------------------------------------------------------------------------------------------------
procedure xml_dump_choicelist (
    clist          : in tchoicelist;             -- dumpovaná struktura
    xml            : in p_xml_dumper;            -- XML dumper
    name           : in t_char32ustr) =          -- jméno obalového elementu
-- XML dump
----------------------------------------------------------------------------------------------------
begin
  -- zanoření
  xml^.go_in(name);

  -- pokud seznam není nezadaný
  if clist.list<>nil then
    -- zpracovat položky seznamu
    for i in clist.list^:range loop
      -- zanořit
      xml^.go_in('item');

      -- vypsat atributy
      xml^.write_attribute('lval',unsigned_to_string(uniint_to_unsigned(clist.list^[i].lval)));
      xml^.write_attribute('hval',unsigned_to_string(uniint_to_unsigned(clist.list^[i].hval)));

      -- vynořit
      xml^.go_out('item');
      end loop;
    end if;

  -- vynoření
  xml^.go_out(name);
  end xml_dump_choicelist;



----------------------------------------------------------------------------------------------------
class private c_block_dumper =
-- Třída pro dump bloku do XML
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    override enter_node =
    -- Událost spuštěná před zpracováním blnode
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in(blocktype_export_id[node^.btype]);
      end enter_node;



    ------------------------------------------------------------------------------------------------
    override leave_node =
    -- Událost spuštěná po zpracování blnode
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out(blocktype_export_id[node^.btype]);
      end leave_node;



    ------------------------------------------------------------------------------------------------
    override before_traverse_bprolog =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in('bprolog');
      end before_traverse_bprolog;



    ------------------------------------------------------------------------------------------------
    override after_traverse_bprolog =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out('bprolog');
      end after_traverse_bprolog;



    ------------------------------------------------------------------------------------------------
    override before_traverse_bepilog =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in('bepilog');
      end before_traverse_bepilog;



    ------------------------------------------------------------------------------------------------
    override after_traverse_bepilog =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out('bepilog');
      end after_traverse_bepilog;



    ------------------------------------------------------------------------------------------------
    override before_traverse_sub =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in('sub');
      end before_traverse_sub;



    ------------------------------------------------------------------------------------------------
    override after_traverse_sub =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out('sub');
      end after_traverse_sub;



    ------------------------------------------------------------------------------------------------
    override before_traverse_binit =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in('binit');
      end before_traverse_binit;



    ------------------------------------------------------------------------------------------------
    override after_traverse_binit =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out('binit');
      end after_traverse_binit;



    ------------------------------------------------------------------------------------------------
    override before_traverse_bentry =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in('bentry');
      end before_traverse_bentry;



    ------------------------------------------------------------------------------------------------
    override after_traverse_bentry =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out('bentry');
      end after_traverse_bentry;



    ------------------------------------------------------------------------------------------------
    override before_traverse_bcatch =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in('bcatch');
      end before_traverse_bcatch;



    ------------------------------------------------------------------------------------------------
    override after_traverse_bcatch =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out('bcatch');
      end after_traverse_bcatch;



    ------------------------------------------------------------------------------------------------
    override before_traverse_brollback =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in('brollback');
      end before_traverse_brollback;



    ------------------------------------------------------------------------------------------------
    override after_traverse_brollback =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out('brollback');
      end after_traverse_brollback;



    ------------------------------------------------------------------------------------------------
    override before_traverse_bcommit =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in('bcommit');
      end before_traverse_bcommit;



    ------------------------------------------------------------------------------------------------
    override after_traverse_bcommit =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out('bcommit');
      end after_traverse_bcommit;



    ------------------------------------------------------------------------------------------------
    override before_traverse_bleave =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in('bleave');
      end before_traverse_bleave;


    
    ------------------------------------------------------------------------------------------------
    override after_traverse_bleave =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out('bleave');
      end after_traverse_bleave;



    ------------------------------------------------------------------------------------------------
    override before_traverse_bexit =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- začátek elementu
      xml^.go_in('bexit');
      end before_traverse_bexit;



    ------------------------------------------------------------------------------------------------
    override after_traverse_bexit =
    -- událost
    ------------------------------------------------------------------------------------------------
    begin
      -- konec elementu
      xml^.go_out('bexit');
      end after_traverse_bexit;



    ------------------------------------------------------------------------------------------------
    override process_blnode =
    -- zpracování blnode
    ------------------------------------------------------------------------------------------------
    begin
      -- dump atributů blnode
      xml^.write_attribute('org',blphase_export_id[node^.org]);
      xml^.write_attribute('zprac',blphase_export_id[node^.zprac]);
      xml^.write_attribute('blevel',unsigned_to_string(node^.blevel));
      xml_dump_blpositions(node^.pos,xml,'pos');
      xml^.write_text_element('loc_cmd',blocktypeset_to_string(node^.loc_cmd));
      xml^.write_text_element('tra_cmd',blocktypeset_to_string(node^.tra_cmd));
      xml^.write_text_element('loc_outer',t_logical_export_id[node^.loc_outer]);
      xml^.write_text_element('tra_outer',t_logical_export_id[node^.tra_outer]);
      end process_blnode;



    ------------------------------------------------------------------------------------------------
    override process_blsimple =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blnode(node);
      end process_blsimple;



    ------------------------------------------------------------------------------------------------
    override process_blcond =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcompound(node);

      -- dump
      dump_expr('cons',node^.cond);
      end process_blcond;



    ------------------------------------------------------------------------------------------------
    override process_blcmd =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blsimple(node);

      -- dump
      dump_expr('expr',node^.expr);
      end process_blcmd;



    ------------------------------------------------------------------------------------------------
    override process_blbreak =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blsimple(node);
      end process_blbreak;


    
    ------------------------------------------------------------------------------------------------
    override process_blreturn =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blsimple(node);
      end process_blreturn;


    
    ------------------------------------------------------------------------------------------------
    override process_blmessage =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blsimple(node);

      -- dump
      dump_expr('msg',node^.msg);
      dump_expr('dest',node^.dest);
      end process_blmessage;



    ------------------------------------------------------------------------------------------------
    override process_blraise =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blmessage(node);
      end process_blraise;



    ------------------------------------------------------------------------------------------------
    override process_blsend =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blmessage(node);

      -- dump
      xml^.write_text_element('lifetime',bllifetime_export_id[node^.lifetime]);
      xml^.write_text_element('parts',blsendpartset_to_string(node^.parts));
      dump_expr('time',node^.time);
      end process_blsend;



    ------------------------------------------------------------------------------------------------
    override process_blgoto =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blsimple(node);

      -- dump
      if node^.plabel<>nil then xml^.write_text_element('plabel',sym_get_qid(node^.plabel));end if;
      end process_blgoto;



    ------------------------------------------------------------------------------------------------
    override process_blalloc =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blsimple(node);

      -- dump
      dump_expr('xvar',node^.xvar);
      end process_blalloc;



    ------------------------------------------------------------------------------------------------
    override process_blnew =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blalloc(node);

      -- dump
      dump_expr('xrange',node^.xrange);
      dump_expr('xtag',node^.xtag);
      end process_blnew;



    ------------------------------------------------------------------------------------------------
    override process_bldiscard =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blalloc(node);
      end process_bldiscard;



    ------------------------------------------------------------------------------------------------
    override process_bladjust =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blalloc(node);

      -- dump
      dump_expr('xrange',node^.xrange);
      end process_bladjust;



    ------------------------------------------------------------------------------------------------
    override process_bldelay =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blsimple(node);

      -- dump
      dump_expr('expr',node^.expr);
      end process_bldelay;



    ------------------------------------------------------------------------------------------------
    override process_blcompound =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blnode(node);
      end process_blcompound;


    
    ------------------------------------------------------------------------------------------------
    override process_blif =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcompound(node);
      end process_blif;



    ------------------------------------------------------------------------------------------------
    override process_blloop =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcond(node);
      end process_blloop;



    ------------------------------------------------------------------------------------------------
    override process_blfor =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcompound(node);
      -- TODO for_region   : pregion;                    -- region FOR cyklu

      -- dump
      if node^.for_var<>nil then xml^.write_text_element('for_var',sym_get_qid(node^.for_var));end if;
      xml^.write_text_element('order',blfororder_export_id[node^.order]);
      dump_expr('xrange',node^.xrange);
      end process_blfor;



    ------------------------------------------------------------------------------------------------
    override process_blwhile =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcond(node);
      end process_blwhile;



    ------------------------------------------------------------------------------------------------
    override process_blcase =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcompound(node);

      -- dump
      dump_expr('expr',node^.expr);
      end process_blcase;



    ------------------------------------------------------------------------------------------------
    override process_blaccept =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcompound(node);

      -- dump
      xml^.write_text_element('mode',blacceptmode_export_id[node^.mode]);
      dump_expr('expr',node^.expr);
      end process_blaccept;



    ------------------------------------------------------------------------------------------------
    override process_blblock =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcompound(node);

      -- dump
      xml_dump_lex_pos_block(xml,'bcatch_pos',node^.bcatch_pos);
      xml_dump_lex_pos_block(xml,'brollback_pos',node^.brollback_pos);
      xml_dump_lex_pos_block(xml,'bcommit_pos',node^.bcommit_pos);
      xml_dump_lex_pos_block(xml,'bleave_pos',node^.bleave_pos);
      end process_blblock;



    ------------------------------------------------------------------------------------------------
    override process_bldeclare =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blblock(node);
      -- TODO declare_region : pregion
      end process_bldeclare;



    ------------------------------------------------------------------------------------------------
    override process_blasm =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blnode(node);
      -- TODO asm_region   : pregion
      end process_blasm;



    ------------------------------------------------------------------------------------------------
    override process_bllabel =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blnode(node);

      -- dump
      if node^.plabel<>nil then xml^.write_text_element('plabel',sym_get_qid(node^.plabel));end if;
      end process_bllabel;



    ------------------------------------------------------------------------------------------------
    override process_blchoicelist =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcompound(node);

      -- dump
      xml^.write_text_element('ctype',blchoicetype_export_id[node^.ctype]);

      -- testovat, zda je zadáno node^.list
      if node^.list<>nil then
        -- zpracovat node^.list
        xml^.go_in('list');
        for i in node^.list^:range loop
          dump_expr('expr',node^.list^[i]);
          end loop;
        xml^.go_out('list');
        end if;
      end process_blchoicelist;



    ------------------------------------------------------------------------------------------------
    override process_blwhen_m =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blchoicelist(node);
      end process_blwhen_m;



    ------------------------------------------------------------------------------------------------
    override process_blwhen_c =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      xml_dump_choicelist(node^.clist,xml,'clist');
      end process_blwhen_c;



    ------------------------------------------------------------------------------------------------
    override process_blif_cond =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcond(node);
      end process_blif_cond;



    ------------------------------------------------------------------------------------------------
    override process_blloop1 =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- zpracovat předka
      process_blcompound(node);
      end process_blloop1;


    
    ------------------------------------------------------------------------------------------------
    virtual dump_expr =
    -- zpracování uzlu - dump
    ------------------------------------------------------------------------------------------------
    begin
      -- implicitní zpracování výrazu - vnořený dump
      xml^.go_in(name);
      if expr<>nil then dump_expression_to_xml(expr,xml);end if;
      xml^.go_out(name);
      end dump_expr;



    ------------------------------------------------------------------------------------------------
    static init =
    -- inicializace
    ------------------------------------------------------------------------------------------------
    begin
      -- inicializovat
      this.xml:=xml;
      end init;

    end c_block_dumper;



----------------------------------------------------------------------------------------------------
procedure dump_block_to_file =
-- Provede dump block do XML souboru
----------------------------------------------------------------------------------------------------
var
  xml              : p_file_xml_dumper;          -- souborový xml dumper

begin
  -- vyvořit instanci
  new xml;

  -- inicializovat
  xml^.init(file);

  -- vlastní dump
  dump_block_to_xml(block,xml);
leave
  discard xml;
  end dump_block_to_file;

----------------------------------------------------------------------------------------------------
procedure dump_block_to_stream =
-- Provede dump výrazu do textového streamu
----------------------------------------------------------------------------------------------------
var
  xml              : p_stream_xml_dumper;          -- xml dumper

begin
  -- vyvořit instanci
  new xml;

  -- inicializovat
  xml^.init_writer(stream);

  -- vlastní dump
  dump_block_to_xml(block,xml);
leave
  discard xml;
  end dump_block_to_stream;


----------------------------------------------------------------------------------------------------
procedure dump_block_to_xml =
-- Provede dump block do XML dumperu
----------------------------------------------------------------------------------------------------
var
  dumper           : p_block_dumper;             -- dumper

begin
  -- vyvořit instanci
  new dumper;

  -- inicializivat
  dumper^.init(xml);

  -- vlastní dump
  dumper^.traverse_block(block);

leave
  -- uvolnit pamět
  discard dumper;
  end dump_block_to_xml;

end cc_block;