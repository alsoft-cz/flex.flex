----------------------------------------------------------------------------------------------------
module public cc_util =
-- P©eklada‡ Flexu.
-- R–zn‚ u‘ite‡n‚ procedury.
----------------------------------------------------------------------------------------------------
-- Ondra : 08.04.2001 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  standard;

----------------------------------------------------------------------------------------------------
procedure addalign (
    x              : out t_unsigned32; 
    y              : in t_unsigned32;
    z              : in t_unsigned32; 
    align          : in t_unsigned32);
-- X:=Y+Z se zarovn n¡m na ALIGN.                                             
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
class public c_address_aligner_32 =
-- Producent zarovnan˜ch adres - sekven‡n¡ p©idˆlova‡ adres.
----------------------------------------------------------------------------------------------------
-- T©¡da eviduje aktu ln¡ p©idˆlenou adresu a je schopna ji zvy¨ovat podle dodan‚ velikost 
-- obsazen‚ho adresn¡ho prostoru a nastaven‚ho zarovn n¡. Po‡ te‡n¡ (tj. prvn¡ p©idˆlen ) adresa
-- a velikost zarovn n¡ se nastavuje metodou [init].
-- 
-- K dispozici jsou dva re‘imy pou‘it¡, kter‚ lze obecnˆ kombinovat:
--
--   1. Jednoduch˜ re‘im reprezentovan˜ metodou [get_address_and_adjust], kter  p©idˆl¡ adresu
--      a sou‡asnˆ vypo‡¡t  adresu p©¡¨t¡.
--
--   2. Slo‘itˆj¨¡ re‘im, kter˜ podporuje v˜po‡et posunu adresy ve v¡ce kroc¡ch. V tomto m¢du se
--      postupuje n sledovnˆ:
--         -- metodou [get_address] je mo‘n‚ (i opakovanˆ) zjistit aktu ln¡ adresu,
--         -- libovoln˜m po‡tem vol n¡ [register_size] se zapo‡¡t vaj¡ kousky spot©ebovan‚ho
--            adresn¡ho prostoru,
--         -- na z vˆr se metodou [compute_next_address] vypo‡te p©¡¨t¡ adresa.
--
--      Pozn mky:
--        a) Metoda [get_address] bere ohled na dosud registrovan‚ kousky pomoc¡ [register_size],
--           tak‘e v pr–bˆhu zpracov n¡ je mo‘n‚ pohodlnˆ zji¨Ÿovat postupnˆ se mˆn¡c¡ adresu.
--        b) Zarovn n¡ je aplikov no na celek, nikoliv na jednotliv‚ registrovan‚ kousky.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    static init (
        _address   : in t_unsigned32;            -- po‡ te‡n¡ adresa
        _alignment : in t_unsigned32);           -- pou‘it‚ zarovn n¡
    -- Nastav¡ po‡ te‡n¡ adresu a zarovn n¡.
    ------------------------------------------------------------------------------------------------
    static get_address return t_unsigned32;
    -- Vr t¡ aktu ln¡ adresu.
    ------------------------------------------------------------------------------------------------
    static get_address_and_adjust (
        _size      : in t_unsigned32)            -- velikost, o kterou posunout adresu
        return t_unsigned32;
    -- Vr t¡ aktu ln¡ adresu a pro p©¡¨tˆ ji posune o hodnotu [_size]+<zarovn n¡>.
    -- Pozor, na dosud registrovanou velikost posunut¡ nebere ohled!
    ------------------------------------------------------------------------------------------------
    static register_size (
        _size      : in t_unsigned32);           -- ‡ st velikosti, o kterou posunout adresu
    -- Registruje ‡ st velikosti, o kterou se bude posouvat adresa.
    ------------------------------------------------------------------------------------------------
    static compute_next_address;
    -- Spo‡¡t  p©¡¨t¡ adresu na z kladˆ dosud registrovan˜ch hodnot.
    ------------------------------------------------------------------------------------------------
    static shift_address (
        _size      : in t_unsigned32);           -- jednor zov˜ posuv velikosti
    -- Jednor zovˆ posune adresu o uvedenou velikost s ohledem na zarovn n¡. 
    -- Pozor: Nem  vliv na dosud registrovanou velikost pomoc¡ [register_size], tak‘e p©i m¡ch n¡
    -- [shift_address] a kombinace [register_size]+[compute_next_address] se t‚ druh‚ variantˆ mˆn¡
    -- adresa pod rukama.
    ------------------------------------------------------------------------------------------------

    end c_address_aligner_32;

end cc_util;