----------------------------------------------------------------------------------------------------
module public cd_create =
-- Překladač Flexu.
-- Deklarace.
----------------------------------------------------------------------------------------------------
-- Ondra : 19.09.2000 : Vytvořil
----------------------------------------------------------------------------------------------------

with
  cc_base,cc_def.cc_unitype;

use
  cc_base.cc_sym;

extend
  cc_base.cc_sym.cc_advanced;

----------------------------------------------------------------------------------------------------
procedure d_create (
    context        : in tcontext;                -- kontext deklarace
    curr           : out pentity;                -- deklarovaná entita
    curr_context   : out tcontext;               -- odpovídající kontext
    etype          : in tentitytype;             -- typ symbolu
    pos            : out lexposblock);           -- pozice deklarace
-- Začátek deklarace a vytvoření symbolu.
----------------------------------------------------------------------------------------------------
procedure d_create_at_position (
    context        : in tcontext;                -- kontext deklarace
    curr           : out pentity;                -- deklarovaná entita
    curr_context   : out tcontext;               -- odpovídající kontext
    etype          : in tentitytype;             -- typ symbolu
    id             : in pentityident;            -- dodaný idenifikátor
    pos            : in lexposblock);            -- pozice deklarace
-- Začátek deklarace a vytvoření symbolu na předepsané pozici.
----------------------------------------------------------------------------------------------------
procedure d_create_without_name (
    context        : in tcontext;                -- kontext deklarace
    curr           : out pentity;                -- deklarovaná entita
    curr_context   : out tcontext;               -- odpovídající kontext
    etype          : in tentitytype;             -- typ symbolu
    id             : in pentityident;            -- volitelně dodaný idenifikátor
    pos            : out lexposblock);           -- pozice deklarace
-- Začátek deklarace bez zpracování případného jména entity.
----------------------------------------------------------------------------------------------------
procedure d_create_temporary_type (
    context        : in tcontext;                -- kontext deklarace
    ptyp           : out pentity_type;           -- deklarovaný typ     
    ptyp_context   : out tcontext;               -- odpovídající kontext
    stype          : in tdatatype;               -- datový typ
    dsize          : in tunidata_size);          -- velikost
-- Vytvoří nový dočasný typ a dosadí implicitní hodnoty specifikace.
-- Dočasný typ není tagged.
----------------------------------------------------------------------------------------------------
procedure d_create_implicit_type (
    context        : in tcontext;                -- kontext deklarace
    ptyp           : out pentity_type;           -- deklarovaný typ     
    ptyp_context   : out tcontext;               -- odpovídající kontext
    stype          : in tdatatype;               -- datový typ
    pos            : in lexposblock);            -- pozice deklarace
-- Vytvoří nový implicitně deklarovaný typ.
-- Implicitně deklarovaný typ je tagged. Jestliže je [stype] rovno [dt_undef], pak se předpokládá,
-- že se jedná o implicitně deklarovaného potomka jiného typu a nenastavuje se druh typu ([tkind]).
----------------------------------------------------------------------------------------------------
procedure d_create_internal (
    context        : in tcontext;                -- kontext deklarace
    curr           : out pentity;                -- deklarovaná entita
    curr_context   : out tcontext;               -- odpovídající kontext
    etype          : in tentitytype;             -- typ symbolu
    id             : in pentityident);           -- dodaný idenifikátor
-- Začátek deklarace a vytvoření interního symbolu.
----------------------------------------------------------------------------------------------------
procedure d_create_region (
    context        : in tcontext;                -- aktuální kontext
    region         : out pregion;                -- vytvořený region
    region_context : out tcontext;               -- kontext vytvořeného regionu
    vsect          : in tentityvisible := etv_private); -- počáteční viditelnost vnořených prvků
-- Vytvoří nový deklarativní regionu v aktuálním kontextu.
----------------------------------------------------------------------------------------------------
{
procedure d_get_attribute_context (
    curr           : in out class tentity;       -- aktuální entita
    attr_context   : out tcontext);              -- atributový kontext
-- Získá atributový kontext entity. Pokud ještě neexistuje, tak ho vytvoří.
}
----------------------------------------------------------------------------------------------------
procedure d_next (
    curr           : in out class tentity;       -- deklarovaná entita
    pos            : in out lexposblock);        -- pozice deklarace
-- Překlad další části deklarace entity..
----------------------------------------------------------------------------------------------------
procedure d_next_internal (
    curr           : in out class tentity);      -- deklarovaná entita
-- Překlad další části deklarace interní entity.
----------------------------------------------------------------------------------------------------
procedure d_rollback (
    curr           : in out class tentity);      -- deklarovaná entita
-- Napraví, co provedlo D_NEXT.
----------------------------------------------------------------------------------------------------
procedure d_end (
    curr           : in out class tentity;       -- deklarovaná entita
    pos            : in out lexposblock);        -- pozice deklarace
-- Konec deklarace symbolu.
----------------------------------------------------------------------------------------------------
procedure d_end_at_position (
    curr           : in out class tentity;       -- deklarovaná entita
    pos            : in lexposblock;             -- pozice deklarace
    evaluate       : in t_logical := true);      -- vyhodnocovat deklaraci entity
-- Konec deklarace symbolu na uvedené pozici.
----------------------------------------------------------------------------------------------------
procedure d_end_internal (
    curr           : in out class tentity;       -- deklarovaná entita
    evaluate       : in t_logical := true);      -- vyhodnocovat deklaraci entity
-- Konec deklarace interního symbolu.
----------------------------------------------------------------------------------------------------
procedure d_end_temporary_type (
    curr           : in out tentity_type);       -- deklarovaná entita
-- Konec deklarace dočasného typu.
----------------------------------------------------------------------------------------------------
procedure d_end_implicit_type (
    curr           : in out tentity_type;        -- deklarovaná entita
    pos            : in lexposblock;             -- pozice deklarace
    evaluate       : in t_logical := true);      -- vyhodnocovat deklaraci entity
-- Konec deklarace implicitně deklarovaného typu.
----------------------------------------------------------------------------------------------------

end cd_create;