----------------------------------------------------------------------------------------------------
module public cc_attr =
-- P©eklada‡ Flexu.
-- Atributy.
----------------------------------------------------------------------------------------------------
-- Ondra : 18.07.2001 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  standard,
  cc_def,cc_def.cc_entity;

type
  -- jazykem definovan‚ symbolick‚ atributy
  tattrformal      = enum
      atf_none;                                  -- nic, neur‡eno, nen¡ jazykem definov no
      atf_type;
      atf_base;
      atf_root_base;
      atf_ancestor;
      atf_root_ancestor;
      atf_size;
      atf_bits;
      atf_alignment;
      atf_range;
      atf_first;
      atf_last;
      atf_length;
      atf_ord;
      atf_component;
      atf_components;
      atf_position;
      atf_image;
      atf_name;
      atf_unchecked;
      atf_true;
      atf_false;
      atf_tag;
      atf_tagged;
      atf_machine_pointer;
      atf_full;
      end enum;

  -- skute‡n‚ atributy objekt–
  tattractual      = enum
      ata_none;                                  -- nic, neur‡eno, nen¡ jazykem definov no
      -- atributy (libovoln‚ho) typu
      ata_type_type;
      ata_type_base;
      ata_type_root_base;
      ata_type_ancestor;
      ata_type_root_ancestor;
      ata_type_size;
      ata_type_tag;
      -- atributy promˆnn‚
      ata_var_unchecked;
      ata_var_position;
      -- atributy zpr vy
      ata_message_tag;
      -- atributy modulu
      ata_module_ancestor;
      ata_module_root_ancestor;
      -- atributy ordin ln¡ch typ–
      ata_ord_range;
      ata_ord_first;
      ata_ord_last;
      ata_ord_ord;
      ata_ord_bits;
      -- atributy logick˜ch typ–
      ata_logical_true;
      ata_logical_false;
      -- atributy pole
      ata_array_range;
      ata_array_first;
      ata_array_last;
      ata_array_length;
      ata_array_alignment;
      -- atributy ©etˆzce
      ata_string_range;
      ata_string_first;
      ata_string_last;
      ata_string_length;
      ata_string_alignment;
      -- atributy recordu
      ata_record_component;
      ata_record_components;
      ata_record_alignment;
      -- atributy pointeru
      ata_pointer_machine_pointer;
      -- atributy mno‘iny
      ata_set_full;
      -- atributy ordin ln¡ch p©¡m˜ch hodnot
      ata_imm_ord_image;
      -- atributy obecn‚ho v˜razu
      ata_expr_name;
      ata_expr_tag;                              -- statick˜/dynamick˜ atribut :tag
      ata_expr_tagged;                           -- statick˜/dynamick˜ atribut :tagged
      ata_expr_size;                             -- dynamick˜ atribut :size
      ata_expr_last;                             -- dynamick˜ atribut :last
      end enum;
  tattractualset   = set of tattractual;

  -- t©¡da atributu
  tattrclass       = enum
      atc_static;                                -- statick˜
      atc_dynamic;                               -- dynamick˜
    --atc_generic;                               -- generick˜
      end enum;

  -- popis atributu
  tattrdesc        = record
      txt          : tshortident;                -- identifik tor atributu
      attr         : tattrformal;                -- atribut
      end record;

var
  tattrclasstxt    : const array tattrclass of t_char32str := [
      for atc_static  use 'static',
      for atc_dynamic use 'dynamic'];
    --for atc_generic use 'generic'];

  rtattribtxt      : const array rtattrib of t_char32str := [
      for rta_instance use '^instance',
      for rta_tag      use 'TAG',
      for rta_size     use 'SIZE',
      for rta_last     use 'LAST'];

var
  -- p©ekladov  tabulka identifik tor --> atribut
  tattrtab         : const array 0..24 of tattrdesc := [
      [for txt use 'ALIGNMENT'       , for attr use atf_alignment      ],
      [for txt use 'ANCESTOR'        , for attr use atf_ancestor       ],
      [for txt use 'BASE'            , for attr use atf_base           ],
      [for txt use 'BITS'            , for attr use atf_bits           ],
      [for txt use 'COMPONENT'       , for attr use atf_component      ],
      [for txt use 'COMPONENTS'      , for attr use atf_components     ],
      [for txt use 'FALSE'           , for attr use atf_false          ],
      [for txt use 'FIRST'           , for attr use atf_first          ],
      [for txt use 'FULL'            , for attr use atf_full           ],
      [for txt use 'IMAGE'           , for attr use atf_image          ],
      [for txt use 'LAST'            , for attr use atf_last           ],
      [for txt use 'LENGTH'          , for attr use atf_length         ],
      [for txt use 'MACHINE_POINTER' , for attr use atf_machine_pointer],
      [for txt use 'NAME'            , for attr use atf_name           ],
      [for txt use 'ORD'             , for attr use atf_ord            ],
      [for txt use 'POSITION'        , for attr use atf_position       ],
      [for txt use 'RANGE'           , for attr use atf_range          ],
      [for txt use 'ROOT_ANCESTOR'   , for attr use atf_root_ancestor  ],
      [for txt use 'ROOT_BASE'       , for attr use atf_root_base      ],
      [for txt use 'SIZE'            , for attr use atf_size           ],
      [for txt use 'TAG'             , for attr use atf_tag            ],
      [for txt use 'TAGGED'          , for attr use atf_tagged         ],
      [for txt use 'TRUE'            , for attr use atf_true           ],
      [for txt use 'TYPE'            , for attr use atf_type           ],
      [for txt use 'UNCHECKED'       , for attr use atf_unchecked      ]];

----------------------------------------------------------------------------------------------------
procedure a_getlangattr (
    id             : in tentityident;            -- identifik tor
    attr           : out tattrformal);           -- jazykem definovan˜ atribut
-- Podle identifik toru ur‡¡ jazykem definovan˜ atribut.
----------------------------------------------------------------------------------------------------
procedure a_attrid (
    curr           : in tcontext;                -- p©ekl dan˜ prvek
    id             : out pentityident);          -- identifik tor atributu
-- P©e‡te ze vstupu identifik tor atributu.
----------------------------------------------------------------------------------------------------
procedure islangattr (
    id             : in tentityident)            -- identifik tor
                   return t_logical;             -- T-jazykem definovan˜ atribut
-- True, je-li zadan˜ atribut jazykem/implementac¡ definovan˜.
----------------------------------------------------------------------------------------------------

end cc_attr;