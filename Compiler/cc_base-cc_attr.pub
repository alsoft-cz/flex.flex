----------------------------------------------------------------------------------------------------
module public cc_attr =
-- Překladač Flexu.
-- Atributy.
----------------------------------------------------------------------------------------------------
-- Ondra : 18.07.2001 : Vytvořil
----------------------------------------------------------------------------------------------------

with
  standard,
  cc_def,cc_def.cc_entity;

type
  -- jazykem definované symbolické atributy
  tattrformal      = enum
      atf_none;                                  -- nic, neurčeno, není jazykem definováno
      -- jazykem definované atributy
      atf_type;
      atf_base;
      atf_root_base;
      atf_ancestor;
      atf_root_ancestor;
      atf_size;                                  -- předefinovatelný
      atf_bits;
      atf_alignment;                             -- předefinovatelný
      atf_range;
      atf_first;
      atf_last;
      atf_length;
      atf_ord;                                   -- předefinovatelný
      atf_component;
      atf_components;
      atf_position;                              -- předefinovatelný
      atf_image;
      atf_name;
      atf_unchecked;
      atf_true;                                  -- (předefinovatelný)
      atf_false;                                 -- (předefinovatelný)
      atf_tag;
      atf_tagged;
      atf_designated;
      atf_machine_pointer;                       -- předefinovatelný
      atf_full;
      atf_security_level;                        -- předefinovatelný
      atf_delta;
      atf_epsilon;
      atf_positive_inf;
      atf_negative_inf;
      atf_not_a_number;
      atf_as_ancestor;
      -- implementací definované atributy
      atf_native_alignment;                      -- předefinovatelný
      atf_inverse_delta;
      end enum;

var
{%OFF}
  -- jazykem definované symbolické atributy
  tattrformal_export_id : const array tattrformal of t_char32str := [
      for atf_none             use 'none',
      for atf_type             use 'type',
      for atf_base             use 'base',
      for atf_root_base        use 'root_base',
      for atf_ancestor         use 'ancestor',
      for atf_root_ancestor    use 'root_ancestor',
      for atf_size             use 'size',
      for atf_bits             use 'bits',
      for atf_alignment        use 'alignment',
      for atf_range            use 'range',
      for atf_first            use 'first',
      for atf_last             use 'last',
      for atf_length           use 'length',
      for atf_ord              use 'ord',
      for atf_component        use 'component',
      for atf_components       use 'components',
      for atf_position         use 'position',
      for atf_image            use 'image',
      for atf_name             use 'name',
      for atf_unchecked        use 'unchecked',
      for atf_true             use 'true',
      for atf_false            use 'false',
      for atf_tag              use 'tag',
      for atf_tagged           use 'tagged',
      for atf_designated       use 'designated',
      for atf_machine_pointer  use 'machine_pointer',
      for atf_full             use 'full',
      for atf_security_level   use 'security_level',
      for atf_delta            use 'delta',
      for atf_epsilon          use 'epsilon',
      for atf_positive_inf     use 'positive_infinity',
      for atf_negative_inf     use 'negative_infinity',
      for atf_not_a_number     use 'not_a_number',
      for atf_as_ancestor      use 'as_ancestor',
      for atf_native_alignment use 'native_alignment',
      for atf_inverse_delta    use 'inverse_delta'];
{%ON}

type
  -- skutečné atributy objektů
  tattractual      = enum
      ata_none;                                  -- nic, neurčeno, není jazykem definováno
      -- atributy (libovolného) typu
      ata_type_type;
      ata_type_base;
      ata_type_root_base;
      ata_type_ancestor;
      ata_type_root_ancestor;
      ata_type_size;
      ata_type_tag;
      -- atributy proměnné
      ata_var_unchecked;
      ata_var_position;
      -- atributy zprávy
      ata_message_tag;
      -- atributy modulu
      ata_module_ancestor;
      ata_module_root_ancestor;
      -- atributy ordinálních typů
      ata_ord_range;
      ata_ord_first;
      ata_ord_last;
      ata_ord_ord;
      ata_ord_bits;
      -- real types attributes
      ata_float_first;
      ata_float_last;
      ata_fixed_first;
      ata_fixed_last;
      ata_float_delta;
      ata_fixed_delta;
      ata_float_epsilon;
      ata_fixed_epsilon;
      ata_float_positive_inf;
      ata_float_negative_inf;
      ata_float_not_a_number;
      ata_float_inverse_delta;
      ata_fixed_inverse_delta;
      -- atributy logických typů
      ata_logical_true;
      ata_logical_false;
      -- atributy pole
      ata_array_range;
      ata_array_first;
      ata_array_last;
      ata_array_length;
      ata_array_alignment;
      -- atributy řetězce
      ata_string_range;
      ata_string_first;
      ata_string_last;
      ata_string_length;
      ata_string_alignment;
      -- atributy recordu
      ata_record_component;
      ata_record_components;
      ata_record_alignment;
      ata_record_native_alignment;
      -- atributy pointeru
      ata_pointer_machine_pointer;
      -- atributy množiny
      ata_set_full;
      -- atributy ordinálních přímých hodnot
      ata_imm_ord_image;
      -- atributy výrazu typu tag
      ata_tag_designated;
      -- atributy určené tagem
      ata_designated_size;
      ata_designated_first;
      ata_designated_last;
      -- atributy obecného výrazu
      ata_expr_name;
      ata_expr_tag;                              -- statický/dynamický atribut :tag
      ata_expr_tagged;                           -- statický/dynamický atribut :tagged
      ata_expr_size;                             -- dynamický atribut :size
      ata_expr_last;                             -- dynamický atribut :last
      ata_expr_as_ancestor;                      -- atribut :as_ancestor
      -- obecné atributy
      ata_security_level;
      end enum;
  tattractualset   = set of tattractual;

var
{%OFF}
  -- skutečné atributy objektů
  tattractual_export_id : const array tattractual of t_char32str := [
      for ata_none                    use 'none',
      for ata_type_type               use 'type_type',
      for ata_type_base               use 'type_base',
      for ata_type_root_base          use 'type_root_base',
      for ata_type_ancestor           use 'type_ancestor',
      for ata_type_root_ancestor      use 'type_root_ancestor',
      for ata_type_size               use 'type_size',
      for ata_type_tag                use 'type_tag',
      for ata_var_unchecked           use 'var_unchecked',
      for ata_var_position            use 'var_position',
      for ata_message_tag             use 'message_tag',
      for ata_module_ancestor         use 'module_ancestor',
      for ata_module_root_ancestor    use 'module_root_ancestor',
      for ata_ord_range               use 'ord_range',
      for ata_ord_first               use 'ord_first',
      for ata_ord_last                use 'ord_last',
      for ata_ord_ord                 use 'ord_ord',
      for ata_ord_bits                use 'ord_bits',
      for ata_float_first             use 'float_first',
      for ata_float_last              use 'float_last',
      for ata_fixed_first             use 'fixed_first',
      for ata_fixed_last              use 'fixed_last',
      for ata_float_delta             use 'float_delta',
      for ata_fixed_delta             use 'fixed_delta',
      for ata_float_epsilon           use 'float_epsilon',
      for ata_fixed_epsilon           use 'fixed_epsilon',
      for ata_float_positive_inf      use 'float_positive_infinity',
      for ata_float_negative_inf      use 'float_negative_infinity',
      for ata_float_not_a_number      use 'float_not_a_number',
      for ata_float_inverse_delta     use 'float_inverse_delta',
      for ata_fixed_inverse_delta     use 'fixed_inverse_delta',
      for ata_logical_true            use 'logical_true',
      for ata_logical_false           use 'logical_false',
      for ata_array_range             use 'array_range',
      for ata_array_first             use 'array_first',
      for ata_array_last              use 'array_last',
      for ata_array_length            use 'array_length',
      for ata_array_alignment         use 'array_alignment',
      for ata_string_range            use 'string_range',
      for ata_string_first            use 'string_first',
      for ata_string_last             use 'string_last',
      for ata_string_length           use 'string_length',
      for ata_string_alignment        use 'string_alignment',
      for ata_record_component        use 'record_component',
      for ata_record_components       use 'record_components',
      for ata_record_alignment        use 'record_alignment',
      for ata_record_native_alignment use 'record_native_alignment',
      for ata_pointer_machine_pointer use 'pointer_machine_pointer',
      for ata_set_full                use 'set_full',
      for ata_imm_ord_image           use 'imm_ord_image',
      for ata_tag_designated          use 'tag_designated',
      for ata_designated_size         use 'designated_size',
      for ata_designated_first        use 'designated_first',
      for ata_designated_last         use 'designated_last',
      for ata_expr_name               use 'expr_name',
      for ata_expr_tag                use 'expr_tag',
      for ata_expr_tagged             use 'expr_tagged',
      for ata_expr_size               use 'expr_size',
      for ata_expr_last               use 'expr_last',
      for ata_expr_as_ancestor        use 'expr_as_ancestor',
      for ata_security_level          use 'security_level'];
{%ON}

type
  -- třída atributu
  tattrclass       = enum
      atc_static;                                -- statický
      atc_dynamic;                               -- dynamický
    --atc_generic;                               -- generický
      end enum;

var
  -- třída atributu
{%OFF}
  tattrclass_export_id : const array tattrclass of t_char32str := [
      for atc_static  use 'static',
      for atc_dynamic use 'dynamic'];
{%ON}

type
  -- popis atributu
  tattrdesc        = record
      txt          : tshortident;                -- identifikátor atributu
      attr         : tattrformal;                -- atribut
      end record;

var
  tattrclasstxt    : const array tattrclass of t_char32str := [
      for atc_static  use 'static',
      for atc_dynamic use 'dynamic'];
    --for atc_generic use 'generic'];

  rtattribtxt      : const array rtattrib of t_char32str := [
      for rta_instance use '^instance',
      for rta_tag      use 'TAG',
      for rta_size     use 'SIZE',
      for rta_last     use 'LAST',
      for rta_length   use 'LENGTH'];

var
  -- překladová tabulka identifikátor --> atribut
  tattrtab         : const array 0..34 of tattrdesc := [
      [for txt use 'ALIGNMENT'       , for attr use atf_alignment       ],
      [for txt use 'ANCESTOR'        , for attr use atf_ancestor        ],
      [for txt use 'AS_ANCESTOR'     , for attr use atf_as_ancestor     ],
      [for txt use 'BASE'            , for attr use atf_base            ],
      [for txt use 'BITS'            , for attr use atf_bits            ],
      [for txt use 'COMPONENT'       , for attr use atf_component       ],
      [for txt use 'COMPONENTS'      , for attr use atf_components      ],
      [for txt use 'DELTA'           , for attr use atf_delta           ],
      [for txt use 'DESIGNATED'      , for attr use atf_designated      ],
      [for txt use 'EPSILON'         , for attr use atf_epsilon         ],
      [for txt use 'FALSE'           , for attr use atf_false           ],
      [for txt use 'FIRST'           , for attr use atf_first           ],
      [for txt use 'FULL'            , for attr use atf_full            ],
      [for txt use 'IMAGE'           , for attr use atf_image           ],
      [for txt use 'INVERSE_DELTA'   , for attr use atf_inverse_delta   ],
      [for txt use 'LAST'            , for attr use atf_last            ],
      [for txt use 'LENGTH'          , for attr use atf_length          ],
      [for txt use 'MACHINE_POINTER' , for attr use atf_machine_pointer ],
      [for txt use 'NAME'            , for attr use atf_name            ],
      [for txt use 'NATIVE_ALIGNMENT', for attr use atf_native_alignment],
      [for txt use 'NEGATIVE_INFINITY',for attr use atf_negative_inf    ],
      [for txt use 'NOT_A_NUMBER'    , for attr use atf_not_a_number    ],
      [for txt use 'ORD'             , for attr use atf_ord             ],
      [for txt use 'POSITION'        , for attr use atf_position        ],
      [for txt use 'POSITIVE_INFINITY',for attr use atf_positive_inf    ],
      [for txt use 'RANGE'           , for attr use atf_range           ],
      [for txt use 'ROOT_ANCESTOR'   , for attr use atf_root_ancestor   ],
      [for txt use 'ROOT_BASE'       , for attr use atf_root_base       ],
      [for txt use 'SECURITY_LEVEL'  , for attr use atf_security_level  ],
      [for txt use 'SIZE'            , for attr use atf_size            ],
      [for txt use 'TAG'             , for attr use atf_tag             ],
      [for txt use 'TAGGED'          , for attr use atf_tagged          ],
      [for txt use 'TRUE'            , for attr use atf_true            ],
      [for txt use 'TYPE'            , for attr use atf_type            ],
      [for txt use 'UNCHECKED'       , for attr use atf_unchecked       ]];

----------------------------------------------------------------------------------------------------
procedure a_getlangattr (
    id             : in tentityident;            -- identifikátor
    attr           : out tattrformal);           -- jazykem definovaný atribut
-- Podle identifikátoru určí jazykem definovaný atribut.
----------------------------------------------------------------------------------------------------
procedure a_attrid (
    curr           : in tcontext;                -- překládaný prvek
    id             : out pentityident);          -- identifikátor atributu
-- Přečte ze vstupu identifikátor atributu.
----------------------------------------------------------------------------------------------------
procedure islangattr (
    id             : in tentityident)            -- identifikátor
                   return t_logical;             -- T-jazykem definovaný atribut
-- True, je-li zadaný atribut jazykem/implementací definovaný.
----------------------------------------------------------------------------------------------------

end cc_attr;