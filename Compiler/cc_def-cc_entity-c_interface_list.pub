----------------------------------------------------------------------------------------------------
class public c_interface_list = extend c_list; expose c_collectable;
-- Seznam interfaců třídy.
----------------------------------------------------------------------------------------------------
    
----------------------------------------------------------------------------------------------------
static add_interface (
    pexpr          : in p_flex_class;            -- výraz obsahující jméno třídy
    pclass         : in pentity_type);           -- třída reprezentující interface.
-- Přidá do seznamu interfaců zadanou třídu [pexpr]/[pclass].
----------------------------------------------------------------------------------------------------
static add_raw_interface (
    piface         : in p_class_interface);      -- interface
-- Přidá do seznamu interfaců zadaný interface.
-- Pokud [piface]=nil, zpusobi interni chybu
----------------------------------------------------------------------------------------------------
static find_interface (
    pclass         : in pentity_type)            -- třída reprezentující interface.
    return p_class_interface;
-- Najde interface příslušející dané třídě.
----------------------------------------------------------------------------------------------------
static get_native_interface return p_class_interface;
-- Vrátí nativní interface třídy.
----------------------------------------------------------------------------------------------------
static get_exposed_interfaces (
    it             : out c_list_iterator);
-- Připraví iterátor pro zpracování všech exposovaných interfaců.
----------------------------------------------------------------------------------------------------
static get_all_interfaces (
    it             : out c_list_iterator);
-- Připraví iterátor pro zpracování všech (nativního i exposovaných) interfaců.
----------------------------------------------------------------------------------------------------
static get_interface_by_index (
    iface_index    : in t_unsigned)              -- index hledaného interfacu
    return p_class_interface;                    -- nalezený interface
-- Najde interface podle jeho indexu. Pokud interface s daným indexem neexistuje, vrátí NIL.
----------------------------------------------------------------------------------------------------
static exposed_interfaces return t_unsigned;
-- Počet exposovaných interfaců.
----------------------------------------------------------------------------------------------------
static is_native_interface (
    pclass         : in pentity_type)            -- třída reprezentující interface
    return t_logical;                            -- T-je to nativní interface této třídy
-- Zjistí, je-li zadaná třída nativní interface této třídy. Za nativní interface se považuje
-- i předek této třídy.
----------------------------------------------------------------------------------------------------
static is_exposed_interface (
    pclass         : in pentity_type)            -- třída reprezentující interface
    return t_logical;                            -- T-je to exposovaný interface této třídy
-- Zjistí, je-li zadaná třída exposovaný interface této třídy.
----------------------------------------------------------------------------------------------------
static is_interface (
    pclass         : in pentity_type)            -- třída reprezentující interface
    return t_logical;                            -- T-je to interface této třídy
-- Zjistí, je-li zadaná třída (nativní nebo exposovaný) interface této třídy.
----------------------------------------------------------------------------------------------------
static merge_interface_list (
    plist          : in p_interface_list);       -- seznam interfaců k zamergování
-- Zamerguje dodaný seznam interfaců do aktuálního. Ignoruje nativní interface (první v pořadí).
----------------------------------------------------------------------------------------------------

end c_interface_list;