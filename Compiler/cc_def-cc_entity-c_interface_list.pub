----------------------------------------------------------------------------------------------------
class public c_interface_list = extend c_list;
-- Seznam interfac– t©¡dy.
----------------------------------------------------------------------------------------------------
    
----------------------------------------------------------------------------------------------------
static add_interface (
    pexpr          : in p_flex_class;            -- v˜raz obsahuj¡c¡ jm‚no t©¡dy
    pclass         : in pentity_type);           -- t©¡da reprezentuj¡c¡ interface.
-- P©id  do seznamu interfac– zadanou t©¡du [pexpr]/[pclass].
----------------------------------------------------------------------------------------------------
static find_interface (
    pclass         : in pentity_type)            -- t©¡da reprezentuj¡c¡ interface.
    return p_class_interface;
-- Najde interface p©¡slu¨ej¡c¡ dan‚ t©¡dˆ.
----------------------------------------------------------------------------------------------------
static get_native_interface return p_class_interface;
-- Vr t¡ nativn¡ interface t©¡dy.
----------------------------------------------------------------------------------------------------
static get_exposed_interfaces (
    it             : out c_list_iterator);
-- P©iprav¡ iter tor pro zpracov n¡ v¨ech exposovan˜ch interfac–.
----------------------------------------------------------------------------------------------------
static get_all_interfaces (
    it             : out c_list_iterator);
-- P©iprav¡ iter tor pro zpracov n¡ v¨ech (nativn¡ho i exposovan˜ch) interfac–.
----------------------------------------------------------------------------------------------------
static exposed_interfaces return t_unsigned;
-- Po‡et exposovan˜ch interfac–.
----------------------------------------------------------------------------------------------------
static is_native_interface (
    pclass         : in pentity_type)            -- t©¡da reprezentuj¡c¡ interface
    return t_logical;                            -- T-je to nativn¡ interface t‚to t©¡dy
-- Zjist¡, je-li zadan  t©¡da nativn¡ interface t‚to t©¡dy. Za nativn¡ interface se pova‘uje
-- i p©edek t‚to t©¡dy.
----------------------------------------------------------------------------------------------------
static is_exposed_interface (
    pclass         : in pentity_type)            -- t©¡da reprezentuj¡c¡ interface
    return t_logical;                            -- T-je to exposovan˜ interface t‚to t©¡dy
-- Zjist¡, je-li zadan  t©¡da exposovan˜ interface t‚to t©¡dy.
----------------------------------------------------------------------------------------------------
static is_interface (
    pclass         : in pentity_type)            -- t©¡da reprezentuj¡c¡ interface
    return t_logical;                            -- T-je to interface t‚to t©¡dy
-- Zjist¡, je-li zadan  t©¡da (nativn¡ nebo exposovan˜) interface t‚to t©¡dy.
----------------------------------------------------------------------------------------------------
static merge_interface_list (
    plist          : in p_interface_list);       -- seznam interfac– k zamergov n¡
-- Zamerguje dodan˜ seznam interfac– do aktu ln¡ho. Ignoruje nativn¡ interface (prvn¡ v po©ad¡).
----------------------------------------------------------------------------------------------------

end c_interface_list;
