----------------------------------------------------------------------------------------------------
module public ca_type =
-- P©eklada‡ Flexu.
-- Generov n¡ podprogram– pro inicializaci a finalizaci typ–.
----------------------------------------------------------------------------------------------------
-- Ondra : 18.06.2002 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  cx_expr,
  cx_expr.cx_def,
  cb_block,
  cb_block.cb_def;

type
  -- gener tor prefixu
  tprefixproc      = procedure (
      curr         : in tcontext;                -- kontext
      _data        : in unchecked;               -- dopl¤uj¡c¡ £daje
      ptyp         : in pentity_type;            -- typ promˆnn‚ (t©¡da)
      xinfo        : in expinfo)                 -- kontext
      return pexpnode;                           -- vygenerovan˜ prefix
  pprefixproc      = ^tprefixproc;

type
  -- rozsah prov dˆn¡
  texecuterange    = record 
      low          : pexpnode;                   -- doln¡ mez
      high         : pexpnode;                   -- horn¡ mez
      end record;            

----------------------------------------------------------------------------------------------------
procedure a_type (
    typ            : in out tentity_type);       -- analyzovan˜ symbol
-- Anal˜za typu. Pokud je to pot©eba, tak vygeneruje podprogramy pro
-- inicializaci, finalizaci a adjustment zadan‚ho typu.
----------------------------------------------------------------------------------------------------
procedure a_type_make_call_qualified (
    typ            : in tentity_type;            -- analyzovan˜ symbol
    binfo          : in blinfo;                  -- kontext generov n¡ p©¡kaz–
    xinfo          : in expinfo;                 -- kontext generov n¡ v˜razu
    tst            : in tspectype;               -- druh volan‚ speci ln¡ metody
    prefix         : in pexpnode;                -- prefix vol n¡ (instance t©¡dy)
    crange         : in texecuterange;           -- rozsah prov dˆn¡ podprogramu  
    instance       : in pexpnode)                -- parametr vol n¡ (instance typu)
    return pblcmd;                               -- sestaven‚ vol n¡
-- Sestav¡ kvalifikovan‚ vol n¡ podprogramu pro inicializace, finalizace nebo
-- adjustment zadan‚ho typu/t©¡dy.
----------------------------------------------------------------------------------------------------
procedure a_type_make_call (
    curr           : in tcontext;                -- kontext          
    binfo          : in blinfo;                  -- kontext generov n¡ p©¡kaz–
    xinfo          : in expinfo;                 -- kontext generov n¡ v˜razu
    tst            : in tspectype;               -- druh volan‚ speci ln¡ metody
    typ            : in tentity_type;            -- typ, jeho‘ metoda se bude volat
    crange         : in texecuterange;           -- rozsah prov dˆn¡ podprogramu  
    instance       : in pexpnode)                -- instance typu
    return pblcmd;                               -- sestaven‚ vol n¡
-- Sestav¡ nekvalifikovan‚ vol n¡ podprogramu pro inicializace, finalizace
-- nebo adjustment zadan‚ho typu.
-- Nelze pou‘¡t pro t©¡dy.
----------------------------------------------------------------------------------------------------
procedure a_type_make_call_ancestor (
    typ            : in tentity_type;            -- analyzovan˜ symbol
    binfo          : in blinfo;                  -- kontext generov n¡ p©¡kaz–
    xinfo          : in expinfo;                 -- kontext generov n¡ v˜razu
    crange         : in texecuterange;           -- rozsah prov dˆn¡ podprogramu  
    tst            : in tspectype)               -- druh volan‚ speci ln¡ metody
    return pblcmd;                               -- sestaven‚ vol n¡
-- Sestav¡ vol n¡ podprogramu pro inicializace, finalizace nebo adjustment
-- p©edka zadan‚ho typu. Dohled  prvn¡ speci ln¡ metodu v hierarchii p©edk–.
-- Pokud ‘ dnou nenalezne, ‘ dn‚ vol n¡ nevygeneruje. Jako instanci dosad¡
-- THIS.
-- Lze pou‘¡t pouze pro t©¡dy.
----------------------------------------------------------------------------------------------------
procedure a_type_class_entry (
    curr           : in tcontext;                -- kontext          
    prefix         : in pprefixproc;             -- gener tor prefixu
    data           : in unchecked;               -- dopl¤uj¡c¡ £daje pro gener tor
    ptyp           : in pentity_type;            -- typ promˆnn‚ (t©¡da)
    list           : in out bllist;              -- seznam p©¡kaz–
    binfo          : in blinfo;                  -- kontext generov n¡ p©¡kaz–
    xinfo          : in expinfo);                -- kontext generov n¡ v˜razu
-- Inicializace instance t©¡dy a vol n¡ ENTRY.
----------------------------------------------------------------------------------------------------
procedure a_type_interface_entry (
    curr           : in tcontext;                -- kontext          
    prefix         : in pprefixproc;             -- gener tor prefixu
    data           : in unchecked;               -- dopl¤uj¡c¡ £daje pro gener tor
    interface      : in p_class_interface;       -- interface t©¡dy     
    list           : in out bllist;              -- seznam p©¡kaz–
    binfo          : in blinfo;                  -- kontext generov n¡ p©¡kaz–
    xinfo          : in expinfo);                -- kontext generov n¡ v˜razu
-- Inicializace instance interfacu a vol n¡ ENTRY.
----------------------------------------------------------------------------------------------------
procedure a_type_class_exit (
    curr           : in tcontext;                -- kontext             
    prefix         : in pprefixproc;             -- gener tor prefixu
    data           : in unchecked;               -- dopl¤uj¡c¡ £daje pro gener tor
    ptyp           : in pentity_type;            -- typ promˆnn‚ (t©¡da)
    list           : in out bllist;              -- seznam p©¡kaz–
    binfo          : in blinfo;                  -- kontext generov n¡ p©¡kaz–
    xinfo          : in expinfo);                -- kontext generov n¡ v˜razu
-- Finalizace instance t©¡dy - vol n¡ EXIT.
----------------------------------------------------------------------------------------------------
procedure a_type_class_adjust (
    curr           : in tcontext;                -- kontext            
    prefix         : in pprefixproc;             -- gener tor prefixu
    data           : in unchecked;               -- dopl¤uj¡c¡ £daje pro gener tor
    ptyp           : in pentity_type;            -- typ promˆnn‚ (t©¡da)
    list           : in out bllist;              -- seznam p©¡kaz–
    binfo          : in blinfo;                  -- kontext generov n¡ p©¡kaz–
    xinfo          : in expinfo);                -- kontext generov n¡ v˜razu
-- Adjust instance t©¡dy - vol n¡ ADJUST.
----------------------------------------------------------------------------------------------------
procedure a_type_class_rollback (
    curr           : in tcontext;                -- kontext            
    prefix         : in pprefixproc;             -- gener tor prefixu
    data           : in unchecked;               -- dopl¤uj¡c¡ £daje pro gener tor
    ptyp           : in pentity_type;            -- typ promˆnn‚ (t©¡da)
    list           : in out bllist;              -- seznam p©¡kaz–
    binfo          : in blinfo;                  -- kontext generov n¡ p©¡kaz–
    xinfo          : in expinfo);                -- kontext generov n¡ v˜razu
-- Adjust instance t©¡dy - vol n¡ ROLLBACK.
----------------------------------------------------------------------------------------------------
procedure a_type_class_commit (
    curr           : in tcontext;                -- kontext            
    prefix         : in pprefixproc;             -- gener tor prefixu
    data           : in unchecked;               -- dopl¤uj¡c¡ £daje pro gener tor
    ptyp           : in pentity_type;            -- typ promˆnn‚ (t©¡da)
    list           : in out bllist;              -- seznam p©¡kaz–
    binfo          : in blinfo;                  -- kontext generov n¡ p©¡kaz–
    xinfo          : in expinfo);                -- kontext generov n¡ v˜razu
-- Adjust instance t©¡dy - vol n¡ COMMIT.
----------------------------------------------------------------------------------------------------
procedure get_index_type_range (
    context        : in tcontext;                -- kontext
    xinfo          : in expinfo;                 -- kontext
    typ            : in pentity_type;            -- typ
    crange         : out texecuterange           -- rozsah typu
    );
-- Vr t¡ rozsah indexovan‚ho typu.
----------------------------------------------------------------------------------------------------

end ca_type;
