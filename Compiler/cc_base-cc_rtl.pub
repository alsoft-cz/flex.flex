----------------------------------------------------------------------------------------------------
module public cc_rtl =
-- P©eklada‡ Flexu.
-- Vazba na run-time knihovnu.
----------------------------------------------------------------------------------------------------
-- Ondra : 11.11.2001 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  standard,
  cc_def,cc_def.cc_entity;

type
  -- intern¡ entity p©eklada‡e
  t_rtl_entity     = enum
      rtl_unknown;
      ----- >>> tady za‡¡naj¡ procedury >>> --------------------------------------------------------
      -- ©¡zen¡ programu
      rtl_terminate;                             
      -- spr va task–
      rtl_register_task;
      rtl_unregister_task;
      -- spr va pamˆti
      rtl_alloc;
      rtl_alloc_and_fillz;
      rtl_realloc;
      rtl_free;
      rtl_fillz;
      -- ©etˆzcov‚ operace
      --rtl_str_copy;
      -- v˜jimky
      rtl_init_xframe;
      rtl_end_xframe;
      rtl_end_topmost_xframe;
      rtl_set_exception;
      rtl_raise_exception;
      rtl_discard_exception;
      rtl_check_code;
      rtl_unhandled_exception;
      -- sequential bloky
      rtl_begin_sequential;
      rtl_end_sequential;
      -- t©¡dy
      rtl_call_init;
      rtl_call_entry;
      rtl_call_exit;
      rtl_call_adjust;
      rtl_call_commit;
      rtl_call_rollback;
      rtl_ancestor_init;
      rtl_ancestor_entry;
      rtl_ancestor_exit;
      rtl_ancestor_adjust;
      rtl_ancestor_commit;
      rtl_ancestor_rollback;                     
      -- run-time kontroly
      rtl_handle_constraint_error;
      -- pr ce s tagy
      rtl_get_last_from_tag;
      rtl_get_size_from_tag;                     
      ----- <<< tady kon‡¡ procedury <<< -----------------------------------------------------------
      ----- >>> tady za‡¡naj¡ zpr vy >>> -----------------------------------------------------------
      -- jazykem definovan‚ v˜jimky
      rtl_program_error;                  
      rtl_memory_error;     
      rtl_tasking_error;    
      rtl_numeric_error;    
      rtl_constraint_error;
      rtl_implementation_error;
      rtl_generic_error;
      rtl_abstract_error;                 
      ----- <<< tady kon‡¡ zpr vy <<< --------------------------------------------------------------
      end enum;

  -- intern¡ entity p©eklada‡e typu procedura
  t_rtl_entity_subprogram = t_rtl_entity range rtl_terminate..rtl_get_size_from_tag;

  -- intern¡ entity p©eklada‡e typu zpr va
  t_rtl_entity_message    = t_rtl_entity range rtl_program_error..rtl_abstract_error;

  -- kontroly konzistence
  #if t_rtl_entity_subprogram:first<>succ rtl_unknown then;
    #display 'Tabulka intern¡ch entit: Procedury neza‡¡naj¡ na konci tabulky, podivn‚';
    #end if;
  #if succ t_rtl_entity(t_rtl_entity_subprogram:last)<>t_rtl_entity(t_rtl_entity_message:first) then;
    #display 'Tabulka intern¡ch entit: Zpr vy nen sleduj¡ ihned za procedurami, podivn‚';
    #end if;
  #if t_rtl_entity:last<>t_rtl_entity_message:last then;
    #display 'Tabulka intern¡ch entit: Zpr vy nekon‡¡ na konci tabulky, podivn‚';
    #end if;

----------------------------------------------------------------------------------------------------
procedure rtl_id_to_entity (
    context        : in tcontext;                -- aktu ln¡ kontext
    id             : in tentityident;            -- identifik tor intern¡ entity p©eklada‡e
    rtl            : out t_rtl_entity;           -- intern¡ entita p©eklada‡e
    etype          : out tentitytype);           -- typ skute‡n‚ entity
-- P©evede identifik tor na intern¡ entitu p©eklada‡e a typ skute‡n‚ entity. Pokud nen¡ entita
-- s dan˜m identifik torem definov na, vyvol  varov n¡ [cw_unknown_assign], v [rtl] vr t¡ hodnotu
-- [rtl_unknown] a v [etype] hodnotu [et_undef].
----------------------------------------------------------------------------------------------------
procedure rtl_set_entity (
    rtl            : in t_rtl_entity;            -- intern¡ entita p©eklada‡e
    entity         : in pentity);                -- p©i©azovan  entita
-- P©i©ad¡ intern¡ entitu.
----------------------------------------------------------------------------------------------------
procedure rtl_get_entity_id (
    rtl            : in t_rtl_entity;            -- intern¡ entita
    id             : out pentityident);          -- identifik tor
-- Vr t¡ identifik tor intern¡ entity.
----------------------------------------------------------------------------------------------------
procedure rtl_get_entity (
    rtl            : in t_rtl_entity;            -- intern¡ procedura
    entity         : out pentity);               -- p©i©azen  entita
-- Vr t¡ intern¡ entitu.
----------------------------------------------------------------------------------------------------

end cc_rtl;