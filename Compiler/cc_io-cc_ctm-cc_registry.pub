----------------------------------------------------------------------------------------------------
module public cc_registry =
-- Překladač Flexu.
-- CTM ID registry pro export a import compile-time metadat.
----------------------------------------------------------------------------------------------------

-- dopředné deklarace
class c_ctm_id_partitioned_registry; type p_ctm_id_partitioned_registry = ^c_ctm_id_partitioned_registry;



----------------------------------------------------------------------------------------------------
class public c_ctm_id_partitioned_registry = extend c_hash_table;
-- Exportní CTM ID registry rozdělené podle kompilačních partition.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    static get_ctm_entity_id (
        entity     : in pentity)                 -- zkoumaná entita
        return t_ctm_entity_id;                  -- CTM ID dodané entity
    -- Zjistí CTM ID zadané entity.
    -- Pokud entita ještě nemá přiděleno CTM ID, zapamatuje si jej.
    ------------------------------------------------------------------------------------------------
    static get_ctm_region_id (
        region     : in pregion)                 -- zkoumaný region
        return t_ctm_region_id;                  -- CTM ID dodaného regionu
    -- Zjistí CTM ID zadaného regionu.
    -- Pokud region ještě nemá přiděleno CTM ID, zapamatuje si jej.
    ------------------------------------------------------------------------------------------------
    static has_ctm_entity_id (
        entity     : in pentity)                 -- zkoumaná entita
        return t_logical;
    -- Zjistí zda ma [entity] pridelen CTM ID
    ------------------------------------------------------------------------------------------------
    static has_ctm_region_id (
        region     : in pregion)                 -- zkoumaný region
        return t_logical;                        
    -- Zjistí zda ma [region] pridelen CTM ID
    ------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    class public c_ctm_id_partitioned_registry_iterator =
    -- Speciální dvouúrovňový iterátor entit přes všechny evidované partition.
    ------------------------------------------------------------------------------------------------

        --------------------------------------------------------------------------------------------
        static init (
            registry : p_ctm_id_partitioned_registry); -- související CTM ID registry
        -- Inicializace iterátoru.
        --------------------------------------------------------------------------------------------
        static get_partition (
            partition : out t_partition_id;      -- iterovaná partition
            root   : out pentity_compile)        -- kořenová entita partition
            return t_logical;                    -- T-parametr [partition] je platný
        -- Iteruje partitiony.
        --------------------------------------------------------------------------------------------
        static get_entity (
            entity : out pentity;                -- iterovaná entity
            ctm_id : out t_ctm_entity_id)        -- a její CTM ID
            return t_logical;                    -- T-parametr [partition] je platný
        -- Iteruje entity v rámci poslední iterované partition.
        --------------------------------------------------------------------------------------------

        end c_ctm_id_partitioned_registry_iterator;

    end c_ctm_id_partitioned_registry;


                            
----------------------------------------------------------------------------------------------------
class public c_ctm_id_import_registry =
-- Importní CTM ID registry bez rolišení podle kompilačních partition.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    static get_entity (
        ctmid      : in t_ctm_entity_id)          -- CTM ID zkoumaného regionu
        return pentity;                          -- region doaného CTM ID
    -- Zjistí entitu zadané CTM ID.
    -- Pokud CTM ID nemá přidělenou entitu, vrati [nil].
    ------------------------------------------------------------------------------------------------
    static get_region (
        ctmid      : in t_ctm_region_id)         -- CTM ID zkoumaného regionu
        return pregion;                          -- region doaného CTM ID
    -- Zjistí region zadané CTM ID.
    -- Pokud CTM ID ještě nemá přidělen region, vrati [nil].
    ------------------------------------------------------------------------------------------------
    static create_entity (
        ctmid      : in t_ctm_entity_id;         -- CTM ID
        etype      : in tentitytype;             -- typ
        entity     : out pentity);               -- vytvořená entita
    -- Vytvori novou entitu a zapamatuje si jeji CTM ID.
    ------------------------------------------------------------------------------------------------
    static create_entity_type (
        ctmid      : in t_ctm_entity_id;         -- CTM ID
        dtype      : in tdatatype;               -- datovy typ
        entity     : out pentity_type);          -- vytvořený typ
    -- Vytvori novou entitu typu typ a zapamatuje si jeji CTM ID.
    ------------------------------------------------------------------------------------------------
    static create_region (
        ctmid      : in t_ctm_region_id;         -- CTM ID
        context    : in out tcontext;            -- kontext
        rtype      : in tregiontype;             -- typ
        region     : out pregion;                -- vytvořený region
        region_context : out tcontext);          -- kontext vytvořeného regionu
    -- Vytvori novy region a zapamatuje si jeho CTM ID.
    -- Sestaví kontext nově založeného regionu. Region zařadí do hierarchické struktury regionů
    -- do aktuálního kontextu. Pokud je aktuální kontext neúplný (neobsahuje region), zařadí ho
    -- jako primární kontext související entity a dodaný kontext [context] doplní.
    ------------------------------------------------------------------------------------------------
    static register_entity (
        ctmid      : in t_ctm_entity_id;         -- CTM ID
        entity     : in pentity);                -- existující entita
    -- Zaregistruje existující entitu pod dodaným CTM ID.
    ------------------------------------------------------------------------------------------------
    
    end c_ctm_id_import_registry;

end cc_registry;