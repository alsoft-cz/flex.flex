----------------------------------------------------------------------------------------------------
module public cc_formatters =
-- Překladač Flexu.
-- Formátovače pro zápis a čtení compile-time metadat.
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
class public c_ctm_binary_writer = extend c_stream_generic_writer;
-- Binární writer compile-time metadat.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    #template def_write (method,param_type);
    ------------------------------------------------------------------------------------------------

      ----------------------------------------------------------------------------------------------
      static method (
          data     : in param_type) 
      -- Zapíše do výstupu hodnotu typu [param_type].
      ----------------------------------------------------------------------------------------------

      #end def_write;

    ------------------------------------------------------------------------------------------------
    def_write(write_cr               ,t_ctm_record_tag);
    def_write(write_ci               ,t_ctm_id);
    def_write(write_uniint           ,tuniint);
    def_write(write_unichar          ,tunichar);
    def_write(write_unireal          ,tunireal);
    def_write(write_unilogical       ,tunilogical);
    def_write(write_unidata_addr     ,tunidata_addr);
    def_write(write_unidata_size     ,tunidata_size);
    def_write(write_unidata_bitsize  ,tunidata_bitsize);
    def_write(write_unicode_addr     ,tunicode_addr);
    def_write(write_unicode_size     ,tunicode_size);
    def_write(write_visible          ,tentityvisible);
    def_write(write_logical          ,t_logical);
    
    def_write(write_unsigned8        ,t_unsigned8);
    def_write(write_unsigned32       ,t_unsigned32);
    def_write(write_unsigned         ,t_unsigned);
    def_write(write_char32           ,t_char32);
    def_write(write_partition_type   ,t_partition_type);
    def_write(write_partition_result ,t_partition_result);
    def_write(write_immclass         ,timmclass);
    def_write(write_rtattribset      ,rtattribset);
    def_write(write_parammode        ,parammode);
    def_write(write_parampass        ,parampass);
    def_write(write_memclass         ,memclass);
    def_write(write_varflagset       ,varflagset);
    def_write(write_varmode          ,varmode);
    def_write(write_varaccess        ,varaccess);
    def_write(write_mem_aliased      ,t_mem_aliased);
    def_write(write_varimplements    ,varimplements);
    def_write(write_constflagset     ,constflagset);
    def_write(write_instancepass     ,tinstancepass);
    def_write(write_vcalltype        ,tvcalltype);
    def_write(write_virtualindex     ,tvirtualindex);
    def_write(write_spectype         ,tspectype);
    def_write(write_specobject       ,tspecobject);
    def_write(write_ooperarity       ,tooperarity);
    def_write(write_ooperator        ,tooperator);
    def_write(write_lexsym           ,lexsym);
    def_write(write_lexchar          ,lexchar);
    def_write(write_datatype         ,tdatatype);
    def_write(write_typederive       ,typederive);

    def_write(write_typeflagsset     ,typeflagsset);
    def_write(write_typecompat       ,typecompat);
    def_write(write_typeinit         ,typeinit);
    def_write(write_tintaritm        ,tintaritm);
    def_write(write_ptrflagsset      ,ptrflagsset);
    def_write(write_ptrclass         ,ptrclass);
    def_write(write_ptrbase          ,ptrbase);
    def_write(write_procflagset      ,procflagset);
    def_write(write_icallconvention  ,icallconvention);
    def_write(write_regiontype       ,tregiontype);
    def_write(write_with_mode        ,t_with_mode);
    def_write(write_with_level       ,t_with_level);
    def_write(write_entityvisible    ,tentityvisible);
    -- Metody pro zápis základních datových typů.
    ------------------------------------------------------------------------------------------------


    ------------------------------------------------------------------------------------------------
    #template def_write_char32str (method,param_type);
    ------------------------------------------------------------------------------------------------

      ----------------------------------------------------------------------------------------------
      static method (
          str      : in param_type)
      -- Zapíše do výstupu string typu [param_type]. Je-li [param_type]=nil, zapíše prázdný řetězec.
      ----------------------------------------------------------------------------------------------

      #end def_write_char32str;
    


    ------------------------------------------------------------------------------------------------
    def_write_char32str(write_entityident           ,pentityident);
    def_write_char32str(write_external_entity_ident ,p_external_entity_ident);
    def_write_char32str(write_qualified_entity_ident,p_qualified_entity_ident);
    def_write_char32str(write_lexcharustr           ,plexcharustr);
    ------------------------------------------------------------------------------------------------

    end c_ctm_binary_writer;



----------------------------------------------------------------------------------------------------
class public c_ctm_binary_reader = extend c_stream_generic_reader;
-- Binární reader compile-time metadat.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    #template def_reader (method,param_type);
    ------------------------------------------------------------------------------------------------

      ----------------------------------------------------------------------------------------------
      static method (
          data     : out param_type) 
      -- Precte ze vstupu hodnotu typu [param_type].
      ----------------------------------------------------------------------------------------------

      #end def_reader;

    ------------------------------------------------------------------------------------------------
    def_reader(read_cr               ,t_ctm_record_tag);
    def_reader(read_ci               ,t_ctm_id);
    def_reader(read_uniint           ,tuniint);
    def_reader(read_unichar          ,tunichar);
    def_reader(read_unireal          ,tunireal);
    def_reader(read_unilogical       ,tunilogical);
    def_reader(read_unidata_addr     ,tunidata_addr);
    def_reader(read_unidata_size     ,tunidata_size);
    def_reader(read_unidata_bitsize  ,tunidata_bitsize);
    def_reader(read_unicode_addr     ,tunicode_addr);
    def_reader(read_unicode_size     ,tunicode_size);
    def_reader(read_visible          ,tentityvisible);

    def_reader(read_logical          ,t_logical);
    def_reader(read_unsigned8        ,t_unsigned8);
    def_reader(read_unsigned32       ,t_unsigned32);
    def_reader(read_unsigned         ,t_unsigned);
    def_reader(read_char32           ,t_char32);

    def_reader(read_partition_type   ,t_partition_type);
    def_reader(read_partition_result ,t_partition_result);
    def_reader(read_immclass         ,timmclass);
    def_reader(read_rtattribset      ,rtattribset);
    def_reader(read_parammode        ,parammode);
    def_reader(read_parampass        ,parampass);
    def_reader(read_memclass         ,memclass);
    def_reader(read_varflagset       ,varflagset);
    def_reader(read_varmode          ,varmode);
    def_reader(read_varaccess        ,varaccess);
    def_reader(read_mem_aliased      ,t_mem_aliased);
    def_reader(read_varimplements    ,varimplements);
    def_reader(read_constflagset     ,constflagset);
    def_reader(read_instancepass     ,tinstancepass);
    def_reader(read_vcalltype        ,tvcalltype);
    def_reader(read_virtualindex     ,tvirtualindex);
    def_reader(read_spectype         ,tspectype);
    def_reader(read_specobject       ,tspecobject);
    def_reader(read_ooperarity       ,tooperarity);
    def_reader(read_ooperator        ,tooperator);
    def_reader(read_lexsym           ,lexsym);
    def_reader(read_lexchar          ,lexchar);
    def_reader(read_datatype         ,tdatatype);
    def_reader(read_typederive       ,typederive);

    def_reader(read_typeflagsset     ,typeflagsset);
    def_reader(read_typecompat       ,typecompat);
    def_reader(read_typeinit         ,typeinit);
    def_reader(read_tintaritm        ,tintaritm);
    def_reader(read_ptrflagsset      ,ptrflagsset);
    def_reader(read_ptrclass         ,ptrclass);
    def_reader(read_ptrbase          ,ptrbase);
    def_reader(read_procflagset      ,procflagset);
    def_reader(read_icallconvention  ,icallconvention);
    def_reader(read_regiontype       ,tregiontype);
    def_reader(read_with_mode        ,t_with_mode);
    def_reader(read_with_level       ,t_with_level);
    def_reader(read_entityvisible    ,tentityvisible);
    -- Metody pro cteni základních datových typů.
    ------------------------------------------------------------------------------------------------



    ------------------------------------------------------------------------------------------------
    #template def_read_char32str (method,param_type);
    ------------------------------------------------------------------------------------------------

      ----------------------------------------------------------------------------------------------
      static method (
          str      : out param_type)
      -- Precte ze vstupu string typu [param_type]. Je-li ve streamu prazdny retezec (velikosti 0), 
      -- vrati prázdný řetězec.
      ----------------------------------------------------------------------------------------------

      #end def_read_char32str;
    


    ------------------------------------------------------------------------------------------------
    def_read_char32str(read_entityident           ,pentityident);
    def_read_char32str(read_external_entity_ident ,p_external_entity_ident);
    def_read_char32str(read_qualified_entity_ident,p_qualified_entity_ident);
    def_read_char32str(read_lexcharustr           ,plexcharustr);
    ------------------------------------------------------------------------------------------------

    end c_ctm_binary_reader;



end cc_formatters;