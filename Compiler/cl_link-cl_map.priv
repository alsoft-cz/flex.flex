----------------------------------------------------------------------------------------------------
module private cl_map =
-- Překladač Flexu.
-- Generátor map filu.
----------------------------------------------------------------------------------------------------
-- Ondra : 17.04.2002 : Vytvořil
----------------------------------------------------------------------------------------------------

with
  cc_def.cc_var;

----------------------------------------------------------------------------------------------------
procedure map_start_segment =
-- Začátek segmentu.
----------------------------------------------------------------------------------------------------
var
  s                : t_char32str;

begin
  s:='Segment: '; s & name;
  listing^.write_line(s);
  listing^.start_indent;
  end map_start_segment;



----------------------------------------------------------------------------------------------------
procedure map_end_segment =
-- Konec segmentu.
----------------------------------------------------------------------------------------------------
begin
  listing^.end_indent;
  end map_end_segment;



----------------------------------------------------------------------------------------------------
procedure map_write_line =
-- Do map filu zapíše jeden řádek obecného textu.
----------------------------------------------------------------------------------------------------
begin
  listing^.write_line(_text);
  end map_write_line;



----------------------------------------------------------------------------------------------------
procedure map_exported_entity =
-- Do map filu zapíše informaci o exportované entitě.
----------------------------------------------------------------------------------------------------
begin
  listing^.write_line(qid);
  end map_exported_entity;



----------------------------------------------------------------------------------------------------
procedure map_static_variable =
-- Do map filu zapíše informaci o globální proměnné.
----------------------------------------------------------------------------------------------------
var
  s                : t_char32str;

begin
  s:='data ' & cpu^.unidata_addr_to_hex_string(addr) & " " & cpu^.unidata_size_to_hex_string(size) & " "; s & qid;
  listing^.write_line(s);
  end map_static_variable;



----------------------------------------------------------------------------------------------------
procedure map_automatic_variable =
-- Do map filu zapíše informaci o globální proměnné.
----------------------------------------------------------------------------------------------------

    ------------------------------------------------------------------------------------------------
    procedure itoax (
        x          : in t_signed) 
        return t_char32str =
    ------------------------------------------------------------------------------------------------
    with
      standard.conversions;

    begin
      if x>=0
        then result:="+" & unsigned_to_string(t_unsigned(+x),[for radix use 16]);
        else result:="-" & unsigned_to_string(t_unsigned(-x),[for radix use 16]);
        end if;
      end itoax;

var
  s                : t_char32str;

begin
  s:='data frame' & itoax(unidata_addr_to_signed(addr)) & " " & cpu^.unidata_size_to_hex_string(size) & " "; s & qid;
  listing^.write_line(s);
  end map_automatic_variable;



----------------------------------------------------------------------------------------------------
procedure map_start_subprogram =
-- Do map filu zapíše informaci o podprogramu.
----------------------------------------------------------------------------------------------------
with
  standard,console,conversions;

var
  s                : t_char32str;

begin
  -- adresa a jméno podprogramu
  s:='code ' & cpu^.unidata_addr_to_hex_string(addr) & " "; s & qid;
  listing^.write_line(s);
  listing^.start_indent;
  end map_start_subprogram;



----------------------------------------------------------------------------------------------------
procedure map_subprogram_lineinfo =
-- Řádkové informace.
----------------------------------------------------------------------------------------------------
with
  standard.classes,
  standard.classes.hash_tables,
  standard.strings,
  cc_def.cc_files,
  cc_def.cc_lexsym;

var
  s                : t_char32str;
  lastnum          : t_unsigned32;
  fname            : p_used_file;

begin
  -- vypsat řádkové informace
  lastnum:=0;
  if di.d<>nil then
    for i in di.d^:range loop
      -- nezměnil se od minula soubor ?
      if (lastnum<>di.d^[i].pos.b.num) and (di.d^[i].pos.b.num<>0) then
        -- jméno nového souboru
        used_files^.find(di.d^[i].pos.b.num,p_hash_table_item(fname));
        s:='file ';
        if fname=nil
          then s & '<unknown>';
          else s & fname^.name^;
          end if;
        listing^.write_line(s);
        lastnum:=di.d^[i].pos.b.num;
        end if;

      -- vlastní řádková informace
      s:='line ' & cpu^.unidata_addr_to_hex_string(addr+unsigned_to_unidata_addr(di.d^[i].ofs)) & " " 
                 & str_adjust(tdebugtagtypetxt[di.d^[i].typ],9,[se_right]," ",st_no,[se_right]) & " " 
                 & lexposblock_to_string(di.d^[i].pos,true);
      listing^.write_line(s);
      end loop;
    end if;
  end map_subprogram_lineinfo;



----------------------------------------------------------------------------------------------------
procedure map_end_subprogram =
-- Konec podprogramu.
----------------------------------------------------------------------------------------------------
begin
  listing^.end_indent;
  end map_end_subprogram;



end cl_map;
