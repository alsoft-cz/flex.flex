---------------------------------------------------------------------------------------------------
module public vars =
-- Flex Run-time Library
-- Thread variables
-- Copyright (C) 1999-2003 A && L soft
----------------------------------------------------------------------------------------------------

const
    tv_hash_size   = 101;

type
    t_threadvar_id = t_rtl_native_unsigned;

    t_tv_var;
    p_tv_var = ^t_tv_var;
    t_tv_var = record
      threadvarid  : t_threadvar_id;
      next_var     : p_tv_var;
      inheritable  : t_rtl_logical8;
      data         : t_rtl_pointer;
      end record;

    t_thread_vars = record
      hash_tv_var  : array 0..tv_hash_size-1 of p_tv_var;
      end record;
    p_thread_vars = ^t_thread_vars;

type
    t_rtl_threadvar_entry = procedure (
    address        : t_rtl_pointer;
    threadvarid    : in t_threadvar_id;          
    threadhead     : in p_thread_header);
    p_rtl_threadvar_entry = ^t_rtl_threadvar_entry;

    t_rtl_threadvar_adjust = procedure (
    newaddress     : t_rtl_pointer;
    oldaddress     : t_rtl_pointer;
    threadvarid    : in t_threadvar_id;          
    threadhead     : in p_thread_header;
    origthreadhead : in p_thread_header);
    p_rtl_threadvar_adjust = ^t_rtl_threadvar_adjust;

    t_rtl_threadvar_exit = procedure (
    address        : t_rtl_pointer;
    threadvarid    : in t_threadvar_id;          
    threadhead     : in p_thread_header);
    p_rtl_threadvar_exit = ^t_rtl_threadvar_exit;

----------------------------------------------------------------------------------------------------
procedure rtl_alloc_threadvarid (
    size           : in t_rtl_native_unsigned;   -- size of variable in bytes
    threadvarid    : out ref t_threadvar_id;     -- handle to thread var
    inheritable    : in t_rtl_logical8:=false;
    immediate      : in t_rtl_logical8:=false;
    tv_entry       : in p_rtl_threadvar_entry:=nil;    -- pointer na proceduru entry
    tv_adjust      : in p_rtl_threadvar_adjust:=nil;   -- pointer na proceduru adjust (kopirovani), pokud je nil provede se binarni kopirovani
    tv_exit        : in p_rtl_threadvar_exit:=nil);    -- pointer na proceduru entry
-- allocate thread variable handle
----------------------------------------------------------------------------------------------------
procedure rtl_free_threadvarid (
    threadvarid    : in out ref t_threadvar_id);     -- handle to thread var
-- free thread variable handle
----------------------------------------------------------------------------------------------------
procedure rtl_create_threadvar (
    threadvarid    : in t_threadvar_id;          -- handle to thread var
    threadhead     : in p_thread_header;
    origthreadhead : in p_thread_header:=nil
    ) return t_rtl_pointer;
-- returns pointer to threadvar
----------------------------------------------------------------------------------------------------
procedure rtl_get_threadvar (
    threadvarid    : in t_threadvar_id           -- handle to thread var
    ) return t_rtl_pointer;
-- returns pointer to threadvar
----------------------------------------------------------------------------------------------------
procedure rtl_get_threadvar_other (
    threadvarid    : in t_threadvar_id;          -- handle to thread var
    threadhead     : in p_thread_header
    ) return t_rtl_pointer;
-- returns pointer to threadvar
----------------------------------------------------------------------------------------------------
procedure rtl_free_threadvar (
    threadvarid    : in t_threadvar_id;          -- handle to thread var
    currthreadhead : in p_thread_header:=nil);
----------------------------------------------------------------------------------------------------
procedure rtl_set_threadvar_inheritance (
    threadvarid    : in t_threadvar_id;          -- handle to thread var
    --threadhead     : in p_thread_header;
    inheritable    : in t_rtl_logical8
    );
-- sets inheritance
----------------------------------------------------------------------------------------------------
procedure rtl_initialize_all_threadvars (
    threadhead     : in p_thread_header;
    origthreadhead : in p_thread_header
    );
-- copy all inheritable & immediate threadvars
----------------------------------------------------------------------------------------------------
procedure rtl_discard_all_threadvars (
    threadhead     : in p_thread_header
    );
-- discard all threadvars
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
#separate public os;
----------------------------------------------------------------------------------------------------

end vars;