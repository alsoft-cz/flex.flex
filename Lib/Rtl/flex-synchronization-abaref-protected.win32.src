----------------------------------------------------------------------------------------------------
-- ABA referecne counting pointer and item
----------------------------------------------------------------------------------------------------
type
  t_rtl_abaref_pointer = record
    ptr            : p_rtl_abaref_item;          -- ukazatel
    refcount       : t_rtl_signed16;             -- pocet threadu prave dereferencujicich ptr^.next
                                                 -- pri zmene pointeru first se resetuje na 0 a hodnota se 
                                                 -- jako zaporna prenasi na item.refcount
    abacount       : t_rtl_unsigned16;           -- pocitadlo ktere stale roste a je modularni po 
                                                 -- prime_smaller_than_16_bit_unsigned prvcich
                                                 -- resi ABA' problem, pri pop ze stacku
                                                   -- ptr je A
                                                   -- prectu a^.next ktere se rovna X
                                                   -- zastavim se
                                                   -- jiny mezitim thread udela pop A, push B, push A'
                                                   -- nyni je A'^.next = B
                                                   -- takze moje jiz nactene X je spatne
                                                   -- proto se pri kazde operaci zvedne ABAcount
                                                 -- rotuje se na prvocislo aby se jeste snizila 
                                                 -- pravdepodobnost next=next' and abacount=abacount'
    end record;

  -- pomocny record pro seznam polozek
  t_rtl_abaref_item= record                      
    next           : t_rtl_abaref_pointer;
    refcount       : aliased t_rtl_native_signed;-- pomocne pocitadlo pri dereferencovani ptr^.next
    data           : t_rtl_pointer;              -- ukazatel na samotne data
    invalid        : aliased t_rtl_native_signed;-- pro set, 0 znamena platny prvek, jinak prave odstranovany prvek
    end record;



----------------------------------------------------------------------------------------------------
-- nonblocking LIFO
----------------------------------------------------------------------------------------------------
type
  t_rtl_slifo = record
      first        : aliased t_rtl_abaref_pointer; -- abaref pointer na zacatek stacku
      end record;



----------------------------------------------------------------------------------------------------
-- nonblocking stack
----------------------------------------------------------------------------------------------------
type
  t_rtl_sstack = t_rtl_slifo with record         -- struktura stacku
    waitable       : t_rtl_logical8;             -- priznak zda se ma cekat
    reserve1       : t_rtl_logical8;
    reserve2       : t_rtl_logical8;
    reserve3       : t_rtl_logical8;
    --is waitable
      critisem     : t_rtl_critisem;             -- semafor pro cekani na prazdny stack
                                                 -- pro pocet prvku mensi nez pocet ctecich 
                                                 -- threadu blokujici ve smyslu prvku ktere se 
                                                 -- jiz zacali cist
    -- else
      count        : aliased t_rtl_native_signed -- inverzni pocitadlo prvku
                     for position use 12;        -- na stejnem offsxetu jako pocitadlo critisemu
    -- end if waitable
    end record;

----------------------------------------------------------------------------------------------------
-- nonblocking FIFO
----------------------------------------------------------------------------------------------------
type
  t_rtl_sfifo      = record
      head         : aliased t_rtl_abaref_pointer; -- abaref pointer na zacatek fronty
      tail         : aliased t_rtl_abaref_pointer; -- abaref pointer na konec fronty
      end record;



----------------------------------------------------------------------------------------------------
-- nonblocking queue
----------------------------------------------------------------------------------------------------
type
  t_rtl_squeue = t_rtl_sfifo with record         -- struktura fronty
    waitable       : t_rtl_logical8;             -- priznak zda se ma cekat
    reserve1       : t_rtl_logical8;
    reserve2       : t_rtl_logical8;
    reserve3       : t_rtl_logical8;
    --is waitable
      critisem     : t_rtl_critisem;             -- semafor pro cekani na prazdnou frontu
                                                 -- pro pocet prvku mensi nez pocet ctecich 
                                                 -- threadu blokujici ve smyslu prvku ktere se 
                                                 -- jiz zacali cist
    -- else
      count        : aliased t_rtl_native_signed -- inverzni pocitadlo prvku
                     for position use 20;        -- na stejnem offsxetu jako pocitadlo critisemu
    -- end if waitable
    end record;


----------------------------------------------------------------------------------------------------
-- nonblocking singly linked set
----------------------------------------------------------------------------------------------------
type
  t_rtl_sset = t_rtl_sfifo;                      -- struktura listu
  t_rtl_sset_iterrator = t_rtl_abaref_pointer;   -- iterator

