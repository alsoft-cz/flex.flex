----------------------------------------------------------------------------------------------------
procedure rtl_squeue_new(
    squeue        : out ref t_rtl_squeue;
    waitable      : in t_rtl_logical8;
    freedata       : in p_rtl_ref_free_resource:=nil); -- userdata free procedure
-- Create new synchronized dynamic queue
----------------------------------------------------------------------------------------------------
procedure rtl_squeue_discard(
    squeue         : in out ref t_rtl_squeue);
-- Discard synchronized dynamic queue
----------------------------------------------------------------------------------------------------
procedure rtl_squeue_reset(
    squeue         : in out ref t_rtl_squeue);
-- clean queue
----------------------------------------------------------------------------------------------------
procedure rtl_squeue_move(
    fromqueue      : in out ref t_rtl_squeue;
    toqueue        : in out ref t_rtl_squeue);
-- move queue data, tosqueue must be empty, non-atomic
----------------------------------------------------------------------------------------------------
procedure rtl_squeue_append(
    squeue         : in out ref t_rtl_squeue;
    data           : in t_rtl_pointer);
-- insert data into queue
----------------------------------------------------------------------------------------------------
procedure rtl_squeue_draw_out(
    squeue         : in out ref t_rtl_squeue;
    data           : out t_rtl_pointer)
    return         t_rtl_logical8;
-- withdraw data
----------------------------------------------------------------------------------------------------
procedure rtl_squeue_try_draw_out(
    squeue         : in out ref t_rtl_squeue;
    data           : out t_rtl_pointer;
    milisec        : in t_rtl_timeout)
    return         t_rtl_logical8;
-- try withdraw data
----------------------------------------------------------------------------------------------------
{
procedure rtl_squeue_try_pin(
    squeue         : in out ref t_rtl_squeue;
    tack           : out t_rtl_squeue_iterrator;
    data           : out t_rtl_pointer;
    milisec        : in t_rtl_timeout)
    return         t_rtl_logical8;
-- try start peek at first item
----------------------------------------------------------------------------------------------------
procedure rtl_squeue_try_get_pinned(
    squeue         : in out ref t_rtl_squeue;
    tack           : in out t_rtl_sset_peek_tack;
    data           : out t_rtl_pointer)
    return         t_rtl_logical8;
-- try get peeked item
----------------------------------------------------------------------------------------------------
procedure rtl_squeue_drop_pin(
    squeue         : in out ref t_rtl_squeue;
    tack           : in out t_rtl_sset_peek_tack);
-- dispose peeked item
----------------------------------------------------------------------------------------------------
}