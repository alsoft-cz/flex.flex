----------------------------------------------------------------------------------------------------
module public synchronization =
-- Flex Run-time Library
-- Synchronization Manager
-- Copyright (C) 1999-2003 A && L soft
----------------------------------------------------------------------------------------------------
with 
    os_api,
    hw_api
    ;

type
  -- kernel mutex object
  t_rtl_mutex;
  p_rtl_mutex           = ^t_rtl_mutex           for machine_pointer use true;
  -- kernel semaphore object
  t_rtl_semaphore;
  p_rtl_semaphore       = ^t_rtl_semaphore       for machine_pointer use true;
  -- kernel event object
  t_rtl_event;
  p_rtl_event           = ^t_rtl_event           for machine_pointer use true;
  -- interlocked mutex object
  t_rtl_critical;
  p_rtl_critical        = ^t_rtl_critical        for machine_pointer use true;
  -- interlocked semaphore object
  t_rtl_critisem;
  p_rtl_critisem        = ^t_rtl_critisem        for machine_pointer use true;
  -- interlocked non-blocking stack (LIFO)
  t_rtl_sstack;
  p_rtl_stack           = ^t_rtl_sstack          for machine_pointer use true;
  -- interlocked non-blocking queue (FIFO)
  t_rtl_squeue;
  p_rtl_queue           = ^t_rtl_squeue          for machine_pointer use true;
  -- interlocked non-blocing singly linked list
  t_rtl_sset;
  t_rtl_sset_iterrator;
  p_rtl_sset           = ^t_rtl_sset           for machine_pointer use true;
  p_rtl_sset_iterrator = ^t_rtl_sset_iterrator for machine_pointer use true;
  -- pointer uzivatelske procedury ktera se ma spustit pri uvolnovani uzivatelskych dat v seznamu
  t_rtl_list_free_data = procedure (
    data           : in out t_rtl_pointer);
  p_rtl_list_free_data = ^t_rtl_list_free_data;
  
  -- mostly interlocked single writer - multiple readers
  t_rtl_readers;

----------------------------------------------------------------------------------------------------
#include 'flex-synchronization-sleep.pub';
#include 'flex-synchronization-mutex.pub';
#include 'flex-synchronization-semaphore.pub';
#include 'flex-synchronization-event.pub';
#include 'flex-synchronization-critical.pub';
#include 'flex-synchronization-critisem.pub';
#include 'flex-synchronization-stack.pub';
#include 'flex-synchronization-queue.pub';
#include 'flex-synchronization-set.pub';
#include 'flex-synchronization-readers.pub';
----------------------------------------------------------------------------------------------------

protected
----------------------------------------------------------------------------------------------------
--%%TODO flex !!! #separate protected synchronization;
#if os_win32 then;
  #include 'flex-synchronization-protected.win32.src';
#end if;
----------------------------------------------------------------------------------------------------

end synchronization;