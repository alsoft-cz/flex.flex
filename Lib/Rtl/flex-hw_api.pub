----------------------------------------------------------------------------------------------------
module public hw_api =
-- Flex Run-time Library
-- WIN32 API
-- Copyright (C) 1999-2003 A && L soft
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
procedure rtl_interlocked_compare_exchange(
    locked_value   : p_rtl_native_signed;
    new_value      : in t_rtl_native_signed;
    when_locked_eq : in t_rtl_native_signed;
    old_value      : out t_rtl_native_signed);
----------------------------------------------------------------------------------------------------
procedure rtl_interlocked_compare_exchange_ptr(
    locked_value   : p_rtl_native_unsigned;
    new_value      : in t_rtl_native_unsigned;
    when_locked_eq : in t_rtl_native_unsigned;
    old_value      : out t_rtl_native_unsigned);
----------------------------------------------------------------------------------------------------
procedure rtl_interlocked_exchange_add(
    locked_value   : p_rtl_native_signed;
    add_value      : in t_rtl_native_signed;
    old_value      : out t_rtl_native_signed);
----------------------------------------------------------------------------------------------------
procedure rtl_interlocked_inc_out(
    locked_value   : p_rtl_native_signed;
    old_value      : out t_rtl_native_signed);
----------------------------------------------------------------------------------------------------
procedure rtl_interlocked_dec_out(
    locked_value   : p_rtl_native_signed;
    old_value      : out t_rtl_native_signed);
----------------------------------------------------------------------------------------------------
procedure rtl_interlocked_inc(
    locked_value   : p_rtl_native_signed);
----------------------------------------------------------------------------------------------------
procedure rtl_interlocked_dec(
    locked_value   : p_rtl_native_signed);
----------------------------------------------------------------------------------------------------
procedure rtl_interlocked_dec_if_greater_than(
    locked_value   : p_rtl_native_signed;
    sub_value      : in t_rtl_native_signed;
    when_locked_gt : in t_rtl_native_signed;
    old_value      : out t_rtl_native_signed);
----------------------------------------------------------------------------------------------------
procedure rtl_intelocked_increment_if_less_than(
    locked_value   : p_rtl_native_signed;
    add_value      : in t_rtl_native_signed;
    when_locked_lt : in t_rtl_native_signed;
    old_value      : out t_rtl_native_signed);
----------------------------------------------------------------------------------------------------




----------------------------------------------------------------------------------------------------
-- pocet procesoru na cilovem stroji
const
    target_machine_processor_count_unknown       = 0;

{
--Navod:
--pokud znate pocet procesoru na cilove mashine definujte neco jako
const
    target_machine_processor_count = 1;
}


#if not #declared target_machine_processor_count; then;
-- default, unknown pri kompilaci 
var
    target_machine_processor_count : t_rtl_unsigned32 := target_machine_processor_count_unknown;
const
    target_machine_can_be_multiprocesor = true;
    target_machine_processor_count_compiled = false;
#else;
  #if (target_machine_processor_count=1) then;
const
    target_machine_can_be_multiprocesor = false;
  #else;
const
    target_machine_can_be_multiprocesor = true;
  #end if;
    target_machine_processor_count_compiled = true;
#end if;


#if not #declared rtl_debug_break_try_spin; then;
const
  rtl_debug_break_try_spin = 1=0;
#end if;

----------------------------------------------------------------------------------------------------
-- makra
----------------------------------------------------------------------------------------------------


#if target_machine_can_be_multiprocesor then;
#template lockbus; lock #end lockbus;
#else;
#template lockbus;#end lockbus;
#end if;

----------------------------------------------------------------------------------------------------
#template pause_nop;
----------------------------------------------------------------------------------------------------
  #syntax asm;
    pause;
    #end asm;
  #end pause_nop;

end hw_api;