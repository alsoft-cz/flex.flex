#option image_base($1000_0000-$400_0000);

const
  -- language defined constants
  false            = 0<>0;
  true             = 0 =0;
  
type
  -- language defined data types
--%%TODO zapnout #if az se prestane pouzivat numerics override
--#if not #declared rtl_debug; #or else; not rtl_debug then; -- v rtl_debug neni proto abychom to omylem nepouzivali
  char             = character 32;
  boolean          = logical 8;
  integer          = signed #environment target_machine_bits;;
  natural          = unsigned #environment target_machine_bits;;
  real             = float 64;
--#end if;
  exception        = message;

message
  -- basic language defined messages
  program_error    : exception;                  -- defined by language reference
  task_abort       : exception;                  -- defined by language reference

  -- other language defined messages
  memory_error          extend program_error;    -- defined by language reference
  tasking_error         extend program_error;    -- defined by language reference
  numeric_error         extend program_error;    -- defined by language reference
  constraint_error      extend program_error;    -- defined by language reference
  type_error            extend program_error;    -- defined by language reference
  implementation_error  extend program_error;    -- defined by language reference
  generic_error         extend program_error;    -- defined by language reference
  abstract_error        extend program_error;    -- defined by language reference



----- <Begin temporary code> -----------------------------------------------------------------------
#include 'flex-extensions_before.src';
----- <End temporary code> -------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------
module flex =
-- Flex Run-time Library
-- Copyright (C) 1999-2004 A && L soft
----------------------------------------------------------------------------------------------------

#option required_security(100);


----------------------------------------------------------------------------------------------------
-- Disable heap and stack validation within the RTL.
-- Doing otherwise can lead to unexpected results.
----------------------------------------------------------------------------------------------------
#option validate_heap(false);
#option validate_stack(false);
----------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------
-- Temporarily made public, revert to supervised when [flex.numerics] becomes obsolete.
-- %%TODO(FIXED) %%TODO(INT64) %%TODO(FLOAT)
-- supervised
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
#template rtl_config_switch (name,default_value);
-- Declares an RTL configuration switch.
----------------------------------------------------------------------------------------------------
  #if not #declared name; then;
    const name = default_value;
  #end if;  
  #end rtl_config_switch;

----------------------------------------------------------------------------------------------------
#separate configuration_switches;
-- Individual RTL configuration switches.
----------------------------------------------------------------------------------------------------


    
    
----- Target platform ------------------------------------------------------------------------------
const
  -- operating system selection (to ease conditional compilation)
  os_win32         = #environment target_os_family;='WIN32';
  os_linux         = #environment target_os_family;='UNIX' and then #environment target_os_type;='LINUX';

  -- subsystem
  sub_console      = #environment target_os_subsystem_type;='CONSOLE';
  sub_gui          = #environment target_os_subsystem_type;='GUI';

#if rtl_debug then;
  #if rtl_advanced then;
    #display 'Advanced Run-time Library debugging mode';
  #else;
    #display 'Run-time Library debugging mode';
  #end if;
  #if os_win32 then;
    #display 'Platform: Win32';
  #elsif os_linux then;
    #display 'Platform: Linux';
  #else;
    #error 'RTL Internal Error: Unrecognized operating system 1';
  #end if;
#end if;


    
----------------------------------------------------------------------------------------------------
#separate types;
-- private rtl types
----------------------------------------------------------------------------------------------------
#separate os_api;
-- Core operating system APIs.
----------------------------------------------------------------------------------------------------
#separate public numerics;
-- Numeric support
----------------------------------------------------------------------------------------------------
#separate public partitions;
-- Multiple compilation partitions support.
----------------------------------------------------------------------------------------------------
#separate public hw_api;
-- Hardware primitives
----------------------------------------------------------------------------------------------------
#separate public references;
-- resource reference helpers
----------------------------------------------------------------------------------------------------
#separate public structures;
-- simple structures
----------------------------------------------------------------------------------------------------
#separate public synchronization;               
-- Synchronization manager.
----------------------------------------------------------------------------------------------------
#separate public exceptions;                     
-- Exceptions (asynchronous messages).
----------------------------------------------------------------------------------------------------
#separate public tags;                           
-- Tags.
----------------------------------------------------------------------------------------------------
#separate public tasks;                         
-- tasks
----------------------------------------------------------------------------------------------------
#separate public memory;                         
-- Memory manager.
----------------------------------------------------------------------------------------------------
--#separate public messages;                       
-- Messages.
----------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------
supervised
-- Join with newly established supervised part above, once the public part reverts to supervised
-- %%TODO(FIXED) %%TODO(INT64) %%TODO(FLOAT)
----------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------
#separate public errors;
-- Run_time error handling.
----------------------------------------------------------------------------------------------------
#separate public checks;
-- Run-time checks support.
----------------------------------------------------------------------------------------------------
#separate public stack;                          
-- tasks stacks
----------------------------------------------------------------------------------------------------
#separate public rtl_init;                           
-- Runtime inicialization
----------------------------------------------------------------------------------------------------

private

----------------------------------------------------------------------------------------------------
#separate private partitions;
-- Multiple compilation partitions support.
----------------------------------------------------------------------------------------------------
#separate private hw_api;
-- Hardware primitives
----------------------------------------------------------------------------------------------------
#separate private numerics;
-- Numeric support
----------------------------------------------------------------------------------------------------
#separate private references;
-- resource reference helpers
----------------------------------------------------------------------------------------------------
#separate private structures;
-- simple structures
----------------------------------------------------------------------------------------------------
#separate private synchronization;               
-- Synchronization manager.
----------------------------------------------------------------------------------------------------
#separate private exceptions;                    
-- Exceptions (asynchronous messages).
----------------------------------------------------------------------------------------------------
#separate private stack;                          
-- tasks stacks
----------------------------------------------------------------------------------------------------
#separate private tasks;                        
-- tasks
----------------------------------------------------------------------------------------------------
#separate private memory;                        
-- Memory manager.
----------------------------------------------------------------------------------------------------
--#separate private messages;                      
-- Messages.
----------------------------------------------------------------------------------------------------
#separate private tags;                          
-- Tags.
----------------------------------------------------------------------------------------------------
#separate private errors;
-- Runtime error handling
----------------------------------------------------------------------------------------------------
#separate private checks;
-- Run-time checks support.
----------------------------------------------------------------------------------------------------
#separate private rtl_init;                           
-- Runtime inicialization
----------------------------------------------------------------------------------------------------



----- Compiler magic -------------------------------------------------------------------------------
#pragma assign(program_error       ,program_error);
#pragma assign(memory_error        ,memory_error);
#pragma assign(tasking_error       ,tasking_error);
#pragma assign(numeric_error       ,numeric_error);
#pragma assign(constraint_error    ,constraint_error);
#pragma assign(type_error          ,type_error);
#pragma assign(implementation_error,implementation_error);
#pragma assign(generic_error       ,generic_error);
#pragma assign(abstract_error      ,abstract_error);
----------------------------------------------------------------------------------------------------

end flex;



----- <Begin temporary code> -----------------------------------------------------------------------
#include 'flex-extensions_after.src';
----- <End temporary code> -------------------------------------------------------------------------
