----------------------------------------------------------------------------------------------------
-- %%TODO(COMMENT)
-- Flex Advanced Run-time Library
-- Copyright (C) 1999-2004 A && L soft
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
procedure rtl_event_new =
-- new event
----------------------------------------------------------------------------------------------------
begin 
  if not rtl_sstack_pop(rtl_g_event_pool,t_rtl_pointer(event_object:unchecked)) then
    -- need allocate
    basic.rtl_event_new(event_object);
    end if;
  end rtl_event_new;


----------------------------------------------------------------------------------------------------
procedure rtl_event_discard =
-- discard event
----------------------------------------------------------------------------------------------------
begin 
  if rtl_g_event_pool.count>rtl_g_event_amplitude then
    basic.rtl_event_discard(event_object);
  else
    rtl_sstack_push(rtl_g_event_pool,t_rtl_pointer(event_object:unchecked))
    end if;
  end rtl_event_discard;


----------------------------------------------------------------------------------------------------
procedure rtl_event_wait =
-- wait for event and reset event
----------------------------------------------------------------------------------------------------
begin 
  basic.rtl_event_wait(event_object);
  end rtl_event_wait;



----------------------------------------------------------------------------------------------------
procedure rtl_event_try =
-- test if event is set & try grab it
----------------------------------------------------------------------------------------------------
begin 
  result:=basic.rtl_event_try(event_object,milisec);
  end rtl_event_try;



----------------------------------------------------------------------------------------------------
procedure rtl_event_set =
-- sets event
----------------------------------------------------------------------------------------------------
begin 
  basic.rtl_event_set(event_object);
  end rtl_event_set;

----------------------------------------------------------------------------------------------------
procedure rtl_event_reset =
-- sets event
----------------------------------------------------------------------------------------------------
begin 
  basic.rtl_event_reset(event_object);
  end rtl_event_reset;
