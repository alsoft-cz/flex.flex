----------------------------------------------------------------------------------------------------
module public cc_def =
-- P©eklada‡ Flexu.
-- Z kladn¡ deklarace.
----------------------------------------------------------------------------------------------------
-- Ondra : 25.04.2000 : Vytvo©il
----------------------------------------------------------------------------------------------------

with
  standard;

----- Z kladn¡ deklarace ---------------------------------------------------------------------------
type
  -- spole‡n˜ p©edek intern¡ch struktur p©eklada‡e
  tflexrecord      = record
      end record;
  pflexrecord      = ^class tflexrecord;

-- spole‡n˜ p©edek intern¡ch t©¡d p©eklada‡e
class tflexclass   = end tflexclass;

type
  pflexclass       = ^class tflexclass;



----- Identifik tory -------------------------------------------------------------------------------
type
  -- znak identifik toru
  tidentchar       = protected character 32;

  -- identifik tor entity
  tentityident     = private string of tidentchar;
  pentityident     = ^tentityident;

  -- intern¡ zkr cen˜ identifik tor
  tshortident      = protected tentityident range 63;
  pshortident      = ^tshortident;

const
  -- NIL syst‚mov‚ho ©etˆzce
  sysstr_nil       = '';
  sysstr_nil_image = 'NIL';


----------------------------------------------------------------------------------------------------
procedure entityident_to_string (
    ident          : in tentityident)
                   return t_char32str;
-- P©evede identifik tor na ©etˆzec.
----------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------
procedure verify (
    code           : in t_unsigned;              -- kod intern¡ chyby
    cond           : in t_logical);              -- T-chyba
-- Je-li COND=True zp–sob¡ intern¡ chybu CODE.
----------------------------------------------------------------------------------------------------
procedure unimplemented (
    code           : in t_unsigned);             -- kod intern¡ chyby
-- Zp–sob¡ chybu Neimplementov no.
----------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------
#separate public cc_unitype;
#separate private cc_unitype;
-- Univerz ln¡ aritmetika.
----------------------------------------------------------------------------------------------------
#separate cc_codes;
-- K¢dy chyb a varov n¡
----------------------------------------------------------------------------------------------------



----- Parametry p©eklada‡e -------------------------------------------------------------------------
type
  -- parametry p©eklada‡e
  toption          = enum
      opt_dump;                                  -- dump
      opt_dump_code;                             -- dump k¢du
      opt_dump_regs;                             -- dump pou‘it¡ registr–
      opt_range_checking;                        -- kontrola mez¡
      opt_overflow_checking;                     -- kontrola p©ete‡en¡
      end enum;
  toptionset       = set of toption;

  toptiondesc      = record
      txt          : tshortident;
      opt          : toption;
      end record;

  -- parametry p©ekladu
  tcompvar         = record
      opts         : toptionset;                 -- parametry p©eklada‡e
      warns        : cc_codes.twarningcodeset;   -- varov n¡
      end record;

var
{%OFF}
  toptiontab       : const array 0..4 of toptiondesc := [
      [for txt use 'DUMP'              , for opt use opt_dump             ],
      [for txt use 'DUMP_CODE'         , for opt use opt_dump_code        ],
      [for txt use 'DUMP_REGS'         , for opt use opt_dump_regs        ],
      [for txt use 'RANGE_CHECKING'    , for opt use opt_range_checking   ],
      [for txt use 'OVERFLOW_CHECKING' , for opt use opt_overflow_checking]];

  opt_warning      : const tshortident := 'WARNING';
{%ON}



----------------------------------------------------------------------------------------------------
#separate public cc_lexsym;
-- Definice lexik ln¡ch symbol–.
----------------------------------------------------------------------------------------------------
#separate public cc_errors;
-- Seznam chybov˜ch hl ¨en¡.
----------------------------------------------------------------------------------------------------
#separate cc_desc;
-- Popisy c¡lov˜ch platforem.
----------------------------------------------------------------------------------------------------
#separate public cc_env;
-- #environment promˆnn‚.
----------------------------------------------------------------------------------------------------
#separate public cc_entity;
-- Definice tabulky symbol–.
----------------------------------------------------------------------------------------------------
#separate public cc_tree;
-- Spole‡n‚ deklarace pro rozklad v˜razu a bloku.
----------------------------------------------------------------------------------------------------
#separate public cc_cpuspecific;
#separate private cc_cpuspecific;
-- Vlastnosti specifick‚ pro konkr‚tn¡ procesor.
----------------------------------------------------------------------------------------------------
#separate public cc_osspecific;
#separate private cc_osspecific;
-- Vlastnosti specifick‚ pro konkr‚tn¡ opera‡n¡ syst‚m.
----------------------------------------------------------------------------------------------------
#separate public cc_files;
-- Seznam soubor–.
----------------------------------------------------------------------------------------------------
#separate public cc_list;
#separate private cc_list;
----------------------------------------------------------------------------------------------------
#separate public cc_var;
#separate private cc_var;
-- ž¡d¡c¡ promˆnn‚ pro p©eklad.
----------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------
procedure verifyx (
    code           : in t_unsigned;              -- kod intern¡ chyby
    cond           : in t_logical;               -- T-chyba
    pos            : in cc_lexsym.lexposblock);  -- pozice chyby
-- Je-li COND=True zp–sob¡ intern¡ chybu CODE.
----------------------------------------------------------------------------------------------------
procedure unimplementedx (
    code           : in t_unsigned;              -- kod intern¡ chyby
    pos            : in cc_lexsym.lexposblock);  -- pozice chyby
-- Zp–sob¡ chybu Neimplementov no.
----------------------------------------------------------------------------------------------------

end cc_def;
