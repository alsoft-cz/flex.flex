-- -sd:p:\ol40\lib\rtl -sd:p:\ol40\lib\sys -sd:p:\ol40\lib\sys\win32 -sd:p:\ol40\lib\smpl -sd:p:\ol40\lib\ampl -sd:p:\ol40\flex -sd:p:\ol40\flex\fcc p:\ol40\flex\fcc\fcc.src -odx:d:\ol40\output

----------------------------------------------------------------------------------------------------
module private ff_main =
-- Flex Command-line Compiler
----------------------------------------------------------------------------------------------------

with
  standard,
  standard.names,
  compiler;

message
  fcc_error        : exception;

var
  -- konfigurace p©ekladu
  src_name         : p_text_name;                -- jm‚no zdrojov‚ho souboru
  exe_name         : p_text_name;                -- jm‚no EXE souboru
  lst_name         : p_text_name;                -- jm‚no listingu
  exe_extension    : p_text_name;                -- extenze EXE souboru
  exe_directory    : p_text_name;                -- adres © pro EXE soubor
  mod_directory    : p_text_name;                -- adres © pro p©elo‘en‚ moduly

const
  default_exe_extension = 'exe';                 -- implicitn¡ p©¡pona EXE souboru
  lst_extension         = 'lst';                 -- p©¡pona listingu

----------------------------------------------------------------------------------------------------
#separate public  ff_text_output;
#separate private ff_text_output;
-- N stroje pro generov n¡ textov‚ho v˜stupu po p©ekladu.
----------------------------------------------------------------------------------------------------
#separate public  ff_files;
#separate private ff_files;
-- Seznam jmen soubor–.
----------------------------------------------------------------------------------------------------
#separate public  ff_cmd_line;
#separate private ff_cmd_line;
-- Zpracov n¡ p©¡kazov‚ © dky.
----------------------------------------------------------------------------------------------------

const
#if flex_version=flex_personal then;
  program_name     = 'Flex(R) 4.0 Personal Edition / Command-line Compiler';
  license_notice   = 'This program is free software - see the License Agreement for limitations';
#elsif flex_version=flex_professional then;
  program_name     = 'Flex(R) 4.0 Professional / Command-line Compiler';
--license_notice   = 'This program is NOT free software';
#elsif flex_version=flex_enterprise then;
  program_name     = 'Flex(R) 4.0 Enterprise / Command-line Compiler';
--license_notice   = 'This program is NOT free software';
#elsif flex_version=flex_alsoft then;
  program_name     = 'Flex(R) 4.0 A && L soft Internal Edition / Command-line Compiler';
  license_notice   = 'For internal use of A && L soft only - DO NOT DISTRIBUTE';
#else;
  #error 'Nezn m  verze Flexu';
#end if;
  copyright        = 'Copyright (C) 1995-2003  A && L soft';

----------------------------------------------------------------------------------------------------
procedure fcc_main =
-- Hlavn¡ program.
----------------------------------------------------------------------------------------------------
with
  standard,
  standard.console,
  ff_cmd_line,
  ff_text_output,
  ff_files;

use
  cc_def,
  cc_def.cc_var;


    ------------------------------------------------------------------------------------------------
    procedure adjust_file_name (
        org_name   : in t_text_name;             -- p–vodn¡ jm‚no soubor–
        directory  : in p_text_name;             -- voliteln‚ jm‚no b zov‚ho adres ©e
        extension  : in t_text_name;             -- extenze
        new_name   : out p_text_name) =          -- nov‚ jm‚no souboru
    -- Zmˆn¡ extenzi a pop©¡padˆ zmˆn¡ adres © zadan‚ho jm‚na.
    ------------------------------------------------------------------------------------------------
    var
      name         : c_name;                     -- dekomponovan‚ jm‚no
      full_name    : c_name;                     -- jm‚no v‡etnˆ adres ©e

    begin
      -- rozlo‘it p–vodn¡ jm‚no
      name.decompose_name(org_name,tnt_unspecified);

      -- nahradit p©¡ponu
      replace_source_extension(name,extension);

      -- m me zadan˜ adres © ?
      if directory<>nil

        -- ano => doplnit do jm‚na
        then
          full_name.decompose_name(directory^,tnt_unspecified);
          full_name.components.insert(name.components.remove_last);
          full_name.compose_name(new_name);

        -- ne => a je to
        else
          name.compose_name(new_name);
          end if;
      end adjust_file_name;

var
  compiler         : c_flex_compiler;

begin
  -- initial copyright notice
  -- %%TODO(DYNAMIC) write_line(program_name & '   ' & copyright);
  write_line(program_name); 
  write_line(copyright);
#if #declared license_notice; then;
  write_line(license_notice);
#end if;
  write_line('');

  -- p©ipravit seznam jmeno dostupn˜ch soubor–
  new p_file_source_external_files(cc_def.cc_var.cfg_files);

  -- zpracovat © dkov‚ parametry
  parse_command_line(console_output^);

  -- bylo uvedeno jm‚no souboru ?
  if src_name=nil then
    write_line('Source file name not specified');
    raise fcc_error;
    end if;

  -- doplnit default extenzi EXE
  if exe_extension=nil then
    new exe_extension range default_exe_extension:length;
    exe_extension^:=default_exe_extension;
    end if;

  -- vypo‡¡tat jm‚no EXE
  adjust_file_name(src_name^,exe_directory,exe_extension^,exe_name);

  -- vypo‡¡tat jm‚no 
  adjust_file_name(src_name^,exe_directory,lst_extension,lst_name);

  -- p©elo‘it
  compiler.compile(console_output^,src_name^,exe_name^,lst_name^);

  -- vypsat seznam chyb na obrazovku a do listingu
  print_errors(console_output^);
  print_errors(compiler.listing.get_output_text_stream^);

catch
  when fcc_error do
      -- nic nedˆlat, p©¡padn‚ chybov‚ hl ¨en¡ je ji‘ zobrazen‚
  end fcc_main;

end ff_main;